{"pageProps":{"libId":"uikit","componentId":"dropdown-menu","readmeContent":"<!--GITHUB_BLOCK-->\n\n# DropdownMenu\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {DropdownMenu} from '@gravity-ui/uikit';\n```\n\n下拉菜单组件提供项目分组、子菜单和可自定义的开关。下拉菜单项使用该 `items` 属性进行配置。默认情况下，菜单切换是一个带有省略号图标 (**. ..** 的按钮，可以用该属性覆盖。 `renderSwitcher`\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    items={[\n        {\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        items={[\n            {\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  items={[\n    {\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 分组的物品\n\n`DropdownMenu` 通过引入嵌套到数组中的菜单项数组，可以对项目进行分 `items` 组并在视觉上与其他菜单项分开。\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    items={[\n        [\n            {\n                action: () => console.log('Call'),\n                text: 'Call',\n            },\n            {\n                action: () => console.log('Send email'),\n                text: 'Send email',\n            },\n        ],\n        {\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        items={[\n            [\n                {\n                    action: () => console.log('Call'),\n                    text: 'Call',\n                },\n                {\n                    action: () => console.log('Send email'),\n                    text: 'Send email',\n                },\n            ],\n            {\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  items={[\n    [\n      {\n        action: () => console.log('Call'),\n        text: 'Call',\n      },\n      {\n        action: () => console.log('Send email'),\n        text: 'Send email',\n      },\n    ],\n    {\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 子菜单\n\n单个菜单项的 `items` 属性将嵌套子项添加到该项目。\n\n带有子菜单的菜单项会获得以下额外的类名，以允许额外的样式：\n\n- `.g-dropdown-menu__menu-item_with-submenu`:适用于具有多个嵌套项的项目。\n- `.g-dropdown-menu__menu-item_active-parent`:对于子菜单当前处于打开状态的项目。\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    items={[\n        {\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n        {\n            text: 'More',\n            items: [\n                {\n                    action: () => console.log('Mark as'),\n                    text: 'Mark as',\n                    items: [\n                        {\n                            action: () => console.log('Important'),\n                            text: 'Important',\n                        },\n                        {\n                            action: () => console.log('Favorite'),\n                            text: 'Favorite',\n                        },\n                    ],\n                },\n                {\n                    action: () => console.log('Copy'),\n                    text: 'Copy',\n                },\n                {\n                    text: 'Move to',\n                    items: [\n                        {\n                            action: () => console.log('Location #1'),\n                            text: 'Location #1',\n                        },\n                        {\n                            action: () => console.log('Location #2'),\n                            text: 'Location #2',\n                        },\n                    ],\n                },\n            ],\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        items={[\n            {\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n            {\n                text: 'More',\n                items: [\n                    {\n                        action: () => console.log('Mark as'),\n                        text: 'Mark as',\n                        items: [\n                            {\n                                action: () => console.log('Important'),\n                                text: 'Important',\n                            },\n                            {\n                                action: () => console.log('Favorite'),\n                                text: 'Favorite',\n                            },\n                        ],\n                    },\n                    {\n                        action: () => console.log('Copy'),\n                        text: 'Copy',\n                    },\n                    {\n                        text: 'Move to',\n                        items: [\n                            {\n                                action: () => console.log('Location #1'),\n                                text: 'Location #1',\n                            },\n                            {\n                                action: () => console.log('Location #2'),\n                                text: 'Location #2',\n                            },\n                        ],\n                    },\n                ],\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  items={[\n    {\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n    {\n      text: 'More',\n      items: [\n        {\n          action: () => console.log('Mark as'),\n          text: 'Mark as',\n          items: [\n            {\n              action: () => console.log('Important'),\n              text: 'Important',\n            },\n            {\n              action: () => console.log('Favorite'),\n              text: 'Favorite',\n            },\n          ],\n        },\n        {\n          action: () => console.log('Copy'),\n          text: 'Copy',\n        },\n        {\n          text: 'Move to',\n          items: [\n            {\n              action: () => console.log('Location #1'),\n              text: 'Location #1',\n            },\n            {\n              action: () => console.log('Location #2'),\n              text: 'Location #2',\n            },\n          ],\n        },\n      ],\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 自定义菜单切换\n\n要配置菜单切换，请使用该 `renderSwitcher` 属性。它可以是任何返回 React 组件的函数（也可以是 TypeScript 术语 `(props: SwitcherProps) => React.ReactNode` 中的任何函数，见 [`SwitcherProps`](#switcherprops) 下文）。默认情况下，菜单切换是带有省略号图标 (**. ..** 的按钮。\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    renderSwitcher={(props) => (\n        <div {...props} style={{cursor: 'pointer', borderBottom: '1px dotted'}}>John Doe</div>\n    )}\n    items={[\n        {\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        renderSwitcher={(props) => (\n            <div {...props} style={{cursor: 'pointer', borderBottom: '1px dotted'}}>John Doe</div>\n        )}\n        items={[\n            {\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  renderSwitcher={(props) => (\n    <div {...props} style={{cursor: 'pointer', borderBottom: '1px dotted'}}>\n      John Doe\n    </div>\n  )}\n  items={[\n    {\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n为了演示可自定义菜单切换的概念，上面的示例过于简化。在现实生活中的应用程序中，通常建议可点击的菜单开关应是一个可通过键盘和其他辅助技术（例如按钮）访问的组件。\n\n## 自定义图标\n\n您可以使用 `iconStart` 或 `iconEnd` 属性向 `DropdownMenu` 项目添加自定义图标。默认情况下，这些 `DropdownMenu` 项目没有图标。\n\n您可以使用的 `renderSwitcher` 属性更改菜单切换图 `DropdownMenu`标。默认情况下，菜单切换是带有省略号图标 (**. ..** 的按钮。\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    renderSwitcher={(props) => (\n        <Button {...props} view=\"flat\">\n            <Icon size={16} data={Bars} />\n        </Button>\n    )}\n    items={[\n        {\n            iconStart: <Icon size={16} data={Pencil} />,\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            iconStart: <Icon size={16} data={TrashBin} />,\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        renderSwitcher={(props) => (\n            <UIKit.Button {...props} view=\"flat\">\n                <UIKit.Icon\n                    data={() => (\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M1.25 3.25A.75.75 0 0 1 2 2.5h12A.75.75 0 0 1 14 4H2a.75.75 0 0 1-.75-.75Zm0 4.75A.75.75 0 0 1 2 7.25h12a.75.75 0 0 1 0 1.5H2A.75.75 0 0 1 1.25 8ZM2 12a.75.75 0 0 0 0 1.5h12a.75.75 0 0 0 0-1.5H2Z\" clip-rule=\"evenodd\"></path></svg>\n                    )}\n                    size={16}\n                />\n            </UIKit.Button>\n        )}\n        items={[\n            {\n                iconStart: (\n                    <UIKit.Icon\n                        data={() => (\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M11.423 1A3.577 3.577 0 0 1 15 4.577c0 .27-.108.53-.3.722l-.528.529-1.971 1.971-5.059 5.059a3 3 0 0 1-1.533.82l-2.638.528a1 1 0 0 1-1.177-1.177l.528-2.638a3 3 0 0 1 .82-1.533l5.059-5.059 2.5-2.5c.191-.191.451-.299.722-.299Zm-2.31 4.009-4.91 4.91a1.5 1.5 0 0 0-.41.766l-.38 1.903 1.902-.38a1.5 1.5 0 0 0 .767-.41l4.91-4.91a2.077 2.077 0 0 0-1.88-1.88Zm3.098.658a3.59 3.59 0 0 0-1.878-1.879l1.28-1.28c.995.09 1.788.884 1.878 1.88l-1.28 1.28Z\" clip-rule=\"evenodd\"></path></svg>\n                        )}\n                        size={16}\n                    />\n                ),\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                iconStart: (\n                    <UIKit.Icon\n                        data={() => (\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M9 2H7a.5.5 0 0 0-.5.5V3h3v-.5A.5.5 0 0 0 9 2Zm2 1v-.5a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2V3H2.251a.75.75 0 0 0 0 1.5h.312l.317 7.625A3 3 0 0 0 5.878 15h4.245a3 3 0 0 0 2.997-2.875l.318-7.625h.312a.75.75 0 0 0 0-1.5H11Zm.936 1.5H4.064l.315 7.562A1.5 1.5 0 0 0 5.878 13.5h4.245a1.5 1.5 0 0 0 1.498-1.438l.315-7.562Zm-6.186 2v5a.75.75 0 0 0 1.5 0v-5a.75.75 0 0 0-1.5 0Zm3.75-.75a.75.75 0 0 1 .75.75v5a.75.75 0 0 1-1.5 0v-5a.75.75 0 0 1 .75-.75Z\" clip-rule=\"evenodd\"></path></svg>\n                        )}\n                        size={16}\n                    />\n                ),\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  renderSwitcher={(props) => (\n    <Button {...props} view=\"flat\">\n      <Icon size={16} data={Bars} />\n    </Button>\n  )}\n  items={[\n    {\n      iconStart: <Icon size={16} data={Pencil} />,\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      iconStart: <Icon size={16} data={TrashBin} />,\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 属性\n\n| 姓名                       | 描述                                                           |                    类型                    |    默认    |\n| :------------------------- | :------------------------------------------------------------- | :----------------------------------------: | :--------: |\n| `items`                    | 物品数组。嵌套的项目数组表示视觉上分隔的群组。                 | `（下拉菜单项目\\| [[ 下拉菜单项目])]\\| []` |            |\n| `data`                     | 为菜单中调用的操作提供的有效负载。（这对于上下文菜单很有用。） |                   `any`                    |            |\n| `icon`                     | 默认图标 `switcher`。                                          |             `React.ReactNode`              | 省略号图标 |\n| `size`                     | 应用于默认值 `switcher` 和菜单。                               |          `'s'\\| 'm'\\| 'l'\\| 'xl'`          |   `'m'`    |\n| `disabled`                 | 将此属性设置为 `true` 禁用 `switcher` 按钮并阻止菜单打开。     |                 `boolean`                  |            |\n| `renderSwitcher`           | 菜单切换控件的渲染功能。                                       |             `React.ReactNode`              |            |\n| `switcherWrapperClassName` | 的父组件 `className` 属 `switcher`性的值。                     |                  `string`                  |            |\n| `defaultSwitcherProps`     | 默认 `switcher` 属性。                                         |               `ButtonProps`                |            |\n| `defaultSwitcherClassName` | 默认 `className` 属性的值 `switcher`。                         |                  `string`                  |            |\n| `menuProps`                | 覆盖默认的下拉菜单弹出窗口属性。                               |                `MenuProps`                 |            |\n| `popupProps`               | 覆盖默认的弹出窗口属性。                                       |                `PopupProps`                |            |\n| `open`                     | 切换下拉菜单的可见性。                                         |                 `boolean`                  |            |\n| `onOpenToggle`             | 在打开或关闭菜单时调用。                                       |                `() => void`                |            |\n| `onSwitcherClick`          | 点击时调 `switcher` 用。                                       |   `React.mouseEventHandler<HTMLElement>`   |            |\n| `hideOnScroll`             | 指定滚动父元素时是否隐藏菜单。                                 |                 `boolean`                  |   `true`   |\n| `children`                 | 菜单弹出窗口中的自定义内容。                                   |             `React.ReactNode`              |            |\n\n### DropdownMenuItem\n\n此类型描述了单个下拉菜单项。\n\n| 姓名         | 描述                                                                                |                      类型                      | 默认 |\n| :----------- | :---------------------------------------------------------------------------------- | :--------------------------------------------: | :--: |\n| `text`       | 菜单项内容。                                                                        |               `React.ReactNode`                |      |\n| `action`     | 菜单项点击处理程序。它从父下拉菜单组件（包括 `event` 和 `data`）获取参数。          | `(event: React.MouseEvent, data: any) => void` |      |\n| `iconStart`  | 项目内容前的菜单项图标。                                                            |               `React.ReactNode`                |      |\n| `iconEnd`    | 项目内容后面的菜单项图标。如果项目有子菜单，则忽略。                                |               `React.ReactNode`                |      |\n| `hidden`     | 确定该项目是否处于隐藏状态。                                                        |                   `boolean`                    |      |\n| `disabled`   | 确定该项目是否处于禁用状态。                                                        |                   `boolean`                    |      |\n| `href`       | 具有此属性的菜单项将成为指向指定位置的链接。                                        |                    `string`                    |      |\n| `target`     | 与 `<a>` 标签的 `target` 属性相同。                                                 |                    `string`                    |      |\n| `rel`        | 与 `<a>` 标签的 `rel` 属性相同。                                                    |                    `string`                    |      |\n| `extraProps` | 其他菜单项属性。                                                                    |                    `object`                    |      |\n| `title`      | 工具提示文本。                                                                      |                    `string`                    |      |\n| `className`  | `class` HTML 属性值。                                                               |                    `string`                    |      |\n| `items`      | 子菜单项。                                                                          |      `（下拉菜单项目\\| [[下拉菜单项目])]`      |      |\n| `popupProps` | 子菜单弹出窗口属性。                                                                |                    `string`                    |      |\n| `path`       | 从根到当前项目的索引路径。                                                          |                   `number[]`                   |      |\n| `closeMenu`  | 自定义 `closeMenu` 回调。可以调用它来代替关闭主菜单，并用于在主菜单之前关闭子菜单。 |                  `() => void`                  |      |\n\n### SwitcherProps\n\n| 姓名        | 描述                             |     类型     |\n| :---------- | :------------------------------- | :----------: |\n| `onClick`   | 点击切换器时调用。               | `() => void` |\n| `onKeyDown` | 当切换器聚焦并按下操作键时调用。 | `() => void` |\n","_nextI18Next":{"initialI18nStore":{"zh":{"common":{"pageNotFound":"页面未找到","pageNotFoundDescription":"您正在寻找的页面不存在或已被移动。","backToHome":"返回首页","actions_open":"打开","actions_copyToClipboard":"复制到剪贴板","actions_share":"分享","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"游乐场","menu_libraries":"图书馆","menu_components":"组件","menu_design":"设计","menu_editor":"编辑器","menu_icons":"图标","menu_themer":"主题","roadmap_inProgress":"进行中","navigation_previous":"以前","navigation_next":"下一步","emptySearchPlaceholder":"什么都没找到","show_more":"显示更多","show_less":"少显示"},"component":{"actions_openInFigma":"在 Figma 中打开","title":"组件","searchPlaceholder":"按组件名称搜索","color-input_validation-format-error":"格式不正确","maintainers_one":"维护者：","maintainers_other":"维护者：","maintainers":"维护者：","theme":"切换主题","rtlOn":"开启 RTL","rtlOff":"关闭 RTL","rtlNotSupported":"不支持 RTL"},"libraries-info":{"description_uikit":"用于使用 Gravity 构建服务的基础用户界面组件和令牌。","description_components":"一组复杂的 React 组件。","description_icons":"为您的项目设置数百种不同的现代 SVG 图标。","description_illustrations":"一组用于显示数据状态的插图。","description_dynamic-forms":"用于渲染 JSON 架构描述的简洁实用的反应表单的库","description_page-constructor":"一组时尚的功能区块，用于快速创建促销和登录页面。","description_blog-constructor":"一个基于页面构造器库的库，用于创建类似博客的服务。","description_chartkit":"与我们的设计系统集成的数据可视化套件。","description_dashkit":"用于构建交互式仪表板的网格组件。","description_yagr":"基于 UpLot 的高性能画布图表渲染器。","description_nodekit":"适用于 Node.js 应用程序、脚本和库的简单工具包。","description_expresskit":"与 NodeKit 集成的轻量级 express.js 包装器。","description_app-layout":"我们的 SPA 应用程序中使用的 HTML 布局生成器。","description_app-builder":"我们的 SPA 应用程序中使用的基于 Webpack 的静态资产生成器。","description_navigation":"适用于复杂服务的紧凑且可扩展的导航面板。","description_date-utils":"用于管理日期和时间值的助手。","description_date-components":"各种日期组件。","description_axios-wrapper":"Axios 封装器，可自动取消并发请求。","description_dialog-fields":"一个 react-final-final-final-form 包装器，为构建表单提供了一些有用的高级组件。","description_paranoid":"集群拓扑可视化工具。","description_react-data-table":"一个用于渲染大型复杂表格的反应组件。","description_unipika":"数据格式库。","description_ui-logger":"简单的客户端记录器。","description_oauth-clients":"客户端 OAuth 库，在身份验证流程之上提供便捷的抽象。","description_i18n":"Gravity UI 项目的国际化助手。","description_eslint-config":"Gravity UI 项目的 ESLint 配置预设。","description_tsconfig":"Gravity UI 项目的 TypeScript 编译器配置","description_prettier-config":"Gravity UI 项目的更漂亮的配置预设。","description_stylelint-config":"Gravity UI 项目的 Stylelint 配置预设。","description_babel-preset":"Gravity UI 项目的 Babel 配置预设。","description_browserslist-config":"我们的服务中使用的浏览器列表配置预设。","description_markdown-editor":"一款与 Markdown 合作的强大工具，它结合了所见即所得和标记模式。","description_graph":"具有动态比例感知细节的高性能图形渲染器","description_data-source":"围绕数据获取的封装工具。","description_webpack-i18n-assets-plugin":"一个 Webpack 插件，用目标文本替换对本地化函数 (i18n) 的调用。","description_table":"用于以表格格式可视化数据的库。"}},"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"zh","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}