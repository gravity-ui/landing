{"pageProps":{"libId":"uikit","componentId":"text-input","readmeContent":"<!--GITHUB_BLOCK-->\n\n# TextInput\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {TextInput} from '@gravity-ui/uikit';\n```\n\nTextInput 允许用户在用户界面中输入文本。\n\n## 外观\n\n的 `TextInput` 外观由 `view` 和 `pin` 属性控制。\n\n### 查看\n\n`normal` -的主视图 `TextInput` （默认使用）。\n\n<!--LANDING_BLOCK\n<ExampleBlock code={`<TextInput placeholder=\"Placeholder\" />`}>\n    <UIKit.TextInput placeholder=\"Placeholder\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n`clear` -可以与自定义包装器一起使用。 `TextInput`\n\n<!--LANDING_BLOCK\n<ExampleBlock code={`<TextInput view=\"clear\" placeholder=\"Placeholder\" />`}>\n    <UIKit.TextInput view=\"clear\" placeholder=\"Placeholder\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput view=\"normal\" />\n<TextInput view=\"clear\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### 别针\n\n允许你控制边框左右边缘 `TextInput`的视图。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TextInput placeholder=\"Placeholder\" pin=\"round-brick\" />\n<TextInput placeholder=\"Placeholder\" pin=\"brick-brick\" />\n<TextInput placeholder=\"Placeholder\" pin=\"brick-round\" />\n`}\n>\n    <UIKit.TextInput placeholder=\"Placeholder\" pin=\"round-brick\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" pin=\"brick-brick\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" pin=\"brick-round\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput pin=\"round-brick\" />\n<TextInput pin=\"brick-brick\" />\n<TextInput pin=\"brick-round\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 国家\n\n### 已禁用\n\n您不希望用户能够与组件交互的状态。 `TextInput`\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TextInput placeholder=\"Placeholder\" disabled={true} />\n`}\n>\n    <UIKit.TextInput placeholder=\"Placeholder\" disabled={true} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput disabled />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### 错误\n\n您要指明用户输入错误的状态。 `TextInput`要更改 `TextInput` 外观，请使用带有 `\"invalid\"` 值的 `validationState` 属性。可以通过该 `errorMessage` 属性添加可选的消息文本。默认情况下，消息文本在组件外部呈现。\n可以使用该 `errorPlacement` 属性来更改此行为。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TextInput placeholder=\"Placeholder\" errorMessage=\"Error message\" validationState=\"invalid\" />\n<TextInput placeholder=\"Placeholder\" errorPlacement=\"inside\" errorMessage=\"Error message\" validationState=\"invalid\" />\n`}\n>\n    <UIKit.TextInput placeholder=\"Placeholder\" errorMessage=\"Error message\" validationState=\"invalid\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" errorPlacement=\"inside\" errorMessage=\"Error message\" validationState=\"invalid\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput errorMessage=\"Error message\" validationState=\"invalid\" />\n<TextInput errorPlacement=\"inside\" errorMessage=\"Error message\" validationState=\"invalid\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 大小\n\n`s`— 当标准控件过大（桌子、小牌）时使用。\n\n`m`— 基本尺寸，用于大多数组件。\n\n`l`— 在页面标题、模态窗口或弹出窗口中执行的基本控件。\n\n`xl`— 用于促销和登陆页面。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TextInput placeholder=\"Placeholder\" size=\"s\" />\n<TextInput placeholder=\"Placeholder\" size=\"m\" />\n<TextInput placeholder=\"Placeholder\" size=\"l\" />\n<TextInput placeholder=\"Placeholder\" size=\"xl\" />\n`}\n>\n    <UIKit.TextInput placeholder=\"Placeholder\" size=\"s\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" size=\"m\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" size=\"l\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" size=\"xl\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput size=\"s\" />\n<TextInput size=\"m\" />\n<TextInput size=\"l\" />\n<TextInput size=\"xl\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 标签\n\n允许您将标签设置在控件的左侧。\n\n- 标签占据相对于控件的最左侧位置。也就是说，通过 `startContent` 属性添加的元素将位于右侧。\n- 标签占用的宽度不能超过整个 TextInput 空间宽度的一半。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TextInput placeholder=\"Placeholder\" label=\"Label\" />\n<TextInput placeholder=\"Placeholder\" label=\"Very long label with huge amount of symbols\" />\n`}\n>\n    <UIKit.TextInput placeholder=\"Placeholder\" label=\"Label\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" label=\"Very long label with huge amount of symbols\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput label=\"Label\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 其他内容\n\n### 开始内容\n\n允许您在控件的左侧（如果使用 [rtl](https://developer.mozilla.org/en-US/docs/Glossary/RTL)，则向右添加内容）。位于通过 `label` 属性添加的标签的左侧（如果使用 rtl，则位于右侧）。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`<TextInput placeholder=\"Placeholder\" label=\"Label\" startContent={<Label size=\"s\">Left</Label>} />`}\n>\n    <UIKit.TextInput\n        placeholder=\"Search\"\n        label=\"Label\"\n        startContent={<UIKit.Label size=\"s\">Left</UIKit.Label>}\n    />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput startContent={<Label>Left</Label>} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### 结束内容\n\n允许您在控件的右侧（如果使用 [rtl](https://developer.mozilla.org/en-US/docs/Glossary/RTL) ，则向左添加内容）。位于通过 `hasClear` 属性添加的清除按钮的右侧（如果使用 rtl，则位于左侧）。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`<TextInput placeholder=\"Placeholder\" endContent={<Label size=\"s\">Right</Label>} hasClear/>`}\n>\n    <UIKit.TextInput\n        hasClear\n        placeholder=\"Placeholder\"\n        endContent={<UIKit.Label size=\"s\">Right</UIKit.Label>}\n    />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput endContent={<Label>Right</Label>} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 属性\n\n| 姓名            | 描述                                                     |                     类型                     |      默认       |\n| :-------------- | :------------------------------------------------------- | :------------------------------------------: | :-------------: |\n| autoComplete    | 控件的 `autocomplete` 属性                               |              `boolean` `string`              |                 |\n| autoFocus       | 控件的 `autofocus` 属性                                  |                  `boolean`                   |                 |\n| className       | 控件的包装器类名                                         |                   `string`                   |                 |\n| controlProps    | 控件的 html 属性                                         | `react.inputhtmlAtributes<HTMLInputElement>` |                 |\n| controlRef      | 向控件提供了 React ref                                   |        `React.Ref<HTMLInputElement>`         |                 |\n| defaultValue    | 控件的默认值，在组件不受控制时使用                       |                   `string`                   |                 |\n| 残疾的          | 表示用户无法与控件进行交互                               |              `React.ReactNode`               |                 |\n| endContent      | 在输入节`点、清除按钮和错误图标之后呈现的用户节点        |                   `string`                   |                 |\n| errorMessage    | 错误文本                                                 |                   `string`                   |                 |\n| errorPlacement  | 放置错误                                                 |              `outside` `inside`              |    `outside`    |\n| hasClear        | 显示用于清除控件值的图标                                 |                  `boolean`                   |     `false`     |\n| id              | 控件的 `id` 属性                                         |                   `string`                   |                 |\n| 标签            | 在输入节点左侧呈现的帮助文本                             |                   `string`                   |                 |\n| 名称            | 控件的 `name` 属性。如果未指定，则如果未指定，则自动生成 |                   `string`                   |                 |\n| 便条            | 显示在控件右下角的可选元素，与错误容器共享一个空间       |              `React.ReactNode`               |                 |\n| onBlur          | 当控件失去对焦时触发。提供焦点事件作为回调的参数         |                  `function`                  |                 |\n| onChange        | 当用户更改输入值时触发。提供变更事件作为回调的参数       |                  `function`                  |                 |\n| onFocus         | 当控件获得焦点时触发。提供焦点事件作为回调的参数         |                  `function`                  |                 |\n| onKeyDown       | 按下按键时触发。提供键盘事件作为回调的参数               |                  `function`                  |                 |\n| onKeyUp         | 释放密钥时触发。提供键盘事件作为回调的参数               |                  `function`                  |                 |\n| onUpdate        | 当用户更改输入值时触发。提供新值作为回调的参数           |                  `function`                  |                 |\n| 大头针          | 控件的边框视图                                           |                   `string`                   | `'round-round'` |\n| 占位符          | 未设置值时在控件中显示的文本                             |                   `string`                   |                 |\n| qa              | 测试 ID 属性 (`data-qa`)                                 |                   `string`                   |\n| readOnly        | 表示用户无法更改控件的值                                 |                  `boolean`                   |     `false`     |\n| 尺寸            | 控件的大小                                               |                 `\"s\"` `\"xl\"`                 |      `\"m\"`      |\n| startContent    | 在标签和输入节点之前呈现的用户`节点                      |              `React.ReactNode`               |                 |\n| tabIndex        | 控件的 `tabindex` 属性                                   |                   `string`                   |                 |\n| 类型            | 控件的类型                                               |              `\"email\"` `\"url\"`               |                 |\n| validationState | 验证状态                                                 |                 `\"invalid\"`                  |                 |\n| 价值            | 控件的价值                                               |                   `string`                   |                 |\n| 观点            | 控件视图                                                 |             `\"normal\"` `\"clear\"`             |   `\"normal\"`    |\n\n## CSS API\n\n| 姓名                                 | 描述                                 |\n| :----------------------------------- | :----------------------------------- |\n| `--g-text-input-text-color`          | 文字颜色                             |\n| `--g-text-input-label-color`         | 标签颜色                             |\n| `--g-text-input-placeholder-color`   | 占位符颜色                           |\n| `--g-text-input-background-color`    | 背景颜色                             |\n| `--g-text-input-border-radius`       | 边框半径                             |\n| `--g-text-input-border-width`        | 边框宽度                             |\n| `--g-text-input-border-color`        | 边框颜色                             |\n| `--g-text-input-border-color-hover`  | 悬停时的边框颜色                     |\n| `--g-text-input-border-color-active` | 边框颜色（如果处于活动状态）         |\n| `--g-text-input-focus-outline-color` | 聚焦时的轮廓颜色（默认情况下不显示） |\n","_nextI18Next":{"initialI18nStore":{"zh":{"common":{"pageNotFound":"页面未找到","pageNotFoundDescription":"您正在寻找的页面不存在或已被移动。","backToHome":"返回首页","actions_open":"打开","actions_copyToClipboard":"复制到剪贴板","actions_share":"分享","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"游乐场","menu_libraries":"图书馆","menu_components":"组件","menu_design":"设计","menu_editor":"编辑器","menu_icons":"图标","menu_themer":"主题","roadmap_inProgress":"进行中","navigation_previous":"以前","navigation_next":"下一步","emptySearchPlaceholder":"什么都没找到","show_more":"显示更多","show_less":"少显示"},"component":{"actions_openInFigma":"在 Figma 中打开","title":"组件","searchPlaceholder":"按组件名称搜索","color-input_validation-format-error":"格式不正确","maintainers_one":"维护者：","maintainers_other":"维护者：","maintainers":"维护者：","theme":"切换主题","rtlOn":"开启 RTL","rtlOff":"关闭 RTL","rtlNotSupported":"不支持 RTL"},"libraries-info":{"description_uikit":"用于使用 Gravity 构建服务的基础用户界面组件和令牌。","description_components":"一组复杂的 React 组件。","description_icons":"为您的项目设置数百种不同的现代 SVG 图标。","description_illustrations":"一组用于显示数据状态的插图。","description_dynamic-forms":"用于渲染 JSON 架构描述的简洁实用的反应表单的库","description_page-constructor":"一组时尚的功能区块，用于快速创建促销和登录页面。","description_blog-constructor":"一个基于页面构造器库的库，用于创建类似博客的服务。","description_chartkit":"与我们的设计系统集成的数据可视化套件。","description_dashkit":"用于构建交互式仪表板的网格组件。","description_yagr":"基于 UpLot 的高性能画布图表渲染器。","description_nodekit":"适用于 Node.js 应用程序、脚本和库的简单工具包。","description_expresskit":"与 NodeKit 集成的轻量级 express.js 包装器。","description_app-layout":"我们的 SPA 应用程序中使用的 HTML 布局生成器。","description_app-builder":"我们的 SPA 应用程序中使用的基于 Webpack 的静态资产生成器。","description_navigation":"适用于复杂服务的紧凑且可扩展的导航面板。","description_date-utils":"用于管理日期和时间值的助手。","description_date-components":"各种日期组件。","description_axios-wrapper":"Axios 封装器，可自动取消并发请求。","description_dialog-fields":"一个 react-final-final-final-form 包装器，为构建表单提供了一些有用的高级组件。","description_paranoid":"集群拓扑可视化工具。","description_react-data-table":"一个用于渲染大型复杂表格的反应组件。","description_unipika":"数据格式库。","description_ui-logger":"简单的客户端记录器。","description_oauth-clients":"客户端 OAuth 库，在身份验证流程之上提供便捷的抽象。","description_i18n":"Gravity UI 项目的国际化助手。","description_eslint-config":"Gravity UI 项目的 ESLint 配置预设。","description_tsconfig":"Gravity UI 项目的 TypeScript 编译器配置","description_prettier-config":"Gravity UI 项目的更漂亮的配置预设。","description_stylelint-config":"Gravity UI 项目的 Stylelint 配置预设。","description_babel-preset":"Gravity UI 项目的 Babel 配置预设。","description_browserslist-config":"我们的服务中使用的浏览器列表配置预设。","description_markdown-editor":"一款与 Markdown 合作的强大工具，它结合了所见即所得和标记模式。","description_graph":"具有动态比例感知细节的高性能图形渲染器","description_data-source":"围绕数据获取的封装工具。","description_webpack-i18n-assets-plugin":"一个 Webpack 插件，用目标文本替换对本地化函数 (i18n) 的调用。","description_table":"用于以表格格式可视化数据的库。"}},"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"zh","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}