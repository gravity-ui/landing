{"pageProps":{"libId":"uikit","componentId":"list","readmeContent":"<!--GITHUB_BLOCK-->\n\n# 清单\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {List} from '@gravity-ui/uikit';\n```\n\n### ItemsHeight\n\n确定项目列表的高度（或返回列表高度值的函数）。它在动态设置列表高度时会很有用，例如， `(items: []) => number`。\n\n### 物品\n\n为列表提供项目数组：\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<List items={[\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"]} itemsHeight={160} />\n`}>\n    <UIKit.List items={[\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"]} itemsHeight={160} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<List items={['one', 'two', 'three', 'four', 'five', 'six', 'seven']} itemsHeight={160} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n一个项目可以是标量或任意值，无论如何都必须是 `truthy`。\n如果是任意值，请务必指定过滤和渲染函数。\n默认渲染仅以文本形式提供项目。\n\n特殊 `item.disabled` 字段禁用项目。\n\n渲染和高度自定义为实验提供了充足的空间。\n例如，下面的代码允许你模拟群组：\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<List items={[{title: 'one', group: true,disabled: true}, {title: 'two'},\n    {\n      title: 'three',\n      group: true,\n      disabled: true,\n    },\n    {\n      title: 'four',\n    },\n  ]} onItemClick={(value) => console.log(value)}\n  renderItem={(item) => {\n    if (item.group) {\n      return (\n        <div className={'group'}>\n          <div className={'select-text'}>{item.title}</div>\n        </div>\n      );\n    }\n    return (\n      <div className={'select'}>\n        <div className={'select-text'}>{item.title}</div>\n      </div>\n    );\n  }}\n  itemHeight={(item) => (item.group ? 24 : 36)}\n  itemsHeight={160}\n  filterItem={(filter) => (item) => item.title.includes(filter)}\n/>\n`}>\n    <UIKit.List items={[\n    {\n      title: 'one',\n      group: true,\n      disabled: true,\n    },\n    {\n      title: 'two',\n    },\n    {\n      title: 'three',\n      group: true,\n      disabled: true,\n    },\n    {\n      title: 'four',\n    },\n  ]} onItemClick={(value) => console.log(value)}\n  renderItem={(item) => {\n    if (item.group) {\n      return (\n        <div className={'group'}>\n          <div className={'select-text'}>{item.title}</div>\n        </div>\n      );\n    }\n    return (\n      <div className={'select'}>\n        <div className={'select-text'}>{item.title}</div>\n      </div>\n    );\n  }}\n  itemHeight={(item) => (item.group ? 24 : 36)}\n  itemsHeight={160}\n  filterItem={(filter) => (item) => item.title.includes(filter)}\n/>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<List\n  items={[\n    {\n      title: 'one',\n      group: true,\n      disabled: true,\n    },\n    {\n      title: 'two',\n    },\n    {\n      title: 'three',\n      group: true,\n      disabled: true,\n    },\n    {\n      title: 'four',\n    },\n  ]}\n  onItemClick={(value) => console.log(value)}\n  renderItem={(item) => {\n    if (item.group) {\n      return (\n        <div className={'group'}>\n          <div className={'select-text'}>{item.title}</div>\n        </div>\n      );\n    }\n    return (\n      <div className={'select'}>\n        <div className={'select-text'}>{item.title}</div>\n      </div>\n    );\n  }}\n  itemHeight={(item) => (item.group ? 24 : 36)}\n  itemsHeight={160}\n  filterItem={(filter) => (item) => item.title.includes(filter)}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### 可筛选\n\n如果项目的值为，则该 `filterable` 属性禁用搜索项目的输入。 `false`它的默认值是 `true`。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<List items={[\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"]} itemsHeight={160} filterable={false} />\n`}>\n    <UIKit.List items={[\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"]} itemsHeight={160} filterable={false} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<List\n  items={['one', 'two', 'three', 'four', 'five', 'six', 'seven']}\n  itemsHeight={160}\n  filterable={false}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### 可排序\n\n如果该 `sortable` 属性的值为，则允许交换列表项。 `true`它的默认值是 `false`。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<List items={[\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"]} itemsHeight={160} sortable={true} />\n`}>\n    <UIKit.List items={[\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"]} itemsHeight={160} sortable={true} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<List\n  items={['one', 'two', 'three', 'four', 'five', 'six', 'seven']}\n  itemsHeight={160}\n  sortable={true}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### 虚拟化\n\n要启用虚拟化，请确保满足以下两个条件之一：\n\n1.您设置了该 `itemsHeight` 属性。在这种情况下，列表高度将是固定的，等于该值。 2.您可以为列表父容器设置 `display: flex` 样式。在这种情况下，列表将适应容器宽度。\n\n### 外部管理\n\n有时，您可能需要通过将注意力集中在外部项目上来管理键盘上项目的活动。\n将 `onKeyDown` 事件转发到列表可能会对您有所帮助。\n同样，当活动物品丢失时， `onBlur` 如果需要重复该操作，也可以向前 `onFocus` 移动。\n\n### 筛选\n\n该 `filter` 属性提供用于外部排序的过滤器值。\n\n### PropTypes\n\n| 姓名              | 描述                                                                                                                                | 类型              | 默认 |\n| :---------------- | :---------------------------------------------------------------------------------------------------------------------------------- | :---------------- | :--- |\n| [物品](#items)    | 物品清单                                                                                                                            | `Array`           | []   |\n| itemHeight        | 中的项目高度 `px` 或返回项目高度值的函数: `(item: any) => number`.                                                                  | `Number/Function` | 28   |\n| itemsHeight       | 项目列表高度或返回列表高度值的函数。动态设置列表高度时会很有帮助: `(items: []) => number`.                                          | `Number/Function` |      |\n| renderItem        | 渲染函数，将一个项目作为输入接收，返回一个 React 节点: `(item: any, isItemActive: bool, itemIndex: number) => React.ReactNode`.     | `Function`        |      |\n| filterItem        | 过滤函数，接收指定字符串作为搜索或筛选器输入，返回接收项目作为输入并输出布尔值的函数: `(filter: string) => (item: any) => boolean`. | `Function`        |      |\n| 可过滤            | 启用筛选字段的标志。                                                                                                                | `Boolean`         | 真的 |\n| filterPlaceholder | 过滤器字段的占位符。                                                                                                                | `String`          |      |\n| 过滤              | 筛选值（如果使用外部排序）。                                                                                                        | `String`          |      |\n| filterClassName   | 过滤器输入样式的类。                                                                                                                | `String`          |      |\n| onChangeFilter    | 过滤器更改处理程序（如果使用外部排序）： `(filter: string) => void`。                                                               | `Function`        |      |\n| onFilterEnd       | 内部过滤完成后调用的函数： `({items}: {items: T[]}) => void`                                                                        | `Function`        |      |\n| emptyPlaceholder  | 空列表的占位符。                                                                                                                    | `React.ReactNode` |      |\n| 可排序            | 启用列表排序的标志。                                                                                                                | `Boolean`         |      |\n| sortHandleAlign   | 排序指示器对齐方式（左或右）。                                                                                                      | `left` `right`    |      |\n| onSortEnd         | 排序事件处理器: `({oldIndex: number, newIndex: number}) => void`.                                                                   | `Function`        |      |\n| 虚拟化            | 启用虚拟化的标志。如果处于非活动状态，则会同时渲染所有项目。                                                                        | `Boolean`         | 真的 |\n| onItemClick       | 物品点击处理器: `(item: any, index: number, fromKeyboard?: bool) => void`.                                                          | `Function`        |      |\n| deactivateOnLeave | 如果设置了此标志，则一旦光标离开项目或列表失去焦点，项目选择就会停用。如果未设置，则将始终选择最后选择的项目。                      | `Boolean`         | 真的 |\n| activeItemIndex   | 如果设置了值，则具有此索引的项目将呈现为活动状态。                                                                                  | `Number`          |      |\n| selectedItemIndex | 如果设置了值，则具有此索引的项目将呈现为选定项（背景颜色取自 `--g-color-base-selection`）。                                         | `Number/Array`    |      |\n| itemClassName     | 要添加到项目容器的自定义类名。                                                                                                      | `String`          |      |\n| itemsClassName    | 要添加到项目列表的自定义类名。                                                                                                      | `String`          |      |\n| 角色              | `role` HTML 属性                                                                                                                    | `String`          | 列表 |\n| id                | `id` HTML 属性                                                                                                                      | `string`          |      |\n| onChangeActive    | 当列表框中以键盘对焦方式直观地突出显示的选项的索引发生变化时触发: `(index?: number) => void`.                                       | `Function`        |      |\n","_nextI18Next":{"initialI18nStore":{"zh":{"common":{"pageNotFound":"页面未找到","pageNotFoundDescription":"您正在寻找的页面不存在或已被移动。","backToHome":"返回首页","actions_open":"打开","actions_copyToClipboard":"复制到剪贴板","actions_share":"分享","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"游乐场","menu_libraries":"图书馆","menu_components":"组件","menu_design":"设计","menu_editor":"编辑器","menu_icons":"图标","menu_themer":"主题","roadmap_inProgress":"进行中","navigation_previous":"以前","navigation_next":"下一步","emptySearchPlaceholder":"什么都没找到","show_more":"显示更多","show_less":"少显示"},"component":{"actions_openInFigma":"在 Figma 中打开","title":"组件","searchPlaceholder":"按组件名称搜索","color-input_validation-format-error":"格式不正确","maintainers_one":"维护者：","maintainers_other":"维护者：","maintainers":"维护者：","theme":"切换主题","rtlOn":"开启 RTL","rtlOff":"关闭 RTL","rtlNotSupported":"不支持 RTL"},"libraries-info":{"description_uikit":"用于使用 Gravity 构建服务的基础用户界面组件和令牌。","description_components":"一组复杂的 React 组件。","description_icons":"为您的项目设置数百种不同的现代 SVG 图标。","description_illustrations":"一组用于显示数据状态的插图。","description_dynamic-forms":"用于渲染 JSON 架构描述的简洁实用的反应表单的库","description_page-constructor":"一组时尚的功能区块，用于快速创建促销和登录页面。","description_blog-constructor":"一个基于页面构造器库的库，用于创建类似博客的服务。","description_chartkit":"与我们的设计系统集成的数据可视化套件。","description_dashkit":"用于构建交互式仪表板的网格组件。","description_yagr":"基于 UpLot 的高性能画布图表渲染器。","description_nodekit":"适用于 Node.js 应用程序、脚本和库的简单工具包。","description_expresskit":"与 NodeKit 集成的轻量级 express.js 包装器。","description_app-layout":"我们的 SPA 应用程序中使用的 HTML 布局生成器。","description_app-builder":"我们的 SPA 应用程序中使用的基于 Webpack 的静态资产生成器。","description_navigation":"适用于复杂服务的紧凑且可扩展的导航面板。","description_date-utils":"用于管理日期和时间值的助手。","description_date-components":"各种日期组件。","description_axios-wrapper":"Axios 封装器，可自动取消并发请求。","description_dialog-fields":"一个 react-final-final-final-form 包装器，为构建表单提供了一些有用的高级组件。","description_paranoid":"集群拓扑可视化工具。","description_react-data-table":"一个用于渲染大型复杂表格的反应组件。","description_unipika":"数据格式库。","description_ui-logger":"简单的客户端记录器。","description_oauth-clients":"客户端 OAuth 库，在身份验证流程之上提供便捷的抽象。","description_i18n":"Gravity UI 项目的国际化助手。","description_eslint-config":"Gravity UI 项目的 ESLint 配置预设。","description_tsconfig":"Gravity UI 项目的 TypeScript 编译器配置","description_prettier-config":"Gravity UI 项目的更漂亮的配置预设。","description_stylelint-config":"Gravity UI 项目的 Stylelint 配置预设。","description_babel-preset":"Gravity UI 项目的 Babel 配置预设。","description_browserslist-config":"我们的服务中使用的浏览器列表配置预设。","description_markdown-editor":"一款与 Markdown 合作的强大工具，它结合了所见即所得和标记模式。","description_graph":"具有动态比例感知细节的高性能图形渲染器","description_data-source":"围绕数据获取的封装工具。","description_webpack-i18n-assets-plugin":"一个 Webpack 插件，用目标文本替换对本地化函数 (i18n) 的调用。","description_table":"用于以表格格式可视化数据的库。"}},"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"zh","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}