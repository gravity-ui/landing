{"pageProps":{"libId":"uikit","componentId":"progress","readmeContent":"<!--GITHUB_BLOCK-->\n\n# 进展\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Progress} from '@gravity-ui/uikit';\n```\n\n该 `Progress` 组件显示当前操作进度。它也可以分为几个部分。\n\n## 主题\n\n使用该 `theme` 属性指定整个进度或复合部分的颜色：\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress text=\"default\" value={50} />\n<Progress text=\"warning\" theme=\"warning\" value={50} />\n<Progress text=\"info\" theme=\"info\" value={50} />\n<Progress text=\"success\" theme=\"success\" value={50} />\n<Progress text=\"danger\" theme=\"danger\" value={50} />\n<Progress text=\"misc\" theme=\"misc\" value={50} />\n`}\n>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress text=\"default\" value={50} />\n    <div style={{height: '15px'}} />\n    <UIKit.Progress text=\"success\" theme=\"success\" value={50} />\n  </div>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress text=\"warning\" theme=\"warning\" value={50} />\n    <div style={{height: '15px'}} />\n    <UIKit.Progress text=\"danger\" theme=\"danger\" value={50} />\n  </div>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress text=\"info\" theme=\"info \"value={50} />\n    <div style={{height: '15px'}} />\n    <UIKit.Progress text=\"misc\" theme=\"misc\" value={50} />\n  </div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress text=\"default\" value={50} />\n<Progress text=\"warning\" theme=\"warning\" value={50} />\n<Progress text=\"info\" theme=\"info\" value={50} />\n<Progress text=\"success\" theme=\"success\" value={50} />\n<Progress text=\"danger\" theme=\"danger\" value={50} />\n<Progress text=\"misc\" theme=\"misc\" value={50} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 国家\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress text=\"Loading\" theme=\"misc\" value={60} loading={true} />\n`}\n>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress text=\"Loading\" theme=\"misc\" value={60} loading={true} />\n  </div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress text=\"Loading\" theme=\"misc\" value={60} loading={true} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 大小\n\n要管理 `Progress` 组件的大小，请使用可以取以下值的 `size` 属性： `\"xs\"` `\"s\"` 、和 `\"m\"`。该 `text` 属性仅适用于大 `\"m\"` 小。\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress theme=\"success\" value={60} size=\"xs\" />\n<Progress theme=\"warning\" value={70} size=\"s\" />\n<Progress theme=\"danger\" value={80} size=\"m\" />\n`}\n>\n  <div style={{width: '30%'}}><UIKit.Progress theme=\"success\" value={60} size=\"xs\" /></div>\n  <div style={{width: '30%'}}><UIKit.Progress theme=\"warning\" value={70} size=\"s\" /></div>\n  <div style={{width: '30%'}}><UIKit.Progress theme=\"danger\" value={80} size=\"m\" /></div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress theme=\"success\" value={60} size=\"xs\" />\n<Progress theme=\"warning\" value={70} size=\"s\" />\n<Progress theme=\"danger\" value={80} size=\"m\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 断点\n\n使用该 `colorStops` 属性设置 `Progress` 组件的断点。\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress\n  value={10}\n  colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n/>\n<Progress\n  value={40}\n  colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n/>\n<Progress\n  value={60}\n  colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n/>\n`}\n>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress\n      value={10}\n      colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n    />\n  </div>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress\n      value={40}\n      colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n    />\n  </div>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress\n      value={60}\n      colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n    />\n  </div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress value={10} colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]} />\n<Progress value={40} colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]} />\n<Progress value={60} colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 堆栈\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress\n  stack={[\n    {theme: 'default', content: 'First', value: 25},\n    {theme: 'success', content: 'Second', value: 25},\n    {theme: 'warning', content: 'Third', value: 25},\n    {theme: 'danger', content: 'Fourth', value: 25},\n  ]}\n/>\n<Progress text=\"Progress with custom colors\"\n  stack={[\n    {color: '#6e5d8c', value: 33.333333333333336},\n    {color: '#5b785b', value: 33.333333333333336},\n    {color: '#956069', value: 33.333333333333336},\n  ]}\n/>\n`}\n>\n<div style={{width: '30%'}}>\n  <UIKit.Progress\n    stack={[\n      {theme: 'default', content: 'First', value: 25},\n      {theme: 'success', content: 'Second', value: 25},\n      {theme: 'warning', content: 'Third', value: 25},\n      {theme: 'danger', content: 'Fourth', value: 25},\n    ]}\n  />\n</div>\n<div style={{width: '30%'}}>\n  <UIKit.Progress text=\"Progress with custom colors\"\n    stack={[\n      {color: '#6e5d8c', value: 33.333333333333336},\n      {color: '#5b785b', value: 33.333333333333336},\n      {color: '#956069', value: 33.333333333333336},\n    ]}\n  />\n</div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress stack={[\n  {theme: 'default', content: 'First', value: 25},\n  {theme: 'success', content: 'Second', value: 25},\n  {theme: 'warning', content: 'Third', value: 25},\n  {theme: 'danger', content: 'Fourth', value: 25},\n]} />\n<Progress text=\"Progress with custom colors\" stack={[\n  {color: '#6e5d8c', value: 33.333333333333336},\n  {color: '#5b785b', value: 33.333333333333336},\n  {color: '#956069', value: 33.333333333333336},\n]} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 属性\n\n| 姓名            | 描述                                                                                |                  类型                  |    默认     |\n| :-------------- | :---------------------------------------------------------------------------------- | :------------------------------------: | :---------: |\n| className       | HTML `class` 属性                                                                   |                `string`                |             |\n| colorStops      | 使用主题设置断点                                                                    | `数组<{theme: string; stop: number;}>` |             |\n| colorStopsValue | 设置用于选择 ColorStops 的当前停靠点或替代值的值。可用范围介于 0 到 100 之间。      |                `number`                |             |\n| 加载中          | 切换 `loading` 状态                                                                 |               `boolean`                |   `false`   |\n| 尺寸            | 设置进度条大小。进度栏文本只能按大 `\"m\"` 小显示。                                   |                `string`                |    `\"m\"`    |\n| 堆              | 复合进度条的配置。如果提供了， `value` 则不是必填项。                               |             `数组<Stack>`              |             |\n| stackClassName  | 堆栈 `class` 的 HTML 属性                                                           |                `string`                |             |\n| 文本            | 进度栏内的文字                                                                      |              `ReactNode`               |             |\n| 主题            | 设置进度颜色                                                                        |                `string`                | `\"default\"` |\n| 价值            | 当前进度值。可用范围介于 0 到 100 之间。使用该 `stack` 属性值是可选的，用作最大值。 |                `number`                |             |\n\n### `Stack`\n\n| 姓名      | 描述                                                                                     |    类型     |    默认     |\n| :-------- | :--------------------------------------------------------------------------------------- | :---------: | :---------: |\n| className | `class` 堆栈元素的 HTML 属性                                                             |  `string`   |             |\n| 颜色      | 设置 `style` HTML 属性的背景颜色                                                         |  `string`   |             |\n| 内容      | 堆栈元素内容                                                                             | `ReactNode` |             |\n| 标题      | `title` HTML 属性                                                                        |  `string`   |             |\n| 主题      | 设置堆栈元素的颜色                                                                       |  `string`   | `\"default\"` |\n| 价值      | 当前进度值。可用范围介于 0 到 100 之间。使用该 `stack` 属性值是可选的，用作 `maxValue`。 |  `number`   |             |\n| qa        | `data-qa` HTML 属性，用于测试                                                            |  `string`   |             |\n\n## CSS API\n\n| 姓名                                   | 描述                       |\n| :------------------------------------- | :------------------------- |\n| `--g-progress-empty-text-color`        | 空白的 `Progress` 文字颜色 |\n| `--g-progress-filled-text-color`       | 填充的 `Progress` 文字颜色 |\n| `--g-progress-empty-background-color`  | 空白的 `Progress` 背景颜色 |\n| `--g-progress-filled-background-color` | 填充的 `Progress` 背景颜色 |\n","_nextI18Next":{"initialI18nStore":{"zh":{"common":{"pageNotFound":"页面未找到","pageNotFoundDescription":"您正在寻找的页面不存在或已被移动。","backToHome":"返回首页","actions_open":"打开","actions_copyToClipboard":"复制到剪贴板","actions_share":"分享","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"游乐场","menu_libraries":"图书馆","menu_components":"组件","menu_design":"设计","menu_editor":"编辑器","menu_icons":"图标","menu_themer":"主题","roadmap_inProgress":"进行中","navigation_previous":"以前","navigation_next":"下一步","emptySearchPlaceholder":"什么都没找到","show_more":"显示更多","show_less":"少显示"},"component":{"actions_openInFigma":"在 Figma 中打开","title":"组件","searchPlaceholder":"按组件名称搜索","color-input_validation-format-error":"格式不正确","maintainers_one":"维护者：","maintainers_other":"维护者：","maintainers":"维护者：","theme":"切换主题","rtlOn":"开启 RTL","rtlOff":"关闭 RTL","rtlNotSupported":"不支持 RTL"},"libraries-info":{"description_uikit":"用于使用 Gravity 构建服务的基础用户界面组件和令牌。","description_components":"一组复杂的 React 组件。","description_icons":"为您的项目设置数百种不同的现代 SVG 图标。","description_illustrations":"一组用于显示数据状态的插图。","description_dynamic-forms":"用于渲染 JSON 架构描述的简洁实用的反应表单的库","description_page-constructor":"一组时尚的功能区块，用于快速创建促销和登录页面。","description_blog-constructor":"一个基于页面构造器库的库，用于创建类似博客的服务。","description_chartkit":"与我们的设计系统集成的数据可视化套件。","description_dashkit":"用于构建交互式仪表板的网格组件。","description_yagr":"基于 UpLot 的高性能画布图表渲染器。","description_nodekit":"适用于 Node.js 应用程序、脚本和库的简单工具包。","description_expresskit":"与 NodeKit 集成的轻量级 express.js 包装器。","description_app-layout":"我们的 SPA 应用程序中使用的 HTML 布局生成器。","description_app-builder":"我们的 SPA 应用程序中使用的基于 Webpack 的静态资产生成器。","description_navigation":"适用于复杂服务的紧凑且可扩展的导航面板。","description_date-utils":"用于管理日期和时间值的助手。","description_date-components":"各种日期组件。","description_axios-wrapper":"Axios 封装器，可自动取消并发请求。","description_dialog-fields":"一个 react-final-final-final-form 包装器，为构建表单提供了一些有用的高级组件。","description_paranoid":"集群拓扑可视化工具。","description_react-data-table":"一个用于渲染大型复杂表格的反应组件。","description_unipika":"数据格式库。","description_ui-logger":"简单的客户端记录器。","description_oauth-clients":"客户端 OAuth 库，在身份验证流程之上提供便捷的抽象。","description_i18n":"Gravity UI 项目的国际化助手。","description_eslint-config":"Gravity UI 项目的 ESLint 配置预设。","description_tsconfig":"Gravity UI 项目的 TypeScript 编译器配置","description_prettier-config":"Gravity UI 项目的更漂亮的配置预设。","description_stylelint-config":"Gravity UI 项目的 Stylelint 配置预设。","description_babel-preset":"Gravity UI 项目的 Babel 配置预设。","description_browserslist-config":"我们的服务中使用的浏览器列表配置预设。","description_markdown-editor":"一款与 Markdown 合作的强大工具，它结合了所见即所得和标记模式。","description_graph":"具有动态比例感知细节的高性能图形渲染器","description_data-source":"围绕数据获取的封装工具。","description_webpack-i18n-assets-plugin":"一个 Webpack 插件，用目标文本替换对本地化函数 (i18n) 的调用。","description_table":"用于以表格格式可视化数据的库。"}},"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"zh","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}