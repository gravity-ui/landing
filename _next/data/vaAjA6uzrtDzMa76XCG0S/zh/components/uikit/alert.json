{"pageProps":{"libId":"uikit","componentId":"alert","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Alert\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Alert} from '@gravity-ui/uikit';\n```\n\n### 主题 (`theme`)\n\n`normal`：主要主题（默认使用）。\n\n`info`：用于任何常规信息。\n\n`success`：用于积极信息。\n\n`warning`：用于需要注意的信息。\n\n`danger`：用于严重错误。\n\n`utility`：用于有用的提示。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert theme=\"normal\" title=\"Normal\" message=\"Normal theme\" />\n<Alert theme=\"info\" title=\"Info\" message=\"Info theme\" />\n<Alert theme=\"success\" title=\"Success\" message=\"Success theme\" />\n<Alert theme=\"warning\" title=\"Warning\" message=\"Warning theme\" />\n<Alert theme=\"danger\" title=\"Danger\" message=\"Danger theme\" />\n<Alert theme=\"utility\" title=\"utility\" message=\"Utility theme\" />\n`}>\n    <UIKit.Alert theme=\"normal\" title=\"Normal\" message=\"Normal theme\" />\n    <UIKit.Alert theme=\"info\" title=\"Info\" message=\"Info theme\" />\n    <UIKit.Alert theme=\"success\" title=\"Success\" message=\"Success theme\" />\n    <UIKit.Alert theme=\"warning\" title=\"Warning\" message=\"Warning theme\" />\n    <UIKit.Alert theme=\"danger\" title=\"Danger\" message=\"Danger theme\" />\n    <UIKit.Alert theme=\"utility\" title=\"Utility\" message=\"Utility theme\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert theme=\"normal\" title=\"Normal\" message=\"Normal theme\"/>\n<Alert theme=\"info\" title=\"Info\" message=\"Info theme\"/>\n<Alert theme=\"success\" title=\"Success\" message=\"Success theme\"/>\n<Alert theme=\"warning\" title=\"Warning\" message=\"Warning theme\"/>\n<Alert theme=\"danger\" title=\"Danger\" message=\"Danger theme\"/>\n<Alert theme=\"utility\" title=\"Utility\" message=\"Utility theme\"/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### 视图 (`view`)\n\n`filled`：用于调整警告框的背景颜色（默认使用）。\n\n`outlined`：用于调整警告框的边框颜色。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert title=\"Filled\" message=\"Filled view\" view=\"filled\" />\n<Alert title=\"Outlined\" message=\"Outlined theme\" view=\"outlined\" />\n`}\n>\n    <UIKit.Alert title=\"Filled\" message=\"Filled view\" view=\"filled\" />\n    <UIKit.Alert title=\"Outlined\" message=\"Outlined theme\" view=\"outlined\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```\n<Alert title=\"Filled\" message=\"Filled view\" view=\"filled\" />\n<Alert title=\"Outlined\" message=\"Outlined theme\" view=\"outlined\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### 布局 (`layout`)\n\n`vertical`：如果有带按钮的 `actions` 属性，用于引导用户到内容。它允许在文本下方显示按钮（默认使用）。\n\n`horizontal`：如果有带按钮的 `actions` 属性，用于引导用户到内容。它允许在文本右侧显示按钮。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert layout=\"vertical\" title=\"Vertical\" message=\"Vertical direction\" actions={<Alert.Action>button</Alert.Action>} />\n<Alert layout=\"horizontal\" title=\"Horizontal\" message=\"Horizontal direction\" actions={<Alert.Action>button</Alert.Action>} />\n`}>\n    <UIKit.Alert layout=\"vertical\" title=\"Vertical\" message=\"Vertical direction\" actions={<UIKit.Alert.Action>button</UIKit.Alert.Action>} />\n    <UIKit.Alert layout=\"horizontal\" title=\"Horizontal\" message=\"Horizontal direction\" actions={<UIKit.Alert.Action>button</UIKit.Alert.Action>} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert layout=\"vertical\" title=\"Vertical\" message=\"Vertical direction\" actions={<Alert.Action>button</Alert.Action>}/>\n<Alert layout=\"horizontal\" title=\"Horizontal\" message=\"Horizontal direction\" actions={<Alert.Action>button</Alert.Action>}/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### 边角 (`corners`)\n\n`rounded`：启用警告框窗口的圆角（默认使用）。\n\n`square`：启用警告框窗口的方角。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert title=\"Rounded\" message=\"Rounded corners\" corners=\"rounded\"  />\n<Alert title=\"Square\" message=\"Square corners\" corners=\"square\" />\n`}\n>\n    <UIKit.Alert title=\"Rounded\" message=\"Rounded corners\" corners=\"rounded\"  />\n    <UIKit.Alert title=\"Square\" message=\"Square corners\" corners=\"square\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert title=\"Rounded\" message=\"Rounded corners\" corners=\"rounded\"/>\n<Alert title=\"Square\" message=\"Square corners\" corners=\"square\"/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 警告框标题\n\n`title`：警告框标题。它的优先级低于 `Alert.Title`。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert title={<Alert.Title className={'some-class'} text=\"some text\"></Alert.Title>} />\n`}\n>\n    <UIKit.Alert title={<UIKit.Alert.Title className={'some-class'} text=\"some text\"></UIKit.Alert.Title>} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert title={<Alert.Title className={'some-class'} text=\"some text\"></Alert.Title>} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 警告框消息\n\n`message`：警告框消息。它应该足够有意义，能够完全解释警告框的内容。\n\n## `onClose`\n\n`onClose`：当用户点击警告框的关闭按钮时调用的回调函数。当定义了此属性时，关闭按钮将可见。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert onClose={() => alert('Close button pressed')} title=\"Alert has close\" message=\"Alert has close\" />\n`}\n>\n    <UIKit.Alert onClose={() => alert('Close button pressed')} title=\"Alert has close\" message=\"Alert has close\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert\n  onClose={() => alert('Close button pressed')}\n  title=\"Alert has close\"\n  message=\"Alert has close\"\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### 对齐 (`align`)\n\n确定 `Alert` 组件内部内容的垂直对齐方式。\n\n`baseline`：默认对齐方式。\n\n`center`：内容在 `Alert` 组件内垂直居中。如果操作占用的空间比文本多，或者图标必须位于内容中间，这可能很有用。\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert align=\"baseline\" theme=\"info\" title=\"Baseline\" message=\"Baseline align\" actions={<Alert.Action>button</Alert.Action>} />\n<Alert align=\"center\" theme=\"info\" title=\"Center\" message=\"Center align\" actions={<Alert.Action>button</Alert.Action>} align=\"center\"/>\n`}>\n    <UIKit.Alert align=\"baseline\" theme=\"info\" title=\"Baseline\" message=\"Baseline align\" actions={<UIKit.Alert.Action>button</UIKit.Alert.Action>} />\n    <UIKit.Alert align=\"center\" theme=\"info\" title=\"Center\" message=\"Center align\" actions={<UIKit.Alert.Action>button</UIKit.Alert.Action>} align=\"center\"/>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert align=\"vertical\" title=\"Vertical\" message=\"Vertical direction\" actions={<Alert.Action>button</Alert.Action>}/>\n<Alert align=\"horizontal\" title=\"Horizontal\" message=\"Horizontal direction\" actions={<Alert.Action>button</Alert.Action>}/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## 属性\n\n| 名称      | 描述                                              |                                类型                                |    默认值    |\n| :-------- | :------------------------------------------------ | :----------------------------------------------------------------: | :----------: |\n| theme     | 警告框外观                                        | `\"normal\"` `\"info\"` `\"success\"` `\"warning\"` `\"danger\"` `\"utility\"` |  `\"normal\"`  |\n| view      | 启用/禁用警告框的背景颜色                         |                      `\"filled\"` `\"outlined\"`                       |  `\"filled\"`  |\n| layout    | 如果有带按钮的 `actions` 属性，用于引导用户到内容 |                    `\"vertical\"` `\"horizontal\"`                     | `\"vertical\"` |\n| corners   | 用于警告框窗口的圆角/方角                         |                       `\"rounded\"` `\"square\"`                       | `\"rounded\"`  |\n| title     | 警告框标题                                        |                              `string`                              |              |\n| message   | 警告框消息                                        |                         `React.ReactNode`                          |              |\n| onClose   | 当用户点击警告框的关闭按钮时调用的回调函数        |                             `Function`                             |              |\n| actions   | 按钮数组或完整的自定义组件                        |                 `React.ReactNode` `\"AlertAction\"`                  |              |\n| align     | 确定 `Alert` 组件内部内容的垂直对齐方式           |                      `\"center\"` `\"baseline\"`                       | `\"baseline\"` |\n| style     | HTML style 属性                                   |                       `React.CSSProperties`                        |              |\n| className | 警告框类名                                        |                              `string`                              |              |\n| icon      | 覆盖默认图标                                      |                         `React.ReactNode`                          |              |\n| qa        | HTML `data-qa` 属性，用于测试                     |                              `string`                              |              |\n","_nextI18Next":{"initialI18nStore":{"zh":{"common":{"pageNotFound":"页面未找到","pageNotFoundDescription":"您正在寻找的页面不存在或已被移动。","backToHome":"返回首页","actions_open":"打开","actions_copyToClipboard":"复制到剪贴板","actions_share":"分享","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"游乐场","menu_libraries":"图书馆","menu_components":"组件","menu_design":"设计","menu_editor":"编辑器","menu_icons":"图标","menu_themer":"主题","roadmap_inProgress":"进行中","navigation_previous":"以前","navigation_next":"下一步","emptySearchPlaceholder":"什么都没找到","show_more":"显示更多","show_less":"少显示"},"component":{"actions_openInFigma":"在 Figma 中打开","title":"组件","searchPlaceholder":"按组件名称搜索","color-input_validation-format-error":"格式不正确","maintainers_one":"维护者：","maintainers_other":"维护者：","maintainers":"维护者：","theme":"切换主题","rtlOn":"开启 RTL","rtlOff":"关闭 RTL","rtlNotSupported":"不支持 RTL"},"libraries-info":{"description_uikit":"用于使用 Gravity 构建服务的基础用户界面组件和令牌。","description_components":"一组复杂的 React 组件。","description_icons":"为您的项目设置数百种不同的现代 SVG 图标。","description_illustrations":"一组用于显示数据状态的插图。","description_dynamic-forms":"用于渲染 JSON 架构描述的简洁实用的反应表单的库","description_page-constructor":"一组时尚的功能区块，用于快速创建促销和登录页面。","description_blog-constructor":"一个基于页面构造器库的库，用于创建类似博客的服务。","description_chartkit":"与我们的设计系统集成的数据可视化套件。","description_dashkit":"用于构建交互式仪表板的网格组件。","description_yagr":"基于 UpLot 的高性能画布图表渲染器。","description_nodekit":"适用于 Node.js 应用程序、脚本和库的简单工具包。","description_expresskit":"与 NodeKit 集成的轻量级 express.js 包装器。","description_app-layout":"我们的 SPA 应用程序中使用的 HTML 布局生成器。","description_app-builder":"我们的 SPA 应用程序中使用的基于 Webpack 的静态资产生成器。","description_navigation":"适用于复杂服务的紧凑且可扩展的导航面板。","description_date-utils":"用于管理日期和时间值的助手。","description_date-components":"各种日期组件。","description_axios-wrapper":"Axios 封装器，可自动取消并发请求。","description_dialog-fields":"一个 react-final-final-final-form 包装器，为构建表单提供了一些有用的高级组件。","description_paranoid":"集群拓扑可视化工具。","description_react-data-table":"一个用于渲染大型复杂表格的反应组件。","description_unipika":"数据格式库。","description_ui-logger":"简单的客户端记录器。","description_oauth-clients":"客户端 OAuth 库，在身份验证流程之上提供便捷的抽象。","description_i18n":"Gravity UI 项目的国际化助手。","description_eslint-config":"Gravity UI 项目的 ESLint 配置预设。","description_tsconfig":"Gravity UI 项目的 TypeScript 编译器配置","description_prettier-config":"Gravity UI 项目的更漂亮的配置预设。","description_stylelint-config":"Gravity UI 项目的 Stylelint 配置预设。","description_babel-preset":"Gravity UI 项目的 Babel 配置预设。","description_browserslist-config":"我们的服务中使用的浏览器列表配置预设。","description_markdown-editor":"一款与 Markdown 合作的强大工具，它结合了所见即所得和标记模式。","description_graph":"具有动态比例感知细节的高性能图形渲染器","description_data-source":"围绕数据获取的封装工具。","description_webpack-i18n-assets-plugin":"一个 Webpack 插件，用目标文本替换对本地化函数 (i18n) 的调用。","description_table":"用于以表格格式可视化数据的库。"}},"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"zh","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}