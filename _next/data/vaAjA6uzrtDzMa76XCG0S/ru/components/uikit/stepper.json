{"pageProps":{"libId":"uikit","componentId":"stepper","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Stepper\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Stepper} from '@gravity-ui/uikit';\n```\n\n`Stepper` - это компонент, который отображает прогресс при помощи последовательности пронумерованных шагов. Компонент обеспечивает возможность использования wizard-like процессов работы.\n\n## Example\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Stepper>\n  <Stepper.Item>Step 1</Stepper.Item>\n  <Stepper.Item>Step 2</Stepper.Item>\n  <Stepper.Item>Step 3</Stepper.Item>\n  <Stepper.Item>Step 4 with very long title</Stepper.Item>\n</Stepper>\n`}\n>\n    <UIKit.Stepper>\n        <UIKit.Stepper.Item>Step 1</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item>Step 2</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item>Step 3</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item>Step 4 with very long title</UIKit.Stepper.Item>\n    </UIKit.Stepper>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<Stepper>\n  <Stepper.Item>Step 1</Stepper.Item>\n  <Stepper.Item>Step 2</Stepper.Item>\n  <Stepper.Item>Step 3</Stepper.Item>\n  <Stepper.Item>Step 4 with very long title</Stepper.Item>\n</Stepper>\n```\n\n<!-- Storybook example -->\n\n<StepperDefault />\n\n<!--/GITHUB_BLOCK-->\n\n### Interactive items\n\nИспользуйте `onUpdate` и `value` параметры вместе с кастомным состоянием для управления шагами\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n  <Stepper value={0} onUpdate={(id) => alert(id)}>\n    <Stepper.Item>Step 1</Stepper.Item>\n    <Stepper.Item>Step 2</Stepper.Item>\n    <Stepper.Item>Step 3</Stepper.Item>\n    <Stepper.Item>Step 4 with very long title</Stepper.Item>\n  </Stepper>\n`}\n>\n    <UIKit.Stepper value={0} onUpdate={(id) => alert(id)}>\n        <UIKit.Stepper.Item>Step 1</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item>Step 2</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item>Step 3</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item>Step 4 with very long title</UIKit.Stepper.Item>\n    </UIKit.Stepper>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\nconst [value, setValue] = React.useState();\n\nreturn (\n  <Stepper value={value} onUpdate={setValue}>\n    <Stepper.Item>Step 1</Stepper.Item>\n    <Stepper.Item>Step 2</Stepper.Item>\n    <Stepper.Item>Step 3</Stepper.Item>\n    <Stepper.Item>Step 4 with very long title</Stepper.Item>\n  </Stepper>\n);\n```\n\n<!-- Storybook example -->\n\n<StepperInteractiveShowcase />\n\n<!--/GITHUB_BLOCK-->\n\n### Different views\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Stepper>\n  <Stepper.Item>Step 1</Stepper.Item>\n  <Stepper.Item view=\"error\">Step 2</Stepper.Item>\n  <Stepper.Item view=\"error\">Step 3</Stepper.Item>\n  <Stepper.Item view=\"success\">Step 4</Stepper.Item>\n</Stepper>\n`}\n>\n    <UIKit.Stepper>\n        <UIKit.Stepper.Item>Step 1</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item view=\"error\">Step 2</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item view=\"error\">Step 3</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item view=\"success\">Step 4 with very long title</UIKit.Stepper.Item>\n    </UIKit.Stepper>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<Stepper>\n  <Stepper.Item>Step 1</Stepper.Item>\n  <Stepper.Item view=\"error\">Step 2</Stepper.Item>\n  <Stepper.Item view=\"error\">Step 3</Stepper.Item>\n  <Stepper.Item view=\"success\">Step 4</Stepper.Item>\n</Stepper>\n```\n\n<!-- Storybook example -->\n\n<StepperView/>\n\n<!--/GITHUB_BLOCK-->\n\n### Different sizes\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Stepper size=\"l\">\n  <Stepper.Item>Step 1</Stepper.Item>\n  <Stepper.Item>Step 2</Stepper.Item>\n  <Stepper.Item>Step 3</Stepper.Item>\n  <Stepper.Item>Step 4</Stepper.Item>\n</Stepper>\n`}\n>\n    <UIKit.Stepper size=\"l\">\n        <UIKit.Stepper.Item>Step 1</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item>Step 2</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item>Step 3</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item>Step 4 with very long title</UIKit.Stepper.Item>\n    </UIKit.Stepper>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<Flex direction=\"column\" gap={4}>\n  <Stepper {...args} size=\"s\">\n    <Stepper.Item>Step 1</Stepper.Item>\n    <Stepper.Item>Step 2</Stepper.Item>\n    <Stepper.Item>Step 3</Stepper.Item>\n  </Stepper>\n\n  <Stepper {...args} size=\"m\">\n    <Stepper.Item>Step 1</Stepper.Item>\n    <Stepper.Item>Step 2</Stepper.Item>\n    <Stepper.Item>Step 3</Stepper.Item>\n  </Stepper>\n\n  <Stepper {...args} size=\"l\">\n    <Stepper.Item>Step 1</Stepper.Item>\n    <Stepper.Item>Step 2</Stepper.Item>\n    <Stepper.Item>Step 3</Stepper.Item>\n  </Stepper>\n</Flex>\n```\n\n<!-- Storybook example -->\n\n<StepperSize/>\n\n<!--/GITHUB_BLOCK-->\n\n### Disabled steps\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Stepper>\n  <Stepper.Item>Step 1</Stepper.Item>\n  <Stepper.Item disabled>Step 2</Stepper.Item>\n  <Stepper.Item disabled>Step 3</Stepper.Item>\n  <Stepper.Item disabled>Step 4 with very long title</Stepper.Item>\n</Stepper>\n`}\n>\n    <UIKit.Stepper>\n        <UIKit.Stepper.Item>Step 1</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item disabled>Step 2</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item disabled>Step 3</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item disabled>Step 4 with very long title</UIKit.Stepper.Item>\n    </UIKit.Stepper>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<Stepper>\n  <Stepper.Item>Step 1</Stepper.Item>\n  <Stepper.Item disabled>Step 2</Stepper.Item>\n  <Stepper.Item disabled>Step 3</Stepper.Item>\n  <Stepper.Item disabled>Step 4 with very long title</Stepper.Item>\n</Stepper>\n```\n\n<!-- Storybook example -->\n\n<StepperDisabled/>\n\n<!--/GITHUB_BLOCK-->\n\n### Custom icons\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Stepper>\n  <Stepper.Item icon={<Icon data={Gear} />}>Step 1</Stepper.Item>\n  <Stepper.Item icon={<Icon data={Rocket} />}>Step 2</Stepper.Item>\n  <Stepper.Item icon={<Icon data={Cloud} />}>Step 3</Stepper.Item>\n  <Stepper.Item icon={<Icon data={Hammer} />}>Step 4 with very long title</Stepper.Item>\n</Stepper>\n`}\n>\n    <UIKitExamples.StepperCustomIconExample />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<Stepper>\n  <Stepper.Item icon={<Icon data={Rocket} />}>Step 1</Stepper.Item>\n  <Stepper.Item view=\"error\" icon={<Icon data={CreditCard} />}>\n    Step 2\n  </Stepper.Item>\n  <Stepper.Item view=\"success\" icon={<Icon data={Cloud} />}>\n    Step 3\n  </Stepper.Item>\n  <Stepper.Item>Step 4 with very long title</Stepper.Item>\n</Stepper>\n```\n\n<!-- Storybook example -->\n\n<StepperCustomIcons/>\n\n<!--/GITHUB_BLOCK-->\n\n### Custom step separator\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Stepper separator=\">\">\n  <Stepper.Item>Step 1</Stepper.Item>\n  <Stepper.Item view=\"error\">Step 2</Stepper.Item>\n  <Stepper.Item view=\"success\">Step 3</Stepper.Item>\n  <Stepper.Item>Step 4 with very long title</Stepper.Item>\n</Stepper>\n`}\n>\n    <UIKit.Stepper separator=\">\">\n        <UIKit.Stepper.Item>Step 1</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item view=\"error\">Step 2</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item view=\"success\">Step 3</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item>Step 4 with very long title</UIKit.Stepper.Item>\n    </UIKit.Stepper>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\nconst Separator = () => {\n  return <Text color=\"secondary\">{'->'}</Text>;\n};\n\n<Stepper {...args} separator={<Separator />}>\n  <Stepper.Item>Step 1</Stepper.Item>\n  <Stepper.Item view=\"error\">Step 2</Stepper.Item>\n  <Stepper.Item view=\"success\">Step 3</Stepper.Item>\n  <Stepper.Item>Step 4 with very long title</Stepper.Item>\n</Stepper>;\n```\n\n<!-- Storybook example -->\n\n<StepperCustomSeparator/>\n\n<!--/GITHUB_BLOCK-->\n\n### Step with floating element\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Stepper>\n  <Tooltip content=\"fancy step with tooltip\">\n    <Stepper.Item>Step 1</Stepper.Item>\n  </Tooltip>\n  <Stepper.Item view=\"error\">Step 2</Stepper.Item>\n  <Stepper.Item view=\"success\">Step 3</Stepper.Item>\n  <Stepper.Item>Step 4 with very long title</Stepper.Item>\n</Stepper>\n`}\n>\n    <UIKit.Stepper>\n        <UIKit.Tooltip content=\"fancy step with tooltip\">\n          <UIKit.Stepper.Item>Step 1</UIKit.Stepper.Item>\n        </UIKit.Tooltip>\n        <UIKit.Stepper.Item view=\"error\">Step 2</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item view=\"success\">Step 3</UIKit.Stepper.Item>\n        <UIKit.Stepper.Item>Step 4 with very long title</UIKit.Stepper.Item>\n    </UIKit.Stepper>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<Stepper {...args} separator={<Separator />}>\n  <Tooltip content=\"fancy step with tooltip\">\n    <Stepper.Item>Step 1</Stepper.Item>\n  </Tooltip>\n  <Stepper.Item view=\"error\">Step 2</Stepper.Item>\n  <Stepper.Item view=\"success\">Step 3</Stepper.Item>\n  <Stepper.Item>Step 4 with very long title</Stepper.Item>\n</Stepper>\n```\n\n<!-- Storybook example -->\n\n<StepperWithFloatingElements/>\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name             | Description                                                                         |                  Type                  | Default |\n| :--------------- | :---------------------------------------------------------------------------------- | :------------------------------------: | :-----: |\n| children         | Дочерние элементы степера.                                                          | `React.ReactElement<StepperItemProps>` |         |\n| size             | Задает размер степа.                                                                |           `\"s\"` `\"m\"` `\"l\"`            |  `\"s\"`  |\n| value            | Текущий выбранный идентификатор степа.                                              |           `number` `string`            |         |\n| onUpdate         | Функция для обновления текущего выбранного элемента.                                |               `Function`               |         |\n| qa               | `data-qa` HTML атрибут, используется для тестирования.                              |                `string`                |         |\n| separator        | Кастомная нода-разделитель степов.                                                  |           `React.ReactNode`            |         |\n| className        | CSS имя класса Step контейнера.                                                     |                `string`                |         |\n| style            | Задает инлайн-стили Step контейнера.                                                |            `CSSProperties`             |         |\n| aria-label       | Определяет строковое значение, используемое в качестве метки для текущего элемента. |                `string`                |         |\n| aria-labelledby  | Определяет элементы, используемые в качестве метки для текущего элемента.           |                `string`                |         |\n| aria-describedby | Определяет элементы, описывающие объект.                                            |                `string`                |         |\n\n### StepperItemProps\n\n| Name      | Description                                                              |              Type              | Default  |\n| :-------- | :----------------------------------------------------------------------- | :----------------------------: | :------: |\n| id        | Идентификатора степа. Если не передан, берется значения индекса массива. |       `string` `number`        |          |\n| view      | Внешний вид степа.                                                       | `\"idle\"` `\"error\"` `\"success\"` | `\"idle\"` |\n| children  | Внутреннее содержимое степа.                                             |          `React.Node`          |          |\n| disabled  | Устанавливает заблокированное состояние для степа.                       |           `boolean`            |          |\n| icon      | Задает кастомную иконка степа                                            |         `SVGIconData`          |          |\n| onClick   | Обработчик клика на степ                                                 |   `React.MouseEventHandler`    |          |\n| className | CSS class name элемента                                                  |            `string`            |          |\n\n### CSS API\n\n| Name                              | Description                                    |\n| :-------------------------------- | :--------------------------------------------- |\n| `--g-stepper-gap`                 | Расстояние между степами и разделителем.       |\n| `--g-stepper-item-text-max-width` | Максимальная ширина текстового контента степа. |\n","_nextI18Next":{"initialI18nStore":{"ru":{"common":{"pageNotFound":"Страница не найдена","pageNotFoundDescription":"Страница, которую вы ищете, не существует или была перемещена.","backToHome":"Вернуться на главную","actions_open":"Открыть","actions_copyToClipboard":"Копировать в буфер обмена","actions_share":"Поделиться","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Библиотеки","menu_components":"Компоненты","menu_design":"Дизайн","menu_editor":"Редактор","menu_icons":"Иконки","menu_themer":"Темизатор","roadmap_inProgress":"В работе","navigation_previous":"Назад","navigation_next":"Далее","emptySearchPlaceholder":"Ничего не найдено","show_more":"Показать больше","show_less":"Показать меньше"},"component":{"actions_openInFigma":"Открыть в Figma","title":"Компоненты","searchPlaceholder":"Поиск по названию","color-input_validation-format-error":"Неверный формат","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Переключить тему","rtlOn":"Включить RTL","rtlOff":"Выключить RTL","rtlNotSupported":"RTL не поддерживается"},"libraries-info":{"description_uikit":"Базовые UI-компоненты и токены для построения сервисов с Gravity.","description_components":"Набор комплексных React-компонентов.","description_icons":"Сотни стильных иконок для ваших проектов.","description_illustrations":"Набор иллюстраций для отображения статусов данных.","description_dynamic-forms":"Библиотека для рендеринга лаконичных функциональных форм, описанных JSON-схемой.","description_page-constructor":"Набор стильно выглядящих функциональных блоков для быстрого создания промо-страниц.","description_blog-constructor":"Библиотека, основанная на Page Constructor, для создания блогов.","description_chartkit":"Библиотека визуализации данных, интегрированная с нашей дизайн‑системой.","description_dashkit":"Cетка компонентов для построения интерактивных дашбордов.","description_yagr":"Высокопроизводительная отрисовка canvas-графиков, основанная на uPlot.","description_nodekit":"Простой набор инструментов для приложений, скриптов и библиотек Node.js.","description_expresskit":"Легковесная надстройка для express.js, интегрируемая с NodeKit.","description_app-layout":"Генератор HTML-макета, используемый в одностраничных приложениях (SPA).","description_app-builder":"Основанный на Webpack сборщик статики, используемый в одностраничных приложениях (SPA).","description_navigation":"Компактная и расширяемая навигационная панель для сложных сервисов.","description_date-utils":"Библиотека для управления значениями даты и времени.","description_date-components":"Различные компоненты для работы с датами.","description_axios-wrapper":"Надстройка для axios, обеспечивающая автоматическую отмену конкурирующих запросов.","description_dialog-fields":"Надстройка для react-final-form, которая предоставляет полезные высокоуровневые компоненты для создания форм.","description_paranoid":"Визуализатор топологий кластера.","description_react-data-table":"React-компонент для рендеринга больших и сложных таблиц.","description_unipika":"Библиотека форматирования данных.","description_ui-logger":"Простой клиентский логгер.","description_oauth-clients":"Клиентская библиотека OAuth, обеспечивающая удобную абстракцию поверх аутентификации.","description_i18n":"Библиотека для интернационализации проектов Gravity UI.","description_eslint-config":"Пресет настройки ESLint для проектов Gravity UI.","description_tsconfig":"Пресет настройки компилятора TypeScript для проектов Gravity UI.","description_prettier-config":"Пресет настройки Prettier для проектов Gravity UI.","description_stylelint-config":"Пресет настройки Stylelint для проектов Gravity UI.","description_babel-preset":"Пресет настройки Babel для проектов Gravity UI.","description_browserslist-config":"Пресет настройки Browserslist для проектов Gravity UI.","description_markdown-editor":"Мощный инструмент для работы с Markdown, который сочетает в себе режимы WYSIWYG и разметки.","description_graph":"Библиотека для визуализации больших графов с динамическим уровнем детализации","description_data-source":"Библиотека-обертка над загрузкой данных.","description_webpack-i18n-assets-plugin":"Плагин для Webpack, который заменяет вызовы функций локализации (i18n) на целевые тексты.","description_table":"Библиотека для отображения таблиц."}},"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"ru","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}