{"pageProps":{"libId":"uikit","componentId":"dropdown-menu","readmeContent":"<!--GITHUB_BLOCK-->\n\n# DropdownMenu\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {DropdownMenu} from '@gravity-ui/uikit';\n```\n\nКомпонент `DropdownMenu` (выпадающее меню) позволяет организовывать элементы в группы, создавать подменю и настраивать переключатель. Элементы выпадающего меню настраиваются через свойство `items`. По умолчанию переключатель меню — кнопка с иконкой многоточия (**⋯**), которую можно переопределить с помощью свойства `renderSwitcher`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    items={[\n        {\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        items={[\n            {\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  items={[\n    {\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Сгруппированные элементы\n\nЭлементы компонента`DropdownMenu` можно группировать и визуально отделять от остальных с помощью массивов элементов меню, вложенных в массив `items`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    items={[\n        [\n            {\n                action: () => console.log('Call'),\n                text: 'Call',\n            },\n            {\n                action: () => console.log('Send email'),\n                text: 'Send email',\n            },\n        ],\n        {\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        items={[\n            [\n                {\n                    action: () => console.log('Call'),\n                    text: 'Call',\n                },\n                {\n                    action: () => console.log('Send email'),\n                    text: 'Send email',\n                },\n            ],\n            {\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  items={[\n    [\n      {\n        action: () => console.log('Call'),\n        text: 'Call',\n      },\n      {\n        action: () => console.log('Send email'),\n        text: 'Send email',\n      },\n    ],\n    {\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Подменю\n\nИспользуя свойство `items` для отдельного элемента меню, можно добавить вложенные подэлементы.\n\nДля элементов меню с подменю предусмотрены следующие дополнительные классы для стилизации:\n\n- `.g-dropdown-menu__menu-item_with-submenu`— для элементов меню с более чем одним вложенным подэлементом;\n- `.g-dropdown-menu__menu-item_active-parent`— для элемента, подменю которого в данный момент открыто.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    items={[\n        {\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n        {\n            text: 'More',\n            items: [\n                {\n                    action: () => console.log('Mark as'),\n                    text: 'Mark as',\n                    items: [\n                        {\n                            action: () => console.log('Important'),\n                            text: 'Important',\n                        },\n                        {\n                            action: () => console.log('Favorite'),\n                            text: 'Favorite',\n                        },\n                    ],\n                },\n                {\n                    action: () => console.log('Copy'),\n                    text: 'Copy',\n                },\n                {\n                    text: 'Move to',\n                    items: [\n                        {\n                            action: () => console.log('Location #1'),\n                            text: 'Location #1',\n                        },\n                        {\n                            action: () => console.log('Location #2'),\n                            text: 'Location #2',\n                        },\n                    ],\n                },\n            ],\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        items={[\n            {\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n            {\n                text: 'More',\n                items: [\n                    {\n                        action: () => console.log('Mark as'),\n                        text: 'Mark as',\n                        items: [\n                            {\n                                action: () => console.log('Important'),\n                                text: 'Important',\n                            },\n                            {\n                                action: () => console.log('Favorite'),\n                                text: 'Favorite',\n                            },\n                        ],\n                    },\n                    {\n                        action: () => console.log('Copy'),\n                        text: 'Copy',\n                    },\n                    {\n                        text: 'Move to',\n                        items: [\n                            {\n                                action: () => console.log('Location #1'),\n                                text: 'Location #1',\n                            },\n                            {\n                                action: () => console.log('Location #2'),\n                                text: 'Location #2',\n                            },\n                        ],\n                    },\n                ],\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  items={[\n    {\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n    {\n      text: 'More',\n      items: [\n        {\n          action: () => console.log('Mark as'),\n          text: 'Mark as',\n          items: [\n            {\n              action: () => console.log('Important'),\n              text: 'Important',\n            },\n            {\n              action: () => console.log('Favorite'),\n              text: 'Favorite',\n            },\n          ],\n        },\n        {\n          action: () => console.log('Copy'),\n          text: 'Copy',\n        },\n        {\n          text: 'Move to',\n          items: [\n            {\n              action: () => console.log('Location #1'),\n              text: 'Location #1',\n            },\n            {\n              action: () => console.log('Location #2'),\n              text: 'Location #2',\n            },\n          ],\n        },\n      ],\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Пользовательский переключатель меню\n\nДля настройки переключателя меню используйте свойство `renderSwitcher`. Это может быть любая функция, возвращающая React-компонент (или `(props: SwitcherProps) => React.ReactNode` в контексте TypeScript; см. [`SwitcherProps`](#switcherprops) ниже). По умолчанию переключатель меню — кнопка с иконкой многоточия (**⋯**).\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    renderSwitcher={(props) => (\n        <div {...props} style={{cursor: 'pointer', borderBottom: '1px dotted'}}>John Doe</div>\n    )}\n    items={[\n        {\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        renderSwitcher={(props) => (\n            <div {...props} style={{cursor: 'pointer', borderBottom: '1px dotted'}}>John Doe</div>\n        )}\n        items={[\n            {\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  renderSwitcher={(props) => (\n    <div {...props} style={{cursor: 'pointer', borderBottom: '1px dotted'}}>\n      John Doe\n    </div>\n  )}\n  items={[\n    {\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\nПример выше упрощен с целью показать принцип работы настраиваемого переключателя меню. В реальных приложениях желательно, чтобы кликабельный переключатель меню представлял собой компонент, доступный для управления с клавиатуры и через другие вспомогательные технологии, такие как кнопка.\n\n## Пользовательские иконки\n\nДля добавления пользовательских иконок к элементам `DropdownMenu` используйте свойства `iconStart` и `iconEnd`. По умолчанию в элементах `DropdownMenu` иконки отсутствуют.\n\nЧтобы изменить иконку переключателя меню, используйте свойства `renderSwitcher` компонента`DropdownMenu` По умолчанию переключатель меню — кнопка с иконкой многоточия (**⋯**).\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    renderSwitcher={(props) => (\n        <Button {...props} view=\"flat\">\n            <Icon size={16} data={Bars} />\n        </Button>\n    )}\n    items={[\n        {\n            iconStart: <Icon size={16} data={Pencil} />,\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            iconStart: <Icon size={16} data={TrashBin} />,\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        renderSwitcher={(props) => (\n            <UIKit.Button {...props} view=\"flat\">\n                <UIKit.Icon\n                    data={() => (\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M1.25 3.25A.75.75 0 0 1 2 2.5h12A.75.75 0 0 1 14 4H2a.75.75 0 0 1-.75-.75Zm0 4.75A.75.75 0 0 1 2 7.25h12a.75.75 0 0 1 0 1.5H2A.75.75 0 0 1 1.25 8ZM2 12a.75.75 0 0 0 0 1.5h12a.75.75 0 0 0 0-1.5H2Z\" clip-rule=\"evenodd\"></path></svg>\n                    )}\n                    size={16}\n                />\n            </UIKit.Button>\n        )}\n        items={[\n            {\n                iconStart: (\n                    <UIKit.Icon\n                        data={() => (\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M11.423 1A3.577 3.577 0 0 1 15 4.577c0 .27-.108.53-.3.722l-.528.529-1.971 1.971-5.059 5.059a3 3 0 0 1-1.533.82l-2.638.528a1 1 0 0 1-1.177-1.177l.528-2.638a3 3 0 0 1 .82-1.533l5.059-5.059 2.5-2.5c.191-.191.451-.299.722-.299Zm-2.31 4.009-4.91 4.91a1.5 1.5 0 0 0-.41.766l-.38 1.903 1.902-.38a1.5 1.5 0 0 0 .767-.41l4.91-4.91a2.077 2.077 0 0 0-1.88-1.88Zm3.098.658a3.59 3.59 0 0 0-1.878-1.879l1.28-1.28c.995.09 1.788.884 1.878 1.88l-1.28 1.28Z\" clip-rule=\"evenodd\"></path></svg>\n                        )}\n                        size={16}\n                    />\n                ),\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                iconStart: (\n                    <UIKit.Icon\n                        data={() => (\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M9 2H7a.5.5 0 0 0-.5.5V3h3v-.5A.5.5 0 0 0 9 2Zm2 1v-.5a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2V3H2.251a.75.75 0 0 0 0 1.5h.312l.317 7.625A3 3 0 0 0 5.878 15h4.245a3 3 0 0 0 2.997-2.875l.318-7.625h.312a.75.75 0 0 0 0-1.5H11Zm.936 1.5H4.064l.315 7.562A1.5 1.5 0 0 0 5.878 13.5h4.245a1.5 1.5 0 0 0 1.498-1.438l.315-7.562Zm-6.186 2v5a.75.75 0 0 0 1.5 0v-5a.75.75 0 0 0-1.5 0Zm3.75-.75a.75.75 0 0 1 .75.75v5a.75.75 0 0 1-1.5 0v-5a.75.75 0 0 1 .75-.75Z\" clip-rule=\"evenodd\"></path></svg>\n                        )}\n                        size={16}\n                    />\n                ),\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  renderSwitcher={(props) => (\n    <Button {...props} view=\"flat\">\n      <Icon size={16} data={Bars} />\n    </Button>\n  )}\n  items={[\n    {\n      iconStart: <Icon size={16} data={Pencil} />,\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      iconStart: <Icon size={16} data={TrashBin} />,\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Свойства\n\n| Имя                        | Описание                                                                                                 |                        Тип                         | Значение по умолчанию |\n| :------------------------- | :------------------------------------------------------------------------------------------------------- | :------------------------------------------------: | :-------------------: |\n| `items`                    | Массив элементов. Вложенные массивы элементов представляют визуально разделенные группы.                 | `(DropdownMenuItem \\| DropdownMenuItem[])[] \\| []` |                       |\n| `data`                     | Данные, которые передаются в действия, вызываемые из меню (это может быть полезно для контекстных меню). |                       `any`                        |                       |\n| `icon`                     | Иконка дефолтного переключателя (`switcher`).                                                            |                 `React.ReactNode`                  |  Иконка многоточия.   |\n| `size`                     | Применяется как к дефолтному `switcher`, так и к меню.                                                   |            `'s' \\| 'm' \\| 'l' \\| 'xl'`             |         `'m'`         |\n| `disabled`                 | Значение `true` для этого свойства отключает кнопку `switcher` и блокирует открытие меню.                |                     `boolean`                      |                       |\n| `renderSwitcher`           | Функция рендеринга для контрола переключения меню.                                                       |                 `React.ReactNode`                  |                       |\n| `switcherWrapperClassName` | Значение для свойства `className` родительского компонента `switcher`.                                   |                      `string`                      |                       |\n| `defaultSwitcherProps`     | Свойства дефолтного `switcher`.                                                                          |                   `ButtonProps`                    |                       |\n| `defaultSwitcherClassName` | Значение для свойства `className` дефолтного `switcher`.                                                 |                      `string`                      |                       |\n| `menuProps`                | Переопределяет свойства выпадающего меню по умолчанию.                                                   |                    `MenuProps`                     |                       |\n| `popupProps`               | Переопределяет свойства всплывающего окна по умолчанию.                                                  |                    `PopupProps`                    |                       |\n| `open`                     | Переключает видимость выпадающего меню.                                                                  |                     `boolean`                      |                       |\n| `onOpenToggle`             | Вызывается при открытии или закрытии меню.                                                               |                    `() => void`                    |                       |\n| `onSwitcherClick`          | Вызывается при клике по переключателю.                                                                   |       `React.MouseEventHandler<HTMLElement>`       |                       |\n| `hideOnScroll`             | Указывает, нужно ли скрывать меню при прокрутке родительского элемента.                                  |                     `boolean`                      |        `true`         |\n| `children`                 | Пользовательский контент внутри всплывающего окна с меню.                                                |                 `React.ReactNode`                  |                       |\n\n### DropdownMenuItem\n\nИспользуется для описания отдельных элементов выпадающего меню.\n\n| Имя          | Описание                                                                                                                                                             |                      Тип                       | Значение по умолчанию |\n| :----------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :--------------------------------------------: | :-------------------: |\n| `text`       | Текстовое содержимое элемента меню.                                                                                                                                  |               `React.ReactNode`                |                       |\n| `action`     | Обработчик клика по элементу меню. Получает параметры от родительского выпадающего меню (`event` и `data`).                                                          | `(event: React.MouseEvent, data: any) => void` |                       |\n| `iconStart`  | Иконка, отображаемая перед содержимым элемента меню.                                                                                                                 |               `React.ReactNode`                |                       |\n| `iconEnd`    | Иконка, отображаемая после содержимого элемента меню. Игнорируется, если у элемента есть подменю.                                                                    |               `React.ReactNode`                |                       |\n| `hidden`     | Определяет, скрыт ли элемент меню.                                                                                                                                   |                   `boolean`                    |                       |\n| `disabled`   | Определяет, заблокирован ли элемент меню.                                                                                                                            |                   `boolean`                    |                       |\n| `href`       | Элемент меню с этим свойством становится ссылкой на указанное местоположение.                                                                                        |                    `string`                    |                       |\n| `target`     | То же, что и атрибут `target` у тега `<a>`.                                                                                                                          |                    `string`                    |                       |\n| `rel`        | То же, что и атрибут `rel` у тега `<a>`.                                                                                                                             |                    `string`                    |                       |\n| `extraProps` | Дополнительные свойства для элемента меню.                                                                                                                           |                    `object`                    |                       |\n| `title`      | Текст всплывающей подсказки.                                                                                                                                         |                    `string`                    |                       |\n| `className`  | Значение HTML-атрибута `class`.                                                                                                                                      |                    `string`                    |                       |\n| `items`      | Элементы подменю.                                                                                                                                                    |  `(DropdownMenuItem \\| DropdownMenuItem[])[]`  |                       |\n| `popupProps` | Свойства всплывающего окна подменю.                                                                                                                                  |                    `string`                    |                       |\n| `path`       | Путь индексов от корня до текущего элемента.                                                                                                                         |                   `number[]`                   |                       |\n| `closeMenu`  | Пользовательская функция для закрытия меню (`closeMenu`). Ее можно вызвать вместо закрытия основного меню. Позволяет сначала закрыть подменю, а затем основное меню. |                  `() => void`                  |                       |\n\n### SwitcherProps\n\n| Имя         | Описание                                                                   |     Тип      |\n| :---------- | :------------------------------------------------------------------------- | :----------: |\n| `onClick`   | Вызывается при клике по переключателю.                                     | `() => void` |\n| `onKeyDown` | Вызывается при получении переключателем фокуса и нажатии клавиши действия. | `() => void` |\n","_nextI18Next":{"initialI18nStore":{"ru":{"common":{"pageNotFound":"Страница не найдена","pageNotFoundDescription":"Страница, которую вы ищете, не существует или была перемещена.","backToHome":"Вернуться на главную","actions_open":"Открыть","actions_copyToClipboard":"Копировать в буфер обмена","actions_share":"Поделиться","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Библиотеки","menu_components":"Компоненты","menu_design":"Дизайн","menu_editor":"Редактор","menu_icons":"Иконки","menu_themer":"Темизатор","roadmap_inProgress":"В работе","navigation_previous":"Назад","navigation_next":"Далее","emptySearchPlaceholder":"Ничего не найдено","show_more":"Показать больше","show_less":"Показать меньше"},"component":{"actions_openInFigma":"Открыть в Figma","title":"Компоненты","searchPlaceholder":"Поиск по названию","color-input_validation-format-error":"Неверный формат","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Переключить тему","rtlOn":"Включить RTL","rtlOff":"Выключить RTL","rtlNotSupported":"RTL не поддерживается"},"libraries-info":{"description_uikit":"Базовые UI-компоненты и токены для построения сервисов с Gravity.","description_components":"Набор комплексных React-компонентов.","description_icons":"Сотни стильных иконок для ваших проектов.","description_illustrations":"Набор иллюстраций для отображения статусов данных.","description_dynamic-forms":"Библиотека для рендеринга лаконичных функциональных форм, описанных JSON-схемой.","description_page-constructor":"Набор стильно выглядящих функциональных блоков для быстрого создания промо-страниц.","description_blog-constructor":"Библиотека, основанная на Page Constructor, для создания блогов.","description_chartkit":"Библиотека визуализации данных, интегрированная с нашей дизайн‑системой.","description_dashkit":"Cетка компонентов для построения интерактивных дашбордов.","description_yagr":"Высокопроизводительная отрисовка canvas-графиков, основанная на uPlot.","description_nodekit":"Простой набор инструментов для приложений, скриптов и библиотек Node.js.","description_expresskit":"Легковесная надстройка для express.js, интегрируемая с NodeKit.","description_app-layout":"Генератор HTML-макета, используемый в одностраничных приложениях (SPA).","description_app-builder":"Основанный на Webpack сборщик статики, используемый в одностраничных приложениях (SPA).","description_navigation":"Компактная и расширяемая навигационная панель для сложных сервисов.","description_date-utils":"Библиотека для управления значениями даты и времени.","description_date-components":"Различные компоненты для работы с датами.","description_axios-wrapper":"Надстройка для axios, обеспечивающая автоматическую отмену конкурирующих запросов.","description_dialog-fields":"Надстройка для react-final-form, которая предоставляет полезные высокоуровневые компоненты для создания форм.","description_paranoid":"Визуализатор топологий кластера.","description_react-data-table":"React-компонент для рендеринга больших и сложных таблиц.","description_unipika":"Библиотека форматирования данных.","description_ui-logger":"Простой клиентский логгер.","description_oauth-clients":"Клиентская библиотека OAuth, обеспечивающая удобную абстракцию поверх аутентификации.","description_i18n":"Библиотека для интернационализации проектов Gravity UI.","description_eslint-config":"Пресет настройки ESLint для проектов Gravity UI.","description_tsconfig":"Пресет настройки компилятора TypeScript для проектов Gravity UI.","description_prettier-config":"Пресет настройки Prettier для проектов Gravity UI.","description_stylelint-config":"Пресет настройки Stylelint для проектов Gravity UI.","description_babel-preset":"Пресет настройки Babel для проектов Gravity UI.","description_browserslist-config":"Пресет настройки Browserslist для проектов Gravity UI.","description_markdown-editor":"Мощный инструмент для работы с Markdown, который сочетает в себе режимы WYSIWYG и разметки.","description_graph":"Библиотека для визуализации больших графов с динамическим уровнем детализации","description_data-source":"Библиотека-обертка над загрузкой данных.","description_webpack-i18n-assets-plugin":"Плагин для Webpack, который заменяет вызовы функций локализации (i18n) на целевые тексты.","description_table":"Библиотека для отображения таблиц."}},"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"ru","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}