{"pageProps":{"libId":"uikit","componentId":"slider","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Slider\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Slider} from '@gravity-ui/uikit';\n```\n\n`Slider` (слайдер) — это настраиваемый и отзывчивый React-компонент, который позволяет пользователям выбирать одно значение или диапазон значений из заданного набора данных.\n\n## Варианты слайдера\n\n### Одиночный слайдер\n\nПредставляет собой слайдер с одним ползунком для выбора одного значения. Используется по умолчанию.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider />\n`}\n>\n    <UIKitExamples.SliderExample />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Слайдер диапазона\n\nПредставляет собой слайдер с двумя ползунками для выбора диапазона. Для его использования необходимо задать `defaultValue` (для неконтролируемого компонента) или `value` (для контролируемого компонента) в виде массива.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider defaultValue={[20, 40]} />\n`}\n>\n    <UIKitExamples.SliderExample defaultValue={[20, 40]} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider defaultValue={[20, 40]} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Состояния\n\n### `Disabled` (отключен)\n\nСостояние `Slider`, при котором пользователь не может взаимодействовать с компонентом.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider disabled={true} />\n`}\n>\n    <UIKitExamples.SliderExample disabled={true} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider disabled={true} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### `Error` (ошибка)\n\nСостояние `Slider`, которое указывает на некорректный ввод данных пользователем. Для изменения внешнего представления `Slider` примените свойство `validationState`, задав ему значение `\"invalid\"`. Дополнительно через свойство `errorMessage` можно добавить текст сообщения, который будет отображаться под компонентом.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider validationState={\"invalid\"} />\n<Slider validationState={\"invalid\"} errorMessage=\"Error message\" />\n`}\n>\n    <UIKitExamples.SliderExample validationState={\"invalid\"} />\n    <UIKitExamples.SliderExample validationState={\"invalid\"} errorMessage=\"Error message\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider validationState={\"invalid\"} />\n<Slider validationState={\"invalid\"} errorMessage=\"Error message\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Размер\n\nДля изменения размера `Slider` используйте свойство `size`. Размер по умолчанию — `m`.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider size=\"s\" />\n<Slider size=\"m\" />\n<Slider size=\"l\" />\n<Slider size=\"xl\" />\n`}\n>\n    <UIKitExamples.SliderExample size=\"s\" />\n    <UIKitExamples.SliderExample size=\"m\" />\n    <UIKitExamples.SliderExample size=\"l\" />\n    <UIKitExamples.SliderExample size=\"xl\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider size=\"s\" />\n<Slider size=\"m\" />\n<Slider size=\"l\" />\n<Slider size=\"xl\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Значение\n\n### Минимальное и максимальное значения\n\nСвойства `min` и `max` определяют пределы диапазона, который может обрабатывать `Slider`. Эти свойства необходимы для установки границ выбираемых значений.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider min={10} />\n<Slider max={50} />\n<Slider min={20} max={60} />\n`}\n>\n    <UIKitExamples.SliderExample min={10} />\n    <UIKitExamples.SliderExample max={50} />\n    <UIKitExamples.SliderExample min={20} max={60} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider min={10} />\n<Slider max={50} />\n<Slider min={20} max={60} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### `Step` (шаг)\n\nСвойство `step` компонента `Slider` задает величину шага между минимальным и максимальным значениями. Оно контролирует изменение значения при перемещении ползунка.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider step={10} />\n`}\n>\n    <UIKitExamples.SliderExample step={10} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider step={10} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Метки\n\nСвойство `marks` задает количество визуальных меток компонента `Slider`, указывающих на разные значения в диапазоне от минимума до максимума. Данное свойство делает слайдер более удобным для пользователя и улучшает его визуальное оформление, особенно в тех случаях, когда необходимо обозначить конкретные интервалы. Значение по умолчанию — 2 (`min` и `max`). Его можно использовать двумя способами:\n\n- Для задания количества визуальных меток на слайдере:\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider marks={11} />\n`}\n>\n    <UIKitExamples.SliderExample marks={11} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider marks={11} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n- Для указания массива значений меток на слайдере:\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider marks={[0, 50, 100]} />\n`}\n>\n    <UIKitExamples.SliderExample marks={[0, 50, 100]} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider marks={[0, 50, 100]} />\n```\n\n<!--/GITHUB_BLOCK-->\n\nЕсли в свойстве `marks` указать `0` или пустой массив (`[]`), то все метки компонента `Slider` будут скрыты.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider marks={0} />\n`}\n>\n    <UIKitExamples.SliderExample marks={0} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider marks={0} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n> Значение метки можно выбрать, даже если оно не соответствует шагу (`step`).\n\nФормат отображения значений меток можно изменить с помощью свойства `marksFormat`.\n\n#### Определение доступных значений\n\nУстановка свойства `step` в `null` позволяет задать конкретные значения, которые будут доступны на слайдере, вместо непрерывного диапазона. Это особенно полезно в случаях, когда выбор возможен только из заранее определенных дискретных значений. При такой настройке свойства `min`, `max` и `marks` позволяют задать массив чисел, представляющих собой те значения, которые пользователи могут выбрать при работе с компонентом `Slider`.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider marks={[10, 20, 50, 55, 65, 80]} step={null}/>\n`}\n>\n    <UIKitExamples.SliderExample marks={[10, 20, 50, 55, 65, 80]} step={null}/>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider marks={[10, 20, 50, 55, 65, 80]} step={null} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Стартовая точка трека\n\nСвойство `startPoint` позволяет задать стартовое значение, относительно которого будет заполняться трек слайдера. При использовании слайдера диапазона либо при использовании инвертированного слайдера, это свойство игнорируется.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider startPoint={50} />\n`}\n>\n    <UIKitExamples.SliderExample startPoint={50} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider startPoint={50} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Инвертированный трек\n\nСвойство `inverted` позволяет инвертировать положение трека на слайдере.\nПо умолчанию (так же, как и при `false`) слайдер отображает трек от `min` до указателя слайдера.\nПри значении свойства `true` трек будет отображаться от значения слайдера до `max`.\nДанное свойство игнорируется для слайдера диапазона.\nПри установке значения данного свойства в `true` значение свойства `startPoint` будет проигнорировано.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider inverted />\n`}\n>\n    <UIKitExamples.SliderExample inverted />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider inverted />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Тултип\n\nСвойство `tooltipDisplay` в компоненте `Slider` управляет поведением отображения тултипа с текущим значением при взаимодействии пользователя со слайдером. Значение `auto` позволяет отображать тултип только при наведении курсора на ползунок компонента `Slider` или получении компонентом фокуса.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Slider tooltipDisplay=\"on\" />\n`}\n>\n    <UIKitExamples.SliderExample tooltipDisplay=\"on\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Slider tooltipDisplay=\"on\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\nФормат отображения значения тултипа можно изменить с помощью свойства `tooltipFormat`. Если не указать `tooltipformat`, то для отображения значения в тултипе будет использовано свойство `marksFormat`.\n\n## Свойства\n\n| Имя                                         | Описание                                                                                                                                                                                            |                         Тип                          | Значение по умолчанию |\n| :------------------------------------------ | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :--------------------------------------------------: | :-------------------: |\n| apiRef                                      | Ссылка на свойства `focus` and `blur` компонента `Slider`.                                                                                                                                          |                `RefObject<SliderRef>`                |                       |\n| autoFocus                                   | Атрибут `autofocus` для контрола.                                                                                                                                                                   |                      `boolean`                       |                       |\n| className                                   | Имя класса обертки контрола.                                                                                                                                                                        |                       `string`                       |                       |\n| [defaultValue](#варианты-слайдера)          | Значение по умолчанию для контрола, используемое при неконтролируемом состоянии компонента. Если не заполнено, то использует мимнимальное значение слайдера                                         |             `number` `[number, number]`              |                       |\n| [disabled](#disabled-отключен)              | Указывает на то, что пользователь не может взаимодействовать с контролом.                                                                                                                           |                      `boolean`                       |        `false`        |\n| [errorMessage](#error-ошибка)               | Отображаемый текст ошибки.                                                                                                                                                                          |                       `string`                       |                       |\n| [marks](#метки)                             | Текстовые метки под слайдером. В данном свойстве можно задать количество меток или массив значений, для которых они должны отображаться. При указании `0` или `[]` метки не отображаются.           |                 `number` `number[]`                  |          `2`          |\n| [marksFormat](#метки)                       | Определяет форматирование отображаемого значения метки.                                                                                                                                             |             `(value: number) => string`              |                       |\n| [max](#минимальное-и-максимальное-значения) | Максимальное значение компонента.                                                                                                                                                                   |                       `number`                       |         `100`         |\n| [min](#минимальное-и-максимальное-значения) | Минимальное значение компонента.                                                                                                                                                                    |                       `number`                       |          `0`          |\n| onBlur                                      | Срабатывает, когда контрол теряет фокус. Передает событие фокуса в качестве аргумента обратного вызова.                                                                                             | `((e: FocusEvent<HTMLDivElement, Element>) => void)` |                       |\n| onUpdate                                    | Срабатывает, когда пользователь изменяет значение слайдера. Передает событие изменения в качестве аргумента обратного вызова.                                                                       |   `((value: number \\| [number, number]) => void)`    |                       |\n| onUpdateComplete                            | Активируется при срабатывании события `ontouchend` (завершение касания) или `onmouseup` (отпускание кнопки мыши). Передает событие изменения в качестве аргумента обратного вызова.                 |   `((value: number \\| [number, number]) => void)`    |                       |\n| onFocus                                     | Срабатывает, когда контрол получает фокус. Передает событие фокуса в качестве аргумента обратного вызова.                                                                                           | `((e: FocusEvent<HTMLDivElement, Element>) => void)` |                       |\n| [size](#размер)                             | Размер контрола.                                                                                                                                                                                    |               `\"s\"` `\"m\"` `\"l\"` `\"xl\"`               |         `\"m\"`         |\n| [step](#step-шаг)                           | Величина, на которую изменяется значение слайдера при каждом перемещении ползунка. Если установить значение `null`, в качестве шагов будет использоваться свойство `marks`.                         |                   `number` `null`                    |          `1`          |\n| [startPoint](#стартовая-точка-трека)        | Задает стартовое значение, относительно которого будет заполняться трек слайдера. При использовании слайдера диапазона либо при использовании инвертированного слайдера, это свойство игнорируется. |                       `number`                       |                       |\n| [inverted](#инвертированный-трек)           | Инвертированное отображение трека (от текущего значения до `max`).                                                                                                                                  |                      `boolean`                       |                       |\n\n| tabIndex | Атрибут `tabIndex` для контрола. | `number` `[number, number]` | |\n| [tooltipDisplay](#тултип) | Управляет поведением отображения тултипа. | `off` `on` `auto` | `off` |\n| [tooltipFormat](#тултип) | Определяет форматирование отображаемого значения тултипа. Если значение не задано, используется `marksFormat`. | `(value: number) => string` | |\n| [validationState](#error-ошибка) | Состояние валидации. | `\"invalid\"` | |\n| [value](#варианты-слайдера) | Значение контрола. | `number` `[number, number]` | |\n","_nextI18Next":{"initialI18nStore":{"ru":{"common":{"pageNotFound":"Страница не найдена","pageNotFoundDescription":"Страница, которую вы ищете, не существует или была перемещена.","backToHome":"Вернуться на главную","actions_open":"Открыть","actions_copyToClipboard":"Копировать в буфер обмена","actions_share":"Поделиться","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Библиотеки","menu_components":"Компоненты","menu_design":"Дизайн","menu_editor":"Редактор","menu_icons":"Иконки","menu_themer":"Темизатор","roadmap_inProgress":"В работе","navigation_previous":"Назад","navigation_next":"Далее","emptySearchPlaceholder":"Ничего не найдено","show_more":"Показать больше","show_less":"Показать меньше"},"component":{"actions_openInFigma":"Открыть в Figma","title":"Компоненты","searchPlaceholder":"Поиск по названию","color-input_validation-format-error":"Неверный формат","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Переключить тему","rtlOn":"Включить RTL","rtlOff":"Выключить RTL","rtlNotSupported":"RTL не поддерживается"},"libraries-info":{"description_uikit":"Базовые UI-компоненты и токены для построения сервисов с Gravity.","description_components":"Набор комплексных React-компонентов.","description_icons":"Сотни стильных иконок для ваших проектов.","description_illustrations":"Набор иллюстраций для отображения статусов данных.","description_dynamic-forms":"Библиотека для рендеринга лаконичных функциональных форм, описанных JSON-схемой.","description_page-constructor":"Набор стильно выглядящих функциональных блоков для быстрого создания промо-страниц.","description_blog-constructor":"Библиотека, основанная на Page Constructor, для создания блогов.","description_chartkit":"Библиотека визуализации данных, интегрированная с нашей дизайн‑системой.","description_dashkit":"Cетка компонентов для построения интерактивных дашбордов.","description_yagr":"Высокопроизводительная отрисовка canvas-графиков, основанная на uPlot.","description_nodekit":"Простой набор инструментов для приложений, скриптов и библиотек Node.js.","description_expresskit":"Легковесная надстройка для express.js, интегрируемая с NodeKit.","description_app-layout":"Генератор HTML-макета, используемый в одностраничных приложениях (SPA).","description_app-builder":"Основанный на Webpack сборщик статики, используемый в одностраничных приложениях (SPA).","description_navigation":"Компактная и расширяемая навигационная панель для сложных сервисов.","description_date-utils":"Библиотека для управления значениями даты и времени.","description_date-components":"Различные компоненты для работы с датами.","description_axios-wrapper":"Надстройка для axios, обеспечивающая автоматическую отмену конкурирующих запросов.","description_dialog-fields":"Надстройка для react-final-form, которая предоставляет полезные высокоуровневые компоненты для создания форм.","description_paranoid":"Визуализатор топологий кластера.","description_react-data-table":"React-компонент для рендеринга больших и сложных таблиц.","description_unipika":"Библиотека форматирования данных.","description_ui-logger":"Простой клиентский логгер.","description_oauth-clients":"Клиентская библиотека OAuth, обеспечивающая удобную абстракцию поверх аутентификации.","description_i18n":"Библиотека для интернационализации проектов Gravity UI.","description_eslint-config":"Пресет настройки ESLint для проектов Gravity UI.","description_tsconfig":"Пресет настройки компилятора TypeScript для проектов Gravity UI.","description_prettier-config":"Пресет настройки Prettier для проектов Gravity UI.","description_stylelint-config":"Пресет настройки Stylelint для проектов Gravity UI.","description_babel-preset":"Пресет настройки Babel для проектов Gravity UI.","description_browserslist-config":"Пресет настройки Browserslist для проектов Gravity UI.","description_markdown-editor":"Мощный инструмент для работы с Markdown, который сочетает в себе режимы WYSIWYG и разметки.","description_graph":"Библиотека для визуализации больших графов с динамическим уровнем детализации","description_data-source":"Библиотека-обертка над загрузкой данных.","description_webpack-i18n-assets-plugin":"Плагин для Webpack, который заменяет вызовы функций локализации (i18n) на целевые тексты.","description_table":"Библиотека для отображения таблиц."}},"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"ru","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}