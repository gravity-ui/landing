{"pageProps":{"libId":"uikit","componentId":"menu","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Menu\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Menu} from '@gravity-ui/uikit';\n```\n\nКомпонент `Menu` позволяет легко создавать представления для списков действий.\n\nОн включает в себя специальные компоненты для элементов (`Menu.Item`) и групп (`Menu.Group`), которые можно комбинировать для создания более сложных меню.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Menu>\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu>\n        <UIKit.Menu.Item>First</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Second</UIKit.Menu.Item>\n            <UIKit.Menu.Group label=\"Group\">\n                <UIKit.Menu.Item>One</UIKit.Menu.Item>\n                <UIKit.Menu.Item>Two</UIKit.Menu.Item>\n            </UIKit.Menu.Group>\n    </UIKit.Menu>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Menu>\n  <Menu.Item>First</Menu.Item>\n  <Menu.Item>Second</Menu.Item>\n  <Menu.Group label=\"Group\">\n    <Menu.Item>One</Menu.Item>\n    <Menu.Item>Two</Menu.Item>\n  </Menu.Group>\n</Menu>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### `Size` (размер)\n\nПозволяет задать размер меню. Значение по умолчанию — `m`.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Menu size=\"s\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n<Menu size=\"m\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n<Menu size=\"l\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n<Menu size=\"xl\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu size=\"s\">\n        <UIKit.Menu.Item>First</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Second</UIKit.Menu.Item>\n    </UIKit.Menu>\n    <UIKit.Menu size=\"m\">\n        <UIKit.Menu.Item>First</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Second</UIKit.Menu.Item>\n    </UIKit.Menu>\n    <UIKit.Menu size=\"l\">\n        <UIKit.Menu.Item>First</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Second</UIKit.Menu.Item>\n    </UIKit.Menu>\n    <UIKit.Menu size=\"xl\">\n        <UIKit.Menu.Item>First</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Second</UIKit.Menu.Item>\n    </UIKit.Menu>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Menu size=\"s\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n\n<Menu size=\"m\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n\n<Menu size=\"l\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n\n<Menu size=\"xl\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Свойства\n\n| Имя       | Описание                                                 |           Тип            | Значение по умолчанию |\n| :-------- | :------------------------------------------------------- | :----------------------: | :-------------------: |\n| size      | Размер меню.                                             | `\"s\"` `\"m\"` `\"l\"` `\"xl\"` |         `\"m\"`         |\n| children  | Дочерний элемент.                                        |    `React.ReactNode`     |                       |\n| className | HTML-атрибут `class`.                                    |         `string`         |                       |\n| style     | HTML-атрибут `style`.                                    |  `React.CSSProperties`   |                       |\n| qa        | Атрибут `data-qa` в HTML, используется для тестирования. |         `string`         |                       |\n\n## Menu.Item\n\nОтвечает за рендеринг элементов меню.\n\n### Иконка\n\nДля отображения иконки в начале или в конце элемента меню используйте свойства `iconStart` или `iconEnd`:\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Menu>\n    <Menu.Item iconStart={<Icon size={16} data={GearIcon} />}>Item with icon</Menu.Item>\n    <Menu.Item>Item without icon</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu>\n        <UIKit.Menu.Item iconStart={\n            <UIKit.Icon data={() => (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" class=\"g-icon\" fill=\"currentColor\" stroke=\"none\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M7.199 2H8.8a.2.2 0 0 1 .2.2c0 1.808 1.958 2.939 3.524 2.034a.199.199 0 0 1 .271.073l.802 1.388a.199.199 0 0 1-.073.272c-1.566.904-1.566 3.164 0 4.069a.199.199 0 0 1 .073.271l-.802 1.388a.199.199 0 0 1-.271.073C10.958 10.863 9 11.993 9 13.8a.2.2 0 0 1-.199.2H7.2a.199.199 0 0 1-.2-.2c0-1.808-1.958-2.938-3.524-2.034a.199.199 0 0 1-.272-.073l-.8-1.388a.199.199 0 0 1 .072-.271c1.566-.905 1.566-3.165 0-4.07a.199.199 0 0 1-.073-.271l.801-1.388a.199.199 0 0 1 .272-.073C5.042 5.138 7 4.007 7 2.2c0-.11.089-.199.199-.199ZM5.5 2.2c0-.94.76-1.7 1.699-1.7H8.8c.94 0 1.7.76 1.7 1.7a.85.85 0 0 0 1.274.735 1.699 1.699 0 0 1 2.32.622l.802 1.388c.469.813.19 1.851-.622 2.32a.85.85 0 0 0 0 1.472 1.7 1.7 0 0 1 .622 2.32l-.802 1.388a1.699 1.699 0 0 1-2.32.622.85.85 0 0 0-1.274.735c0 .939-.76 1.7-1.699 1.7H7.2a1.7 1.7 0 0 1-1.699-1.7.85.85 0 0 0-1.274-.735 1.698 1.698 0 0 1-2.32-.622l-.802-1.388a1.699 1.699 0 0 1 .622-2.32.85.85 0 0 0 0-1.471 1.699 1.699 0 0 1-.622-2.321l.801-1.388a1.699 1.699 0 0 1 2.32-.622A.85.85 0 0 0 5.5 2.2Zm4 5.8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0ZM11 8a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\" clip-rule=\"evenodd\"></path></svg></svg>\n            )} size={16} />\n        }>\n            Item with icon\n        </UIKit.Menu.Item>\n        <UIKit.Menu.Item>Item without icon</UIKit.Menu.Item>\n    </UIKit.Menu>\n</ExampleBlock>\n\n<ExampleBlock\n    code={`\n<Menu>\n    <Menu.Item iconEnd={<Icon size={16} data={TriangleExclamation} />}>Item with icon</Menu.Item>\n    <Menu.Item>Item without icon</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu>\n        <UIKit.Menu.Item iconEnd={\n            <UIKit.Icon data={() => (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M7.134 2.994 2.217 11.5a1 1 0 0 0 .866 1.5h9.834a1 1 0 0 0 .866-1.5L8.866 2.993a1 1 0 0 0-1.732 0Zm3.03-.75c-.962-1.665-3.366-1.665-4.328 0L.919 10.749c-.964 1.666.239 3.751 2.164 3.751h9.834c1.925 0 3.128-2.085 2.164-3.751l-4.917-8.505ZM8 5a.75.75 0 0 1 .75.75v2a.75.75 0 0 1-1.5 0v-2A.75.75 0 0 1 8 5Zm1 5.75a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\" clip-rule=\"evenodd\"/></svg>\n            )} size={16} />\n        }>\n            Item with icon\n        </UIKit.Menu.Item>\n        <UIKit.Menu.Item>Item without icon</UIKit.Menu.Item>\n    </UIKit.Menu>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Menu>\n  <Menu.Item iconStart={<Icon size={16} data={GearIcon} />}>Item with icon</Menu.Item>\n  <Menu.Item>Item without icon</Menu.Item>\n</Menu>\n```\n\n```tsx\n<Menu>\n  <Menu.Item iconEnd={<Icon size={16} data={TriangleExclamation} />}>Item with icon</Menu.Item>\n  <Menu.Item>Item without icon</Menu.Item>\n</Menu>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Состояния\n\nПозволяет включать или отключать (делать неактивными) отдельные элементы меню:\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Menu>\n    <Menu.Item disabled>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n    <Menu.Item selected>Third</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu>\n        <UIKit.Menu.Item disabled>First</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Second</UIKit.Menu.Item>\n        <UIKit.Menu.Item selected>Third</UIKit.Menu.Item>\n    </UIKit.Menu>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Menu>\n  <Menu.Item disabled>First</Menu.Item>\n  <Menu.Item>Second</Menu.Item>\n  <Menu.Item selected>Third</Menu.Item>\n</Menu>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### `Theme` (тема)\n\nПозволяет изменить тему элемента меню. Тема по умолчанию — `normal`.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Menu>\n    <Menu.Item theme=\"danger\">First</Menu.Item>\n    <Menu.Item theme=\"normal\">Second</Menu.Item>\n    <Menu.Item>Third</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu>\n        <UIKit.Menu.Item theme=\"danger\">First</UIKit.Menu.Item>\n        <UIKit.Menu.Item theme=\"normal\">Second</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Third</UIKit.Menu.Item>\n    </UIKit.Menu>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Menu>\n  <Menu.Item theme=\"danger\">First</Menu.Item>\n  <Menu.Item theme=\"normal\">Second</Menu.Item>\n  <Menu.Item>Third</Menu.Item>\n</Menu>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Свойства\n\n| Имя        | Описание                                                 |            Тип            | Значение по умолчанию |\n| :--------- | :------------------------------------------------------- | :-----------------------: | :-------------------: |\n| iconStart  | Иконка меню перед текстом элемента.                      |        `ReactNode`        |                       |\n| iconEnd    | Иконка меню после текста элемента.                       |        `ReactNode`        |                       |\n| selected   | Флаг выбранного элемента меню.                           |         `boolean`         |        `false`        |\n| disabled   | Флаг отключенного элемента меню.                         |         `boolean`         |        `false`        |\n| active     | Флаг активного элемента меню.                            |         `boolean`         |        `false`        |\n| href       | URL-адрес.                                               |         `string`          |                       |\n| title      | Атрибут заголовка.                                       |         `string`          |                       |\n| target     | Атрибут целевого ресурса.                                |         `string`          |                       |\n| rel        | Атрибут `rel`.                                           |         `string`          |                       |\n| onClick    | Обработчик события клика.                                | `React.MouseEventHandler` |                       |\n| theme      | Тема элемента меню.                                      |   `\"normal\"` `\"danger\"`   |      `\"normal\"`       |\n| children   | Дочерний элемент.                                        |     `React.ReactNode`     |                       |\n| className  | HTML-атрибут `class`.                                    |         `string`          |                       |\n| style      | HTML-атрибут `style`.                                    |   `React.CSSProperties`   |                       |\n| qa         | Атрибут `data-qa` в HTML, используется для тестирования. |         `string`          |                       |\n| extraProps | Дополнительные HTML-атрибуты.                            |         `Record`          |                       |\n\n## Menu.Group\n\nВ пределах одного меню элементы можно группировать по темам:\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Menu>\n    <Menu.Item>First</Menu.Item>\n    <Menu.Group label=\"Group One\">\n        <Menu.Item>One</Menu.Item>\n        <Menu.Item>Two</Menu.Item>\n    </Menu.Group>\n    <Menu.Group label=\"Group Two\">\n        <Menu.Item>One</Menu.Item>\n        <Menu.Item>Two</Menu.Item>\n    </Menu.Group>\n    <Menu.Item>Middle</Menu.Item>\n    <Menu.Group label=\"Group Three\">\n        <Menu.Item>One</Menu.Item>\n        <Menu.Item>Two</Menu.Item>\n    </Menu.Group>\n    <Menu.Item>Last</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu>\n        <UIKit.Menu.Item>First</UIKit.Menu.Item>\n        <UIKit.Menu.Group label=\"Group One\">\n            <UIKit.Menu.Item>One</UIKit.Menu.Item>\n            <UIKit.Menu.Item>Two</UIKit.Menu.Item>\n        </UIKit.Menu.Group>\n        <UIKit.Menu.Group label=\"Group Two\">\n            <UIKit.Menu.Item>One</UIKit.Menu.Item>\n            <UIKit.Menu.Item>Two</UIKit.Menu.Item>\n        </UIKit.Menu.Group>\n        <UIKit.Menu.Item>Middle</UIKit.Menu.Item>\n        <UIKit.Menu.Group label=\"Group Three\">\n            <UIKit.Menu.Item>One</UIKit.Menu.Item>\n            <UIKit.Menu.Item>Two</UIKit.Menu.Item>\n        </UIKit.Menu.Group>\n        <UIKit.Menu.Item>Last</UIKit.Menu.Item>\n    </UIKit.Menu>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Menu>\n  <Menu.Item>First</Menu.Item>\n  <Menu.Group label=\"Group One\">\n    <Menu.Item>One</Menu.Item>\n    <Menu.Item>Two</Menu.Item>\n  </Menu.Group>\n  <Menu.Group label=\"Group Two\">\n    <Menu.Item>One</Menu.Item>\n    <Menu.Item>Two</Menu.Item>\n  </Menu.Group>\n  <Menu.Item>Middle</Menu.Item>\n  <Menu.Group label=\"Group Three\">\n    <Menu.Item>One</Menu.Item>\n    <Menu.Item>Two</Menu.Item>\n  </Menu.Group>\n  <Menu.Item>Last</Menu.Item>\n</Menu>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Свойства\n\n| Имя       | Описание                                                 |          Тип          | Значение по умолчанию |\n| :-------- | :------------------------------------------------------- | :-------------------: | :-------------------: |\n| label     | Лейбл группы меню.                                       |       `string`        |                       |\n| children  | Дочерний элемент.                                        |   `React.ReactNode`   |                       |\n| className | HTML-атрибут `class`.                                    |       `string`        |                       |\n| style     | HTML-атрибут `style`.                                    | `React.CSSProperties` |                       |\n| qa        | Атрибут `data-qa` в HTML, используется для тестирования. |       `string`        |                       |\n","_nextI18Next":{"initialI18nStore":{"ru":{"common":{"pageNotFound":"Страница не найдена","pageNotFoundDescription":"Страница, которую вы ищете, не существует или была перемещена.","backToHome":"Вернуться на главную","actions_open":"Открыть","actions_copyToClipboard":"Копировать в буфер обмена","actions_share":"Поделиться","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Библиотеки","menu_components":"Компоненты","menu_design":"Дизайн","menu_editor":"Редактор","menu_icons":"Иконки","menu_themer":"Темизатор","roadmap_inProgress":"В работе","navigation_previous":"Назад","navigation_next":"Далее","emptySearchPlaceholder":"Ничего не найдено","show_more":"Показать больше","show_less":"Показать меньше"},"component":{"actions_openInFigma":"Открыть в Figma","title":"Компоненты","searchPlaceholder":"Поиск по названию","color-input_validation-format-error":"Неверный формат","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Переключить тему","rtlOn":"Включить RTL","rtlOff":"Выключить RTL","rtlNotSupported":"RTL не поддерживается"},"libraries-info":{"description_uikit":"Базовые UI-компоненты и токены для построения сервисов с Gravity.","description_components":"Набор комплексных React-компонентов.","description_icons":"Сотни стильных иконок для ваших проектов.","description_illustrations":"Набор иллюстраций для отображения статусов данных.","description_dynamic-forms":"Библиотека для рендеринга лаконичных функциональных форм, описанных JSON-схемой.","description_page-constructor":"Набор стильно выглядящих функциональных блоков для быстрого создания промо-страниц.","description_blog-constructor":"Библиотека, основанная на Page Constructor, для создания блогов.","description_chartkit":"Библиотека визуализации данных, интегрированная с нашей дизайн‑системой.","description_dashkit":"Cетка компонентов для построения интерактивных дашбордов.","description_yagr":"Высокопроизводительная отрисовка canvas-графиков, основанная на uPlot.","description_nodekit":"Простой набор инструментов для приложений, скриптов и библиотек Node.js.","description_expresskit":"Легковесная надстройка для express.js, интегрируемая с NodeKit.","description_app-layout":"Генератор HTML-макета, используемый в одностраничных приложениях (SPA).","description_app-builder":"Основанный на Webpack сборщик статики, используемый в одностраничных приложениях (SPA).","description_navigation":"Компактная и расширяемая навигационная панель для сложных сервисов.","description_date-utils":"Библиотека для управления значениями даты и времени.","description_date-components":"Различные компоненты для работы с датами.","description_axios-wrapper":"Надстройка для axios, обеспечивающая автоматическую отмену конкурирующих запросов.","description_dialog-fields":"Надстройка для react-final-form, которая предоставляет полезные высокоуровневые компоненты для создания форм.","description_paranoid":"Визуализатор топологий кластера.","description_react-data-table":"React-компонент для рендеринга больших и сложных таблиц.","description_unipika":"Библиотека форматирования данных.","description_ui-logger":"Простой клиентский логгер.","description_oauth-clients":"Клиентская библиотека OAuth, обеспечивающая удобную абстракцию поверх аутентификации.","description_i18n":"Библиотека для интернационализации проектов Gravity UI.","description_eslint-config":"Пресет настройки ESLint для проектов Gravity UI.","description_tsconfig":"Пресет настройки компилятора TypeScript для проектов Gravity UI.","description_prettier-config":"Пресет настройки Prettier для проектов Gravity UI.","description_stylelint-config":"Пресет настройки Stylelint для проектов Gravity UI.","description_babel-preset":"Пресет настройки Babel для проектов Gravity UI.","description_browserslist-config":"Пресет настройки Browserslist для проектов Gravity UI.","description_markdown-editor":"Мощный инструмент для работы с Markdown, который сочетает в себе режимы WYSIWYG и разметки.","description_graph":"Библиотека для визуализации больших графов с динамическим уровнем детализации","description_data-source":"Библиотека-обертка над загрузкой данных.","description_webpack-i18n-assets-plugin":"Плагин для Webpack, который заменяет вызовы функций локализации (i18n) на целевые тексты.","description_table":"Библиотека для отображения таблиц."}},"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"ru","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}