{"pageProps":{"libId":"navigation","componentId":"aside-header","readmeContent":"<!--GITHUB_BLOCK-->\n\n# AsideHeader\n\n<!--/GITHUB_BLOCK-->\n\nКомпонент `AsideHeader` позволяет создать гибкий и настраиваемый интерфейс навигации в приложении.\nПользователи могут легко адаптировать внешний вид боковой панели под цвета своего бренда, а также добавлять уникальные ссылки и иконки, отражающие функциональность приложения.\n\nДанный компонент предлагает надежное решение для создания интуитивно понятных и визуально привлекательных систем навигации, улучшая при этом пользовательский опыт и обеспечивая гибкость для адаптации к различным сценариям.\n\n```ts\nimport {AsideHeader} from '@gravity-ui/navigation';\n```\n\n<!--GITHUB_BLOCK-->\n\n## Внешний вид\n\n<!--/GITHUB_BLOCK-->\n\n### Состояние\n\nКомпонент имеет два состояния: свернутое и развернутое.\nУправлять состоянием можно через свойства `compact` и `onChangeCompact`, а видимостью кнопки — через `hideCollapseButton`.\n\n### Оформление верхнего блока\n\n`AsideHeader` позволяет выделить верхний блок с элементами логотипа и подзаголовка с помощью свойства `headerDecoration`.\n\n### Пользовательский фон\n\nКомпонент поддерживает различные варианты оформления, такие как добавление фонового изображения или разделение блоков по цвету. Для этого используются свойства `customBackground` и `customBackgroundClassName`.\n\n## Блоки\n\nИнтерфейс навигации состоит из трех блоков: верхнего, среднего и нижнего. Эти блоки схожи, но могут различаться функциональностью в зависимости от частоты обращения к ним пользователей.\n**Примечание**: состоянием элементов управляет пользователь.\n\n### Верхний блок\n\nДанный блок, как правило, включает логотип и другие элементы, расположенные под ним, которые присутствуют на всех страницах сайта. Для быстрого перехода на главную страницу можно использовать кликабельный логотип. При необходимости под логотипом можно разместить другие элементы, такие как поисковая строка и каталог.\n\nЭлементы данного блока поддерживают тултипы, всплывающие окна и выдвижные боковые панели — для их применения необходимо задать соответствующие настройки.\n\n### Средний блок (`menuItems`)\n\nДанный блок является основным, а его содержимое может меняться в зависимости от текущей страницы. Один из примеров использования — навигация по многостраничным сайтам.\nПри нехватке вертикального пространства элементы автоматически сворачиваются в иконку с многоточием.\n\nЭлементы навигации могут находиться в двух состояниях: свернутом (`isCollapsed`), когда видна только иконка, и развернутом. Также можно настроить внешний вид всего элемента через обертку.\n\nС помощью настроек `AllPages` пользователи могут закреплять нужные элементы и скрывать ненужные, задавая им состояние `pinned` (закреплено) и `hidden` (скрыто). Закрепленные элементы всегда остаются видимыми.\n\nДля добавления компонента `All Pages`, отображающего панель редактирования списка видимых элементов, необходим обратный вызов `onMenuItemsChanged`.\n\n**Примечание**: пользователь управляет списком элементов меню, полученным из обратного вызова, и передает новое состояние элементов в `AsideHeader`.\n\n### Нижний блок\n\nНижний блок (футер) повышает удобство пользователей, обеспечивая легкий доступ к элементам и вспомогательным ресурсам. Он позволяет связаться со службой поддержки и включает дополнительную информацию, чтобы пользователю было проще ориентироваться.\n\nВ футере можно использовать как собственные компоненты, так и `FooterItem`.\n\n#### Выделение элемента\n\nВыделение элемента поверх модальных окон может быть полезным, если пользователь хочет отправить сообщение об ошибке через форму обратной связи, открываемую в модальном окне.\n\nВ компоненте `FooterItem` можно передать свойство `bringForward`, которое отображает иконку поверх модальных окон. Кроме того, в `AsideHeader` необходимо передать функцию, которая будет уведомлять об открытии модальных окон.\n\n## Рендеринг контента\n\nОбласть справа от `AsideHeader` отведена под основной контент страницы.\nПри разворачивании и сворачивании элемента навигации его размер (значение `size`) будет меняться. Это нужно учитывать, например, для корректировки макета компонентов.\nCSS-переменная `--gn-aside-header-size` содержит актуальный размер элемента навигации.\n\nНиже представлено описание альтернативного метода рендеринга контента.\n\n### Оптимизация рендеринга\n\nЕсли контент вашего приложения необходимо рендерить быстрее, чем это позволяют свойства `AsideHeader`, можно перейти на использование `PageLayout` с расширенными настройками.\n\n<!--GITHUB_BLOCK-->\n\n```diff\n--- Main.tsx\n+++ Main.tsx\n-import {AsideHeader} from './AsideHeader'\n+import {PageLayout, AsideFallback} from '@gravity-ui/navigation';\n+const Aside = React.lazy(() =>\n+    import('./Aside').then(({Aside}) => ({ default: Aside }))\n+);\n\n-    <AsideHeader renderContent={renderContent} {...restProps} />\n+    <PageLayout>\n+        <Suspense fallback={<AsideFallback />}>\n+           <Aside />\n+        </Suspense>\n+\n+        <PageLayout.Content>\n+            <ContentExample />\n+        </PageLayout.Content>\n+    </PageLayout>\n--- Aside.tsx\n+++ Aside.tsx\n-import {AsideHeader} from '@gravity-ui/navigation';\n+import {PageLayoutAside} from '@gravity-ui/navigation';\n\nexport const Aside: FC = () => {\n    return (\n-        <AsideHeader {...props}>\n+        <PageLayoutAside {...props}/>\n    );\n};\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Свойства\n\n| Имя                       | Описание                                                                                                         |                                     Тип                                     |   Значение по умолчанию   |\n| :------------------------ | :--------------------------------------------------------------------------------------------------------------- | :-------------------------------------------------------------------------: | :-----------------------: |\n| className                 | HTML-атрибут `class` для логотипа.                                                                               |                                  `string`                                   |                           |\n| collapseTitle             | Заголовок `CollapseButton` для сворачивания элемента навигации.                                                  |                                  `string`                                   | `\"Свернуть\"` `\"Collapse\"` |\n| compact                   | Визуальное состояние элемента навигации.                                                                         |                                  `boolean`                                  |          `false`          |\n| customBackground          | Фон `AsideHeader`.                                                                                               |                              `React.ReactNode`                              |                           |\n| customBackgroundClassName | Переопределяет стили контейнера фона по умолчанию.                                                               |                                  `string`                                   |                           |\n| expandTitle               | Заголовок `CollapseButton` для разворачивания элемента навигации.                                                |                                  `string`                                   | `\"Развернуть\"` `\"Expand\"` |\n| headerDecoration          | Цвет фона верхнего блока с элементами логотипа и подзаголовка.                                                   |                                  `boolean`                                  |          `false`          |\n| hideCollapseButton        | Скрывает `CollapseButton`. Для установки дефолтного состояния элемента навигации используйте свойство `compact`. |                                  `boolean`                                  |          `false`          |\n| logo                      | Контейнер логотипа, включающий иконку с заголовком и обрабатывающий клики.                                       |                     [`Logo`](./../Logo/Readme.md#logo)                      |                           |\n| menuItems                 | Элементы в среднем блоке навигации.                                                                              |                              `Array<MenuItem>`                              |           `[]`            |\n| menuMoreTitle             | Дополнительный заголовок для `menuItems`, если элементы не помещаются.                                           |                                  `string`                                   |     `\"Ещё\"` `\"More\"`      |\n| multipleTooltip           | Отображает несколько тултипов при наведении на элементы меню (`menuItems`) в свернутом состоянии.                |                                  `boolean`                                  |          `false`          |\n| onChangeCompact           | Обратный вызов, срабатывающий при изменении визуального состояния элемента навигации.                            |                        `(compact: boolean) => void;`                        |                           |\n| onClosePanel              | Обратный вызов, срабатывающий при закрытии панели. Панели можно добавлять через свойство `PanelItems`.           |                                `() => void;`                                |                           |\n| onMenuItemsChanged        | Обратный вызов, срабатывающий при изменении списка `menuItems` в `AllPagesPanel`.                                |                     `(items: Array<MenuItem>) => void`                      |                           |\n| onMenuMoreClick           | Обратный вызов, срабатывающий при нажатии кнопки **More** («Еще»), если часть элементов скрыта.                  |                                `() => void;`                                |                           |\n| onAllPagesClick           | Обратный вызов, срабатывающий при нажатии кнопки **All pages** («Все станицы»).                                  |                                `() => void;`                                |                           |\n| openModalSubscriber       | Функция для уведомления `AsideHeader` об изменении состояния видимости модальных окон.                           |                    `( (open: boolean) => void) => void`                     |                           |\n| panelItems                | Элементы компонента `Drawer`. Используется для отображения дополнительной информации поверх основного контента.  |        [`Array<DrawerItem>`](./../Drawer/README.md#draweritem-props)        |           `[]`            |\n| renderContent             | Функция рендеринга основного контента справа от `AsideHeader`.                                                   |                 `(data: {size: number}) => React.ReactNode`                 |                           |\n| renderFooter              | Функция рендеринга нижнего блока навигации.                                                                      |                 `(data: {size: number}) => React.ReactNode`                 |                           |\n| ref                       | Ссылка на якорь целевого всплывающего окна.                                                                      |           `React.ForwardedRef<HTMLDivElement, AsideHeaderProps>`            |                           |\n| subheaderItems            | Элементы, расположенные под логотипом в верхнем блоке навигации.                                                 | ` Array<{item: MenuItem; enableTooltip?: boolean; bringForward?: boolean}>` |           `[]`            |\n| topAlert                  | Контейнер над элементом навигации на основе компонента `Alert` из фреймворка UIKit.                              |                                 `TopAlert`                                  |                           |\n| qa                        | Значение, которое будет передано в атрибут `data-qa` контейнера `AsideHeader`.                                   |                                  `string`                                   |                           |\n\n### `MenuItem`\n\n| Имя                | Описание                                                                                                                        |                                                                   Тип                                                                   |    Значение по умолчанию    |\n| :----------------- | :------------------------------------------------------------------------------------------------------------------------------ | :-------------------------------------------------------------------------------------------------------------------------------------: | :-------------------------: |\n| afterMoreButton    | Элемент будет всегда отображаться в конце списка, даже если не помещается.                                                      |                                                                `boolean`                                                                |                             |\n| category           | Категория, к которой относится элемент меню. Используется для группировки в режиме отображения или редактирования всех страниц. |                                                                `string`                                                                 | `\"Остальное\"` `\"All other\"` |\n| current            | Текущий (выбранный) элемент.                                                                                                    |                                                                `boolean`                                                                |           `false`           |\n| hidden             | Видимость элемента в меню.                                                                                                      |                                                                `boolean`                                                                |           `false`           |\n| icon               | Иконка меню на основе компонента `Icon` из фреймворка UIKit.                                                                    |                   [`IconProps['data']`](https://github.com/gravity-ui/uikit/tree/main/src/components/Icon#properties)                   |                             |\n| iconSize           | Размер иконки меню.                                                                                                             |                                                            `number` `string`                                                            |            `18`             |\n| iconQa             | Значение, которое будет передано в атрибут `data-qa` контейнера `Icon`.                                                         |                                                                `string`                                                                 |                             |\n| id                 | Идентификатор элемента меню.                                                                                                    |                                                                `string`                                                                 |                             |\n| itemWrapper        | Обертка элемента меню.                                                                                                          | [`ItemWrapper`](https://github.com/gravity-ui/navigation/blob/b8367cf343fc20304bc3c8d9a337d9f7d803a9b3/src/components/types.ts#L32-L41) |                             |\n| link               | HTML-атрибут `href`.                                                                                                            |                                                                `string`                                                                 |                             |\n| onItemClick        | Обратный вызов, срабатывающий при клике по элементу.                                                                            |                   `(item: MenuItem, collapsed: boolean, event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void`                   |                             |\n| onItemClickCapture | Обратный вызов, срабатывающий при клике по элементу.                                                                            |                                                ` (event: React.SyntheticEvent) => void`                                                 |                             |\n| order              | Определяет порядок отображения в элементе навигации.                                                                            |                                                                `number`                                                                 |                             |\n| pinned             | Запрещает скрытие элемента меню в `AllPagesPanel`.                                                                              |                                                                `boolean`                                                                |           `false`           |\n| rightAdornment     | Настраивает правую часть элемента меню.                                                                                         |                                                            `React.ReactNode`                                                            |                             |\n| title              | Заголовок элемента меню.                                                                                                        |                                                            `React.ReactNode`                                                            |                             |\n| tooltipText        | Содержимое тултипа.                                                                                                             |                                                            `React.ReactNode`                                                            |                             |\n| type               | Тип элемента меню, определяющий его внешний вид: `\"regular\"`, `\"action\"` или `\"divider\"`.                                       |                                                                `string`                                                                 |         `\"regular\"`         |\n| qa                 | Значение, которое будет передано в атрибут `data-qa`.                                                                           |                                                                `string`                                                                 |                             |\n\n### `TopAlert`\n\n`Top Alert` используется для отображения важной информации, которую необходимо донести до пользователя. Такой алерт обычно отображается на всех страницах в виде призыва к действию или предупреждения.\n\nСодержимое алерта можно настроить и при необходимости добавить функцию закрытия алерта. Высота `Top Alert` содержится в CSS-переменной `--gn-aside-top-panel-height`.\n\n| Имя             | Описание                                                                       |                                                Тип                                                 | Значение по умолчанию |\n| :-------------- | :----------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------: | :-------------------: |\n| actions         | Массив кнопок или пользовательских компонентов.                                |  [`AlertActions`](https://github.com/gravity-ui/uikit/tree/main/src/components/Alert#properties)   |                       |\n| centered        | Выравнивает все содержимое по центру.                                          |                                             `boolean`                                              |        `false`        |\n| align           | Управляет вертикальным выравниванием содержимого внутри компонента `Alert`.    |      [`AlertAlign`](https://github.com/gravity-ui/uikit/tree/main/src/components/Alert#align)      |     `\"baseline\"`      |\n| closable        | Показывает кнопку закрытия и обеспечивает передачу свойства `onCloseTopAlert`. |                                             `boolean`                                              |        `false`        |\n| dense           | Добавляет отступы сверху и снизу в контейнер `TopAlert`.                       |                                             `boolean`                                              |        `false`        |\n| icon            | Переопределяет иконку по умолчанию.                                            |    [`AlertIcon`](https://github.com/gravity-ui/uikit/tree/main/src/components/Alert#properties)    |                       |\n| message         | Содержимое сообщения алерта.                                                   | [`AlertMessage`](https://github.com/gravity-ui/uikit/tree/main/src/components/Alert#alert-message) |                       |\n| onCloseTopAlert | Обратный вызов, срабатывающий при нажатии на кнопку закрытия.                  |                                            `() => void`                                            |                       |\n| title           | Заголовок алерта.                                                              |   [`AlertTitle`](https://github.com/gravity-ui/uikit/tree/main/src/components/Alert#alert-title)   |                       |\n| theme           | Внешний вид алерта.                                                            |      [`AlertTheme`](https://github.com/gravity-ui/uikit/tree/main/src/components/Alert#theme)      |      `\"warning\"`      |\n| view            | Включает или отключает цвет фона окна алерта.                                  |       [`AlertView`](https://github.com/gravity-ui/uikit/tree/main/src/components/Alert#view)       |      `\"filled\"`       |\n\n## API CSS\n\n| Имя                                                       | Описание                                                                                          |     Значение по умолчанию      |\n| :-------------------------------------------------------- | :------------------------------------------------------------------------------------------------ | :----------------------------: |\n| `--gn-aside-header-decoration-collapsed-background-color` | Цвет оформления элемента навигации в свернутом состоянии.                                         | `--g-color-base-warning-light` |\n| `--gn-aside-header-decoration-expanded-background-color`  | Цвет оформления элемента навигации в развернутом состоянии.                                       | `--g-color-base-warning-light` |\n| `--gn-aside-header-background-color`                      | Цвет основного фона элемента навигации.                                                           |  `--g-color-base-background`   |\n| `--gn-aside-header-collapsed-background-color`            | Цвет фона элемента навигации в свернутом состоянии.                                               |  `--g-color-base-background`   |\n| `--gn-aside-header-expanded-background-color`             | Цвет фона элемента навигации в развернутом состоянии.                                             |  `--g-color-base-background`   |\n| `--gn-aside-header-divider-horizontal-color`              | Цвет всех горизонтальных разделителей.                                                            |    `--g-color-line-generic`    |\n| `--gn-aside-header-divider-vertical-color`                | Цвет вертикального разделителя между `AsideHeader` и содержимым.                                  |    `--g-color-line-generic`    |\n| `--gn-aside-top-panel-height`                             | Высота верхнего алерта `AsideHeader` (**только для чтения**).                                     |              0 px              |\n| `--gn-aside-header-padding-top`                           | Отступ сверху для элемента навигации. Используется при скрытии элементов логотипа и подзаголовка. |                                |\n| Элемент                                                   |                                                                                                   |                                |\n| `--gn-aside-header-general-item-icon-color`               | Цвет иконок для элементов подзаголовка и футера.                                                  |    `--g-color-text-primary`    |\n| `--gn-aside-header-item-icon-color`                       | Цвет иконок для элементов `CompositeBar`.                                                         |     `--g-color-text-misc`      |\n| `--gn-aside-header-item-text-color`                       | Цвет текста элементов.                                                                            |    `--g-color-text-primary`    |\n| `--gn-aside-header-item-background-color-hover`           | Цвет текста при ховере.                                                                           | `--g-color-base-simple-hover`  |\n| Выбранный элемент                                         |                                                                                                   |                                |\n| `--gn-aside-header-item-current-background-color`         | Цвет фона выбранного элемента.                                                                    |   `--g-color-base-selection`   |\n| `--gn-aside-header-item-current-icon-color`               | Цвет иконки выбранного элемента.                                                                  |                                |\n| `--gn-aside-header-item-current-text-color`               | Цвет текста выбранного элемента.                                                                  |    `--g-color-text-primary`    |\n| `--gn-aside-header-item-current-background-color-hover`   | Цвет иконки выбранного элемента при ховере.                                                       |                                |\n| `--gn-aside-header-item-collapsed-radius`                 | Радиус скругления углов элемента навигации в свернутом состоянии.                                 |              7 px              |\n| `--gn-aside-header-item-expanded-radius`                  | Радиус скругления углов элемента навигации в развернутом состоянии.                               |                                |\n| Наложение элементов (CSS-свойство `z-index`)              |                                                                                                   |                                |\n| `--gn-aside-header-z-index`                               | `z-index` для `AsideHeader`.                                                                      |              100               |\n| `--gn-aside-header-panel-z-index`                         | `z-index` для выдвижной панели `AsideHeader` (компонент `Drawer`).                                |               98               |\n| `--gn-aside-header-pane-top-z-index`                      | `z-index` для верхней панели.                                                                     |               98               |\n| `--gn-aside-header-content-z-index`                       | `z-index` для содержимого (область справа).                                                       |               95               |\n","_nextI18Next":{"initialI18nStore":{"ru":{"common":{"pageNotFound":"Страница не найдена","pageNotFoundDescription":"Страница, которую вы ищете, не существует или была перемещена.","backToHome":"Вернуться на главную","actions_open":"Открыть","actions_copyToClipboard":"Копировать в буфер обмена","actions_share":"Поделиться","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Библиотеки","menu_components":"Компоненты","menu_design":"Дизайн","menu_editor":"Редактор","menu_icons":"Иконки","menu_themer":"Темизатор","roadmap_inProgress":"В работе","navigation_previous":"Назад","navigation_next":"Далее","emptySearchPlaceholder":"Ничего не найдено","show_more":"Показать больше","show_less":"Показать меньше"},"component":{"actions_openInFigma":"Открыть в Figma","title":"Компоненты","searchPlaceholder":"Поиск по названию","color-input_validation-format-error":"Неверный формат","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Переключить тему","rtlOn":"Включить RTL","rtlOff":"Выключить RTL","rtlNotSupported":"RTL не поддерживается"},"libraries-info":{"description_uikit":"Базовые UI-компоненты и токены для построения сервисов с Gravity.","description_components":"Набор комплексных React-компонентов.","description_icons":"Сотни стильных иконок для ваших проектов.","description_illustrations":"Набор иллюстраций для отображения статусов данных.","description_dynamic-forms":"Библиотека для рендеринга лаконичных функциональных форм, описанных JSON-схемой.","description_page-constructor":"Набор стильно выглядящих функциональных блоков для быстрого создания промо-страниц.","description_blog-constructor":"Библиотека, основанная на Page Constructor, для создания блогов.","description_chartkit":"Библиотека визуализации данных, интегрированная с нашей дизайн‑системой.","description_dashkit":"Cетка компонентов для построения интерактивных дашбордов.","description_yagr":"Высокопроизводительная отрисовка canvas-графиков, основанная на uPlot.","description_nodekit":"Простой набор инструментов для приложений, скриптов и библиотек Node.js.","description_expresskit":"Легковесная надстройка для express.js, интегрируемая с NodeKit.","description_app-layout":"Генератор HTML-макета, используемый в одностраничных приложениях (SPA).","description_app-builder":"Основанный на Webpack сборщик статики, используемый в одностраничных приложениях (SPA).","description_navigation":"Компактная и расширяемая навигационная панель для сложных сервисов.","description_date-utils":"Библиотека для управления значениями даты и времени.","description_date-components":"Различные компоненты для работы с датами.","description_axios-wrapper":"Надстройка для axios, обеспечивающая автоматическую отмену конкурирующих запросов.","description_dialog-fields":"Надстройка для react-final-form, которая предоставляет полезные высокоуровневые компоненты для создания форм.","description_paranoid":"Визуализатор топологий кластера.","description_react-data-table":"React-компонент для рендеринга больших и сложных таблиц.","description_unipika":"Библиотека форматирования данных.","description_ui-logger":"Простой клиентский логгер.","description_oauth-clients":"Клиентская библиотека OAuth, обеспечивающая удобную абстракцию поверх аутентификации.","description_i18n":"Библиотека для интернационализации проектов Gravity UI.","description_eslint-config":"Пресет настройки ESLint для проектов Gravity UI.","description_tsconfig":"Пресет настройки компилятора TypeScript для проектов Gravity UI.","description_prettier-config":"Пресет настройки Prettier для проектов Gravity UI.","description_stylelint-config":"Пресет настройки Stylelint для проектов Gravity UI.","description_babel-preset":"Пресет настройки Babel для проектов Gravity UI.","description_browserslist-config":"Пресет настройки Browserslist для проектов Gravity UI.","description_markdown-editor":"Мощный инструмент для работы с Markdown, который сочетает в себе режимы WYSIWYG и разметки.","description_graph":"Библиотека для визуализации больших графов с динамическим уровнем детализации","description_data-source":"Библиотека-обертка над загрузкой данных.","description_webpack-i18n-assets-plugin":"Плагин для Webpack, который заменяет вызовы функций локализации (i18n) на целевые тексты.","description_table":"Библиотека для отображения таблиц."}},"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"ru","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}