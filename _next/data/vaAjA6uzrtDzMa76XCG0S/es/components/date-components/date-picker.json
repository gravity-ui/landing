{"pageProps":{"libId":"date-components","componentId":"date-picker","readmeContent":"<!--GITHUB_BLOCK-->\n\n# DatePicker\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {DatePicker} from '@gravity-ui/date-components';\n```\n\n`DatePicker` es un componente sofisticado, ligero y totalmente personalizable diseñado para proporcionar una funcionalidad intuitiva de selección de fechas en sus aplicaciones React. Creado teniendo en cuenta la experiencia del usuario y la facilidad de integración, se adapta perfectamente a los formularios, modales o cualquier elemento de la interfaz de usuario que requiera la entrada de fecha. Se puede controlar si se establece la `value` propiedad. O puede estar descontrolado si no establece ningún valor, pero en este caso puede administrar el estado inicial con una propiedad `defaultValue` opcional. El componente no está controlado de forma predeterminada.\n\n### Adición útil\n\nPara establecer las fechas en el formato correcto, es posible que deba incluir ayudantes adicionales de la biblioteca de [Date Utils](https://gravity-ui.com/libraries/date-utils).\n\n```tsx\nimport {dateTimeParse, dateTime} from '@gravity-ui/date-utils';\n```\n\n## Apariencia\n\nLa apariencia de `DatePicker` está controlada por `size` las `pin` propiedades `view` y.\n\n### Tamaño\n\nPara controlar el tamaño del `DatePicker` uso de la `size` propiedad. El tamaño predeterminado es `m`.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<DatePicker size=\"s\" />\n<DatePicker size=\"m\" />\n<DatePicker size=\"l\" />\n<DatePicker size=\"xl\" />\n`}\n>\n    <DateComponents.DatePicker size=\"s\" />\n    <DateComponents.DatePicker size=\"m\" />\n    <DateComponents.DatePicker size=\"l\" />\n    <DateComponents.DatePicker size=\"xl\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<DatePicker size=\"s\" />\n<DatePicker size=\"m\" />\n<DatePicker size=\"l\" />\n<DatePicker size=\"xl\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Ver\n\n`normal`- la vista principal de `DatePicker` (utilizada de forma predeterminada).\n\n<!--LANDING_BLOCK\n<ExampleBlock code={`<DatePicker />`}>\n    <DateComponents.DatePicker />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n`clear`- vista `DatePicker` sin bordes visibles (se puede usar con un envoltorio personalizado)\n\n<!--LANDING_BLOCK\n<ExampleBlock code={`<DatePicker view=\"clear\" />`}>\n    <DateComponents.DatePicker view=\"clear\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<DatePicker view=\"normal\" />\n<DatePicker view=\"clear\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Alfiler\n\nLa `pin` propiedad permite controlar la forma de los bordes derecho e izquierdo y, por lo general, se usa para combinar varios controles en una sola unidad.\nEl valor de la `pin` propiedad consiste en los nombres de los estilos izquierdo y de borde divididos por un guión, `\"round-brick\"` p. ej.\nLos estilos de arista son: `round` (predeterminado) `brick` y `clear`. `circle`\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<DatePicker pin=\"round-brick\" />\n<DatePicker pin=\"brick-brick\" />\n<DatePicker pin=\"brick-round\" />\n`}\n>\n    <DateComponents.DatePicker pin=\"round-brick\" />\n    <DateComponents.DatePicker pin=\"brick-brick\" />\n    <DateComponents.DatePicker pin=\"brick-round\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<DatePicker pin=\"round-brick\" />\n<DatePicker pin=\"brick-brick\" />\n<DatePicker pin=\"brick-round\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Valor\n\n### Valor mínimo y máximo\n\nLa `minValue` propiedad permite especificar la fecha y la hora más tempranas que puede introducir el usuario. Por el contrario, la `maxValue` propiedad especifica la fecha y la hora más recientes que se pueden introducir. Si ingresas el valor fuera de estos límites, el componente cambia su vista, como en el caso de un estado de validación no válido.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<DatePicker minValue={dateTimeParse('01.01.2024')} placeholder={\"minValue: '01.01.2024'\"}/>\n<DatePicker maxValue={dateTimeParse('01.01.2025')} placeholder={\"maxValue: '01.01.2025'\"}/>\n`}\n>\n    <DateComponentsExamples.DatePickerExample minValue={'01.01.2024'} placeholder={\"minValue: '01.01.2024'\"} />\n    <DateComponentsExamples.DatePickerExample maxValue={'01.01.2025'} placeholder={\"maxValue: '01.01.2025'\"} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n\n<DatePicker minValue={dateTimeParse('01.01.2024')} />\n<DatePicker maxValue={dateTimeParse('01.01.2025')} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Estados\n\n### Discapacitado\n\nEl estado en el `DatePicker` que no desea que el usuario pueda interactuar con el componente.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<DatePicker disabled={true} defaultValue={dateTime()} />\n`}\n>\n    <DateComponentsExamples.DatePickerExample disabled={true} defaultValue={new Date()} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<DatePicker disabled defaultValue={dateTime()} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Solo lectura\n\n`readOnly` es un atributo booleano que, cuando se establece en verdadero, hace que el `DatePicker` componente sea inmutable para el usuario. Esto significa que, si bien la entrada mostrará su valor actual, los usuarios no podrán cambiarla.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<DatePicker readOnly defaultValue={dateTimeParse(new Date())} />\n`}\n>\n    <DateComponentsExamples.DatePickerExample readOnly defaultValue={new Date()} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<DatePicker readOnly defaultValue={dateTime()} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Error\n\nEl estado `DatePicker` en el que desea indicar una entrada de usuario incorrecta. Para cambiar el `DatePicker` aspecto, utilice la `validationState` propiedad con el `\"invalid\"` valor. Se puede agregar un texto de mensaje opcional a través de la `errorMessage` propiedad. El texto del mensaje se mostrará en el componente.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<DatePicker errorMessage=\"Error message\" validationState=\"invalid\" />\n<DatePicker validationState=\"invalid\" />\n`}\n>\n    <DateComponents.DatePicker errorMessage=\"Error message\" validationState=\"invalid\" />\n    <DateComponents.DatePicker validationState=\"invalid\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<DatePicker errorMessage=\"Error message\" validationState=\"invalid\" />\n<DatePicker validationState=\"invalid\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Contenido adicional\n\n### Marcador de posición\n\nEste accesorio le permite proporcionar una breve sugerencia que describa el valor esperado del campo de entrada. Esta sugerencia se muestra en el campo de entrada antes de que el usuario introduzca un valor y desaparece al introducir el texto.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<DatePicker placeholder=\"Placeholder\" />\n`}\n>\n    <DateComponents.DatePicker placeholder='Placeholder' />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<DatePicker placeholder=\"Placeholder\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Etiqueta\n\nLe permite colocar la etiqueta en la parte izquierda del campo. La etiqueta no puede ocupar más de la mitad del ancho de todo el espacio de `DatePicker`.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<DatePicker label=\"Label\" />\n<DatePicker label=\"Very long label with huge amount of symbols\" />\n`}\n>\n    <DateComponents.DatePicker label=\"Label\" />\n    <DateComponents.DatePicker label=\"Very long label with huge amount of symbols\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<DatePicker label=\"Label\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Botón Borrar\n\n`hasClear` es un accesorio booleano que brinda a los usuarios la posibilidad de borrar rápidamente el contenido del campo de entrada.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`<DatePicker hasClear />`}\n>\n    <DateComponents.DatePicker\n        hasClear\n    />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<DatePicker hasClear />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Formato\n\nEl `format` accesorio es una cadena que define el formato de fecha y hora que el `DatePicker` componente aceptará y mostrará. Este accesorio determina cómo se presentan visualmente la fecha y la hora al usuario y cómo se espera que se formatee la entrada del usuario. [Formatos disponibles](https://day.js.org/docs/en/display/format)\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<DatePicker format='LL' />\n`}\n>\n    <DateComponents.DatePicker format='LL' />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<DatePicker format=\"LL\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Zona horaria\n\n`timeZone` es la propiedad para establecer la zona horaria del valor de la entrada. [Más información sobre las zonas horarias](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)\n\n## Personalización\n\nSi desea utilizar un componente de calendario personalizado en su interior, `DatePicker` puede pasarlo como si fuera `children` un calendario con accesorios similares.\n\n<!--LANDING_BLOCK\n[Learn more about calendar](https://gravity-ui.com/components/date-components/calendar)\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n[Más información sobre el calendario](https://github.com/gravity-ui/date-components/blob/main/src/components/Calendar/README.md)\n\n<!--/GITHUB_BLOCK-->\n\n## Propiedades\n\n| Nombre                               | Descripción                                                                                                                                       |                      Tipo                       |      Predeterminado       |\n| :----------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------ | :---------------------------------------------: | :-----------------------: |\n| aria, descrita por                   | Los controles `aria-describedby`. Identifica el elemento (o los elementos) que describe el objeto. atributo                                       |                    `string`                     |                           |\n| detalles de aria                     | Los controles `aria-details`. Identifica el elemento (o los elementos) que proporcionan una descripción detallada y ampliada del objeto. atributo |                    `string`                     |                           |\n| etiqueta aria                        | Los controles `aria-label`. Define un valor de cadena que etiqueta el elemento actual. attribute                                                  |                    `string`                     |                           |\n| aria - etiquetada por                | Los controles `aria-labelledby`. Identifica el elemento (o los elementos) que etiquetan el elemento actual. atributo                              |                    `string`                     |                           |\n| autoFocus                            | Los controles `autofocus`. Si el elemento debe centrarse en el atributo render.                                                                   |                    `boolean`                    |                           |\n| className                            | El nombre de la clase contenedora del control                                                                                                     |                    `string`                     |                           |\n| [defaultValue](#datepicker)          | Establece el valor inicial del componente no controlado.                                                                                          |                   `DateTime`                    |                           |\n| [discapacitado](#disabled)           | Indica que el usuario no puede interactuar con el control                                                                                         |                    `boolean`                    |          `false`          |\n| [errorMessage](#error)               | Texto de error                                                                                                                                    |                   `ReactNode`                   |                           |\n| [formato](#format)                   | Formato de la fecha cuando se representa en la entrada. [Formatos disponibles](https://day.js.org/docs/en/display/format)                         |                    `string`                     |                           |\n| [hasClear](#clear-button)            | Muestra el icono para borrar el valor del control                                                                                                 |                    `boolean`                    |          `false`          |\n| identificación                       | El `id` atributo del control                                                                                                                      |                    `string`                     |                           |\n| isDateUnavailable                    | Llamada que se solicita para cada fecha del calendario. Si se devuelve verdadero, significa que la fecha no está disponible.                      |         `((date: DateTime) => boolean)`         |                           |\n| [etiqueta](#label)                   | Texto de ayuda representado a la izquierda del nodo de entrada                                                                                    |                    `string`                     |                           |\n| [maxValue](#min-and-max-value)       | La fecha máxima permitida que puede seleccionar un usuario.                                                                                       |                   `DateTime`                    |                           |\n| [minValue](#min-and-max-value)       | La fecha mínima permitida que un usuario puede seleccionar.                                                                                       |                   `DateTime`                    |                           |\n| onBlur                               | Se dispara cuando el control pierde el foco. Proporciona un evento de enfoque como argumento de devolución de llamada                             | `(e: focusEvent<Element, Element> () => vacío)` |                           |\n| onFocus                              | Se dispara cuando el control se enfoca. Proporciona un evento de enfoque como argumento de devolución de llamada                                  | `(e: focusEvent<Element, Element> () => vacío)` |                           |\n| onKeyDown                            | Se dispara cuando se pulsa una tecla. Proporciona un evento de teclado como argumento de devolución de llamada                                    |     `(e: KeyboardEvent<Element>) = nulo)>`      |                           |\n| onKeyUp                              | Se dispara cuando se suelta una tecla. Proporciona un evento de teclado como argumento de devolución de llamada                                   |     `(e: KeyboardEvent<Element>) = nulo)>`      |                           |\n| onUpdate                             | Se activa cuando el usuario cambia el valor. Proporciona un nuevo valor como argumento de devolución de llamada                                   |      `(valor: Fecha/hora\\| nulo) => nulo`       |                           |\n| [alfiler](#pin)                      | Redondeo de esquinas                                                                                                                              |                 `TextInputPin`                  |      `'round-round'`      |\n| [marcador de posición](#placeholder) | Texto que aparece en el control cuando no tiene ningún valor establecido                                                                          |                    `string`                     |                           |\n| placeholderValue                     | Un marcador de fecha que controla los valores predeterminados de cada segmento cuando el usuario interactúa con ellos por primera vez.            |                   `DateTime`                    | `today's date at midnigh` |\n| [readOnly](#readonly)                | Si el valor del componente es inmutable.                                                                                                          |                    `boolean`                    |          `false`          |\n| [tamaño](#size)                      | El tamaño del control                                                                                                                             |                  `\"s\"` `\"xl\"`                   |           `\"m\"`           |\n| estilo                               | Establece el estilo en línea del elemento.                                                                                                        |                 `CSSProperties`                 |                           |\n| [timeZone](#time-zone)               | Establece la zona horaria. [Más información sobre las zonas horarias](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)          |                    `string`                     |                           |\n| [validationState](#error)            | Estado de validación                                                                                                                              |                   `\"invalid\"`                   |                           |\n| [valor](#datepicker)                 | El valor del control                                                                                                                              |                `DateTime` `null`                |                           |\n| [vista](#view)                       | La vista del control                                                                                                                              |              `\"normal\"` `\"clear\"`               |        `\"normal\"`         |\n","_nextI18Next":{"initialI18nStore":{"es":{"common":{"pageNotFound":"Página No Encontrada","pageNotFoundDescription":"La página que estás buscando no existe o ha sido movida.","backToHome":"Volver al Inicio","actions_open":"Abrir","actions_copyToClipboard":"Copiar al portapapeles","actions_share":"Compartir","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Parque infantil","menu_libraries":"Bibliotecas","menu_components":"Componentes","menu_design":"Diseño","menu_editor":"Redactor","menu_icons":"Iconos","menu_themer":"Temer","roadmap_inProgress":"En progreso","navigation_previous":"Anterior","navigation_next":"Próxima","emptySearchPlaceholder":"No se encontró nada","show_more":"Mostrar más","show_less":"Mostrar menos"},"component":{"actions_openInFigma":"Abrir en Figma","title":"Componentes","searchPlaceholder":"Buscar por nombre de componente","color-input_validation-format-error":"Formato incorrecto","maintainers_one":"Mantenedor:","maintainers_other":"Mantenedores:","maintainers":"Mantenedores:","theme":"Tema Switch","rtlOn":"Activa RTL","rtlOff":"Desactivar RTL","rtlNotSupported":"RTL no es compatible"},"libraries-info":{"description_uikit":"Componentes de interfaz de usuario básicos y tokens para crear servicios con Gravity.","description_components":"Un conjunto de componentes complejos de React.","description_icons":"Conjunto con cientos de diferentes iconos SVG modernos para tus proyectos.","description_illustrations":"Conjunto de ilustraciones para mostrar los estados de los datos.","description_dynamic-forms":"Biblioteca para renderizar formularios de reacción limpios y funcionales descritos por el esquema JSON","description_page-constructor":"Un conjunto de bloques elegantes y funcionales para crear rápidamente páginas promocionales y de destino.","description_blog-constructor":"Una biblioteca basada en la biblioteca del constructor de páginas para crear servicios similares a los de un blog.","description_chartkit":"Una suite de visualización de datos integrada con nuestro sistema de diseño.","description_dashkit":"Un componente de cuadrícula para crear paneles interactivos.","description_yagr":"Un renderizador de gráficos de lienzo de alto rendimiento, basado en uPlot.","description_nodekit":"Un kit de herramientas sencillo para tus aplicaciones, scripts y bibliotecas de Node.js.","description_expresskit":"Envoltorio ligero de express.js que se integra con NodeKit.","description_app-layout":"Generador de diseño HTML utilizado en nuestras aplicaciones de SPA.","description_app-builder":"Generador de activos estáticos basado en Webpack utilizado en nuestras aplicaciones SPA.","description_navigation":"Un panel de navegación compacto y ampliable para servicios complejos.","description_date-utils":"Ayudantes para administrar los valores de fecha y hora.","description_date-components":"Varios componentes de fecha.","description_axios-wrapper":"Envoltorio Axios que proporciona la cancelación automática de solicitudes simultáneas.","description_dialog-fields":"Un contenedor de formularios de reacción final que proporciona algunos componentes útiles de alto nivel para crear formularios.","description_paranoid":"Visualizador de topologías de clústeres.","description_react-data-table":"Un componente de reacción para renderizar tablas grandes y complejas.","description_unipika":"Biblioteca de formato de datos.","description_ui-logger":"Registrador sencillo del lado del cliente.","description_oauth-clients":"Biblioteca OAuth de cliente que proporciona una práctica abstracción además del flujo de autenticación.","description_i18n":"Ayudantes de internacionalización de proyectos de Gravity UI.","description_eslint-config":"Configuración preestablecida de ESLint para proyectos de interfaz de usuario de Gravity.","description_tsconfig":"Configuración preestablecida del compilador de TypeScript para proyectos de interfaz de usuario de Gravity.","description_prettier-config":"Configuración preestablecida más bonita para proyectos de interfaz de usuario de Gravity.","description_stylelint-config":"Configuración preestablecida de Stylelint para proyectos de interfaz de usuario de Gravity.","description_babel-preset":"Configuración predeterminada de Babel para proyectos de interfaz de usuario de Gravity.","description_browserslist-config":"Los navegadores muestran los ajustes preestablecidos de configuración utilizados en nuestros servicios.","description_markdown-editor":"Una potente herramienta para trabajar con Markdown, que combina los modos WYSIWYG y Markup.","description_graph":"Renderizador de gráficos de alto rendimiento con detalle dinámico compatible con la escala","description_data-source":"Un envoltorio sobre la obtención de datos.","description_webpack-i18n-assets-plugin":"Un complemento para Webpack que reemplaza las llamadas a las funciones de localización (i18n) por textos de destino.","description_table":"Biblioteca para visualizar datos en formato tabular."}},"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"es","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}