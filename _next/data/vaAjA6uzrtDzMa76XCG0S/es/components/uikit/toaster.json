{"pageProps":{"libId":"uikit","componentId":"toaster","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Tostadora\n\n<!--/GITHUB_BLOCK-->\n\nEste es un componente para las notificaciones ajustables, también conocido como brindis.\n\n## Uso de la tostadora\n\nPara mostrar los brindis en su solicitud, debe envolverla. `ToasterProvider`\n\n```jsx\nimport {Toaster, ToasterComponent, ToasterProvider} from '@gravity-ui/uikit';\n\nconst toaster = new Toaster();\n\nconst root = ReactDOMClient.createRoot(document.getElementById('root'));\nroot.render(\n  <ToasterProvider toaster={toaster}>\n    <App />\n    <ToasterComponent className=\"optional additional classes\" />\n  </ToasterProvider>,\n);\n```\n\n`toaster` este es el ejemplo de la clase, que sostiene el estado con todas tus tostadas y se usa bajo el capó en `useToaster` gancho y `withToaster` HOC.\n\nPero también puedes usarlo `toaster` directamente en diferentes partes de tu aplicación (fuera de React):\n\n```js\ntoaster.add({\n  title: 'Toaster is here',\n});\n```\n\nDebes usar la misma instancia de `Toaster` en React y fuera de ella para mostrar todas las tostadas en el mismo contenedor en la pantalla.\nPuede implementar esta lógica usted mismo o importar una instancia lista para usar desde `toaster-singleton` el módulo.\n\n```js\nimport {toaster} from '@gravity-ui/uikit/toaster-singleton';\n```\n\n## Uso `useToaster`\n\nPuedes mostrar los brindis con el `useToaster` gancho en los componentes de tu aplicación:\n\n```jsx\nimport {useToaster} from '@gravity-ui/uikit';\nimport {useEffect} from 'react';\n\nexport function FoobarComponent() {\n  const {add} = useToaster();\n\n  useEffect(() => {\n    add({\n      title: 'Toaster is here',\n    });\n  }, []);\n\n  return null;\n}\n```\n\nEl gancho devuelve los `removeAll` métodos `add` `update`, `remove`, y (consulte los detalles a continuación).\n\n## `Toaster` Utilización como HOC\n\nPara los componentes de la clase, puede usar el `withToaster` HOC, que inyectará la `toaster` propiedad en el componente.\n\n```jsx\nimport {Component} from 'react';\nimport {withToaster} from '@gravity-ui/uikit';\n\nclass FoobarComponent extends Component {\n  render() {\n    this.props.toaster.add({});\n  }\n}\n\nconst FoobarWithToaster = withToaster()(FoobarComponent);\n```\n\n## Argumentos del constructor\n\n| Parámetro | Tipo      | Predeterminado | Descripción                                                             |\n| :-------- | :-------- | :------------- | :---------------------------------------------------------------------- |\n| className | `string`  | `undefined`    | Nombre de clase personalizado para agregar al contenedor de componentes |\n| móvil     | `boolean` | `false`        | Configuración que administra las vistas móviles y de escritorio         |\n\n## Métodos\n\n| Nombre del método                    | Parámetros         | Descripción                                                                                                                                        |\n| :----------------------------------- | :----------------- | :------------------------------------------------------------------------------------------------------------------------------------------------- |\n| agregar (ToastOptions)               | `Object`           | Crea una nueva notificación                                                                                                                        |\n| eliminar (nombre)                    | `string`           | Elimina manualmente una notificación existente                                                                                                     |\n| Eliminar todo ()                     |                    | Elimina todas las notificaciones existentes                                                                                                        |\n| actualizar (nombre, OverrideOptions) | `string`, `Object` | Cambia el contenido de las notificaciones ya renderizado. En `overrideOptions`, los `actions` campos `title` `type` `content`, , y son opcionales. |\n| tiene (nombre)                       | `string`           | Comprueba si hay un brindis con un nombre determinado en la lista de tostadas mostradas                                                            |\n\n## Más información sobre `add`\n\nAcepta el `toastOptions` argumento con los detalles de la notificación en curso:\n\n| Parámetro  | Tipo                                    | Necesario | Predeterminado | Descripción                                                                                                                                                                                                                                                                          |\n| :--------- | :-------------------------------------- | :-------- | :------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| nombre     | `string`                                | sí        |                | Nombre de notificación único. Las notificaciones con nombres idénticos se agrupan en una                                                                                                                                                                                             |\n| título     | `string`                                |           |                | Título de la notificación                                                                                                                                                                                                                                                            |\n| className  | `string`                                |           |                | clase CSS                                                                                                                                                                                                                                                                            |\n| autoHiding | `number` o `false`                      |           | 5000           | Número de ms para retrasar la ocultación de la notificación. Se usa `false` para deshabilitar la ocultación de la tostada después del tiempo de espera                                                                                                                               |\n| contenido  | `node`                                  |           | `undefined`    | Contenido de las notificaciones. Puede ser [cualquier cosa que se pueda representar: números, cadenas, elementos o una matriz](https://reactjs.org/docs/typechecking-with-proptypes.html#proptypes)                                                                                  |\n| canción    | `string`                                |           | `\"normal\"`     | Tema de notificación. Los valores posibles son `\"normal\"` `\"info\"`, `\"success\"`, `\"warning\"` `danger`, y `\"utility\"`. Si `theme` se establece en cualquier otra opción `\"normal\"`, el icono se añadirá al título de la notificación. _De forma predeterminada, no hay ningún icono_. |\n| isClosable | `boolean`                               |           | `true`         | Configuración que gestiona la visibilidad del icono X, que permite al usuario cerrar la notificación                                                                                                                                                                                 |\n| acciones   | `ToastAction[]`                         |           | `undefined`    | Conjunto de [acciones](./types.ts#L9) que se muestran después `content`                                                                                                                                                                                                              |\n| renderIcon | `(toastProps: ToastProps) => ReactNode` |           | `undefined`    | Se usa para personalizar el icono de tostadas. El comportamiento basado en tipos se usa de forma predeterminada                                                                                                                                                                      |\n\nCada `action` es un objeto con los siguientes parámetros:\n\n| Parámetro        | Tipo                                      | Necesario | Predeterminado | Descripción                                                                        |\n| :--------------- | :---------------------------------------- | :-------- | :------------- | :--------------------------------------------------------------------------------- |\n| etiqueta         | `string`                                  | sí        |                | Descripción de la acción                                                           |\n| onClick          | `() => void`                              | sí        |                | Gestor de clics en acción                                                          |\n| vista            | [`ButtonView`](../Button/README.md#props) |           | `outlined`     | Apariencia de acción, igual que `view` para `<Button/>`                            |\n| removeAfterClick | `boolean`                                 |           | `true`         | Activa o desactiva el cierre de la notificación después de hacer clic en la acción |\n\n## API CSS\n\n| Nombre                     | Descripción          |\n| :------------------------- | :------------------- |\n| `--g-toaster-width`        | Ancho del contenedor |\n| `--g-toaster-item-padding` | Relleno del artículo |\n| `--g-toaster-item-gap`     | Brecha de artículos  |\n","_nextI18Next":{"initialI18nStore":{"es":{"common":{"pageNotFound":"Página No Encontrada","pageNotFoundDescription":"La página que estás buscando no existe o ha sido movida.","backToHome":"Volver al Inicio","actions_open":"Abrir","actions_copyToClipboard":"Copiar al portapapeles","actions_share":"Compartir","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Parque infantil","menu_libraries":"Bibliotecas","menu_components":"Componentes","menu_design":"Diseño","menu_editor":"Redactor","menu_icons":"Iconos","menu_themer":"Temer","roadmap_inProgress":"En progreso","navigation_previous":"Anterior","navigation_next":"Próxima","emptySearchPlaceholder":"No se encontró nada","show_more":"Mostrar más","show_less":"Mostrar menos"},"component":{"actions_openInFigma":"Abrir en Figma","title":"Componentes","searchPlaceholder":"Buscar por nombre de componente","color-input_validation-format-error":"Formato incorrecto","maintainers_one":"Mantenedor:","maintainers_other":"Mantenedores:","maintainers":"Mantenedores:","theme":"Tema Switch","rtlOn":"Activa RTL","rtlOff":"Desactivar RTL","rtlNotSupported":"RTL no es compatible"},"libraries-info":{"description_uikit":"Componentes de interfaz de usuario básicos y tokens para crear servicios con Gravity.","description_components":"Un conjunto de componentes complejos de React.","description_icons":"Conjunto con cientos de diferentes iconos SVG modernos para tus proyectos.","description_illustrations":"Conjunto de ilustraciones para mostrar los estados de los datos.","description_dynamic-forms":"Biblioteca para renderizar formularios de reacción limpios y funcionales descritos por el esquema JSON","description_page-constructor":"Un conjunto de bloques elegantes y funcionales para crear rápidamente páginas promocionales y de destino.","description_blog-constructor":"Una biblioteca basada en la biblioteca del constructor de páginas para crear servicios similares a los de un blog.","description_chartkit":"Una suite de visualización de datos integrada con nuestro sistema de diseño.","description_dashkit":"Un componente de cuadrícula para crear paneles interactivos.","description_yagr":"Un renderizador de gráficos de lienzo de alto rendimiento, basado en uPlot.","description_nodekit":"Un kit de herramientas sencillo para tus aplicaciones, scripts y bibliotecas de Node.js.","description_expresskit":"Envoltorio ligero de express.js que se integra con NodeKit.","description_app-layout":"Generador de diseño HTML utilizado en nuestras aplicaciones de SPA.","description_app-builder":"Generador de activos estáticos basado en Webpack utilizado en nuestras aplicaciones SPA.","description_navigation":"Un panel de navegación compacto y ampliable para servicios complejos.","description_date-utils":"Ayudantes para administrar los valores de fecha y hora.","description_date-components":"Varios componentes de fecha.","description_axios-wrapper":"Envoltorio Axios que proporciona la cancelación automática de solicitudes simultáneas.","description_dialog-fields":"Un contenedor de formularios de reacción final que proporciona algunos componentes útiles de alto nivel para crear formularios.","description_paranoid":"Visualizador de topologías de clústeres.","description_react-data-table":"Un componente de reacción para renderizar tablas grandes y complejas.","description_unipika":"Biblioteca de formato de datos.","description_ui-logger":"Registrador sencillo del lado del cliente.","description_oauth-clients":"Biblioteca OAuth de cliente que proporciona una práctica abstracción además del flujo de autenticación.","description_i18n":"Ayudantes de internacionalización de proyectos de Gravity UI.","description_eslint-config":"Configuración preestablecida de ESLint para proyectos de interfaz de usuario de Gravity.","description_tsconfig":"Configuración preestablecida del compilador de TypeScript para proyectos de interfaz de usuario de Gravity.","description_prettier-config":"Configuración preestablecida más bonita para proyectos de interfaz de usuario de Gravity.","description_stylelint-config":"Configuración preestablecida de Stylelint para proyectos de interfaz de usuario de Gravity.","description_babel-preset":"Configuración predeterminada de Babel para proyectos de interfaz de usuario de Gravity.","description_browserslist-config":"Los navegadores muestran los ajustes preestablecidos de configuración utilizados en nuestros servicios.","description_markdown-editor":"Una potente herramienta para trabajar con Markdown, que combina los modos WYSIWYG y Markup.","description_graph":"Renderizador de gráficos de alto rendimiento con detalle dinámico compatible con la escala","description_data-source":"Un envoltorio sobre la obtención de datos.","description_webpack-i18n-assets-plugin":"Un complemento para Webpack que reemplaza las llamadas a las funciones de localización (i18n) por textos de destino.","description_table":"Biblioteca para visualizar datos en formato tabular."}},"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"es","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}