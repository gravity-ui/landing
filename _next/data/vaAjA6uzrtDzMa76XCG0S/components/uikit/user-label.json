{"pageProps":{"libId":"uikit","componentId":"user-label","readmeContent":"# UserLabel\n\nThe `UserLabel` component can be used to display users or user-related information.\n\n## Type\n\nUsed to manage avatar appearance. Use `\"person\"` for a personalized entity and `\"email\"`, for an email address. If you do not need any avatar, use `\"empty\"`.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<UserLabel type=\"person\" text=\"Charles Darwin\" />\n<UserLabel type=\"email\" text=\"email@example.com\" />\n<UserLabel type=\"empty\" text=\"Alan Turing\" />\n`}\n>\n    <UIKit.UserLabel type=\"person\" text=\"Charles Darwin\" />\n    <UIKit.UserLabel type=\"email\" text=\"email@example.com\" />\n    <UIKit.UserLabel type=\"empty\" text=\"Alan Turing\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<UserLabel type=\"person\" text=\"Charles Darwin (person)\" />\n<UserLabel type=\"email\" text=\"email@example.com (email)\" />\n<UserLabel type=\"empty\" text=\"Alan Turing (empty)\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Avatar\n\nThis component can be used with a custom avatar. It only works with `type: 'person'`. You can provide an image, a property of the [Avatar](../Avatar/README.md) component, or a custom React node.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\nimport {GraduationCap} from '@gravity-ui/icons';\n\n<UserLabel type=\"person\" avatar=\"<url>\" text=\"Charles Darwin\" />\n<UserLabel type=\"person\" avatar={{icon: GraduationCap}} text=\"Charles Darwin\" />\n`}\n>\n    <UIKit.UserLabel type=\"person\" avatar=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/Charles_Darwin_by_Julia_Margaret_Cameron%2C_c._1868.jpg/193px-Charles_Darwin_by_Julia_Margaret_Cameron%2C_c._1868.jpg\" text=\"Charles Darwin\" />\n    <UIKit.UserLabel type=\"person\" avatar={{icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M6.836 3.202 1.74 5.386a.396.396 0 0 0 0 .728l5.096 2.184a2.5 2.5 0 0 0 .985.202h.358a2.5 2.5 0 0 0 .985-.202l5.096-2.184a.396.396 0 0 0 0-.728L9.164 3.202A2.5 2.5 0 0 0 8.179 3h-.358a2.5 2.5 0 0 0-.985.202ZM1.5 7.642l1.5.644v3.228a2 2 0 0 0 1.106 1.789l.806.403a7 7 0 0 0 6.193.033l.909-.442a2 2 0 0 0 1.125-1.798V8.226l1.712-.734a1.896 1.896 0 0 0 0-3.484L9.755 1.823A4 4 0 0 0 8.179 1.5h-.358a4 4 0 0 0-1.576.323L1.15 4.008A1.896 1.896 0 0 0 0 5.75v4.5a.75.75 0 0 0 1.5 0V7.643Zm3 3.872V8.929l1.745.748A4 4 0 0 0 7.821 10h.358a4 4 0 0 0 1.576-.323l1.884-.808v2.63a.5.5 0 0 1-.282.45l-.909.442a5.5 5.5 0 0 1-4.865-.027l-.807-.403a.5.5 0 0 1-.276-.447Z\" clip-rule=\"evenodd\"/></svg>'}} text=\"Charles Darwin\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nimport {GraduationCap} from '@gravity-ui/icons';\n\n<UserLabel type=\"person\" avatar=\"<url>\" text=\"Charles Darwin\" />\n<UserLabel type=\"person\" avatar={{icon: GraduationCap}} text=\"Charles Darwin\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Interactivity\n\nThis component is also interactive: it can be clickable or closable.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<UserLabel text=\"Charles Darwin\" onClick={() => alert('onClick triggered')} />\n<UserLabel text=\"Charles Darwin\" onCloseClick={() => alert('onCloseClick triggered')} />\n`}\n>\n    <UIKit.UserLabel text=\"Charles Darwin\" onClick={() => alert('onClick triggered')} />\n    <UIKit.UserLabel text=\"Charles Darwin\" onCloseClick={() => alert('onCloseClick triggered')} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<UserLabel text=\"Charles Darwin\" onClick={() => alert('onClick triggered')} />\n<UserLabel text=\"Charles Darwin\" onCloseClick={() => alert('onCloseClick triggered')} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name         | Description                                     |                                    Type                                     |   Default    |\n| :----------- | :---------------------------------------------- | :-------------------------------------------------------------------------: | :----------: |\n| type         | Avatar appearance                               |                       `'person'` `'email'` `'empty'`                        |  `'person'`  |\n| view         | `UserLabel` view                                |                           `'outlined'` `'clear'`                            | `'outlined'` |\n| size         | Avatar size                                     |               `'3xs'` `'2xs'` `'xs'` `'s'` `'m'` `'l'` `'xl'`               |    `'s'`     |\n| avatar       | User avatar                                     | [AvatarProps](../Avatar/README.md#properties) `string` `React.ReactElement` |              |\n| text         | Visible text                                    |                              `React.ReactNode`                              |              |\n| description  | User description                                |                              `React.ReactNode`                              |              |\n| onClick      | `click` event handler for the component         |                                 `Function`                                  |              |\n| onCloseClick | `click` event handler for the cross-icon button |                                 `Function`                                  |              |\n| className    | Custom CSS class for the root element           |                                  `string`                                   |              |\n| style        | HTML style attribute                            |                            `React.CSSProperties`                            |              |\n| qa           | `data-qa` HTML attribute, used for testing      |                                  `string`                                   |              |\n\n## CSS API\n\n| Name                                     | Description                                             |\n| :--------------------------------------- | :------------------------------------------------------ |\n| `--g-user-label-size`                    | Size for avatar (width and height) and height for label |\n| `--g-user-label-border-radius`           | Label border radius                                     |\n| `--g-user-label-padding`                 | Label horizontal padding                                |\n| `--g-user-label-gap`                     | Gap between elements (avatar, text, close icon)         |\n| `--g-user-label-text-font-weight`        | Text font weight                                        |\n| `--g-user-label-text-font-size`          | Text font size                                          |\n| `--g-user-label-text-line-height`        | Text line height                                        |\n| `--g-user-label-description-font-weight` | Description font weight                                 |\n| `--g-user-label-description-font-size`   | Description font size                                   |\n| `--g-user-label-description-line-height` | Description line height                                 |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"en","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}