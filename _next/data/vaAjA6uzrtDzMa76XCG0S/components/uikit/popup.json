{"pageProps":{"libId":"uikit","componentId":"popup","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Popup\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Popup} from '@gravity-ui/uikit';\n```\n\nYou can use a `Popup` to display floating content above the page. Technically, it is a wrapper around [Floating UI](https://floating-ui.com) with some default values. To manage `Popup` visibility, use the `open` property.\nThe `Popup` child components are rendered inside the [`Portal`](../Portal) component. To disable this behavior, use the `disablePortal` property.\n\n## Anchor\n\nTo specify the anchor of a floating element, you can use the `anchorElement` property.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\nconst [buttonElement, setButtonElement] = React.useState(null);\nconst [open, setOpen] = React.useState(false);\n\n<Button ref={setButtonElement} onClick={() => setOpen((prevOpen) => !prevOpen)}>\n  Toggle Popup\n</Button>\n<Popup anchorElement={buttonElement} open={open} placement=\"bottom\">\n  Content\n</Popup>\n`}>\n    <UIKitExamples.PopupAnchorExample/>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nconst [buttonElement, setButtonElement] = React.useState(null);\nconst [open, setOpen] = React.useState(false);\n\n<Button ref={setButtonElement} onClick={() => setOpen((prevOpen) => !prevOpen)}>\n  Toggle Popup\n</Button>\n<Popup anchorElement={buttonElement} open={open} placement=\"bottom\">\n  Content\n</Popup>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Placement\n\nUse the `placement` property to manage the `Popup` position around the anchor element.\nBy default, `Popup` uses [flip middleware](https://floating-ui.com/docs/flip) to prevent overflow.\nIf the property is set to an array, the first element will be used as the default placement value, the rest will be used as [fallback placements](https://floating-ui.com/docs/flip#fallbackplacements).\nIt is also acceptable to use the values `auto`, `auto-start`, `auto-end` to use [autoPlacement middleware](https://floating-ui.com/docs/autoPlacement) instead of flip.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\nconst [boxElement, setBoxElement] = React.useState(null);\n\n<div ref={setBoxElement} />\n<Popup open anchorElement={boxElement} placement=\"top-start\">Top Start</Popup>\n<Popup open anchorElement={boxElement} placement=\"top\">Top</Popup>\n<Popup open anchorElement={boxElement} placement=\"top-end\">Top End</Popup>\n<Popup open anchorElement={boxElement} placement=\"right-start\">Right Start</Popup>\n<Popup open anchorElement={boxElement} placement=\"right\">Right</Popup>\n<Popup open anchorElement={boxElement} placement=\"right-end\">Right End</Popup>\n<Popup open anchorElement={boxElement} placement=\"bottom-end\">Bottom End</Popup>\n<Popup open anchorElement={boxElement} placement=\"bottom\">Bottom</Popup>\n<Popup open anchorElement={boxElement} placement=\"bottom-start\">Bottom Start</Popup>\n<Popup open anchorElement={boxElement} placement=\"left-end\">Left End</Popup>\n<Popup open anchorElement={boxElement} placement=\"left\">Left</Popup>\n<Popup open anchorElement={boxElement} placement=\"left-start\">Left Start</Popup>\n`}>\n    <UIKitExamples.PopupPlacementExample/>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n## Properties\n\n| Name                    | Description                                                                                |                             Type                              |     Default     |\n| :---------------------- | :----------------------------------------------------------------------------------------- | :-----------------------------------------------------------: | :-------------: |\n| anchorElement           | Anchor element. Can also be a `VirtualElement`                                             |                     `PopupAnchorElement`                      |                 |\n| aria-describedby        | `aria-describedby` attribute. Use it if you have both label and description nodes          |                           `string`                            |                 |\n| aria-label              | `aria-label` attribute. Use it only if you do not have any visible caption                 |                           `string`                            |                 |\n| aria-labelledby         | `aria-labelledby` attribute. Preferable if you have visible caption                        |                           `string`                            |                 |\n| children                | Any React content                                                                          |                       `React.ReactNode`                       |                 |\n| className               | `class` HTML attribute for the root node                                                   |                           `string`                            |                 |\n| container               | DOM element to which component is mounted via `Portal`                                     |                         `HTMLElement`                         | `document.body` |\n| disableEscapeKeyDown    | Disables triggering close on `Esc`                                                         |                           `boolean`                           |     `false`     |\n| disableFocusOut         | Disables triggering close on focusout                                                      |                           `boolean`                           |     `false`     |\n| disableOutsideClick     | Disables triggering close on outside clicks                                                |                           `boolean`                           |     `false`     |\n| disablePortal           | Disables using `Portal`                                                                    |                           `boolean`                           |     `false`     |\n| disableTransition       | Disables animation of popup appearing/disappearing                                         |                           `boolean`                           |     `false`     |\n| floatingClassName       | Additional class to apply to the `Floating UI` element                                     |                           `string`                            |                 |\n| floatingContext         | `Floating UI` context to provide interactions                                              |                     `FloatingRootContext`                     |                 |\n| floatingInteractions    | Override `Floating UI` interactions                                                        |                     `Array<ElementProps>`                     |                 |\n| floatingMiddlewares     | `Floating UI` middlewares. If set, they will completely overwrite the default middlewares. |                      `Array<Middleware>`                      |                 |\n| floatingStyles          | Styles to apply to the `Floating UI` element                                               |                     `React.CSSProperties`                     |                 |\n| focusOrder              | The order in which focus circle                                                            |        `Array<'reference' \\| 'floating' \\| 'content'>`        |  `['content']`  |\n| hasArrow                | Renders arrow pointing to the anchor                                                       |                           `boolean`                           |     `false`     |\n| id                      | `id` HTML attribute                                                                        |                           `string`                            |                 |\n| initialFocus            | Initial element to be focused. Positive number is the index of tabbable element.           |               `number` `React.Ref<HTMLElement>`               |                 |\n| keepMounted             | `Popup` will not be removed from the DOM upon hiding                                       |                           `boolean`                           |     `false`     |\n| modal                   | Enables focus trapping behaviour                                                           |                           `boolean`                           |     `false`     |\n| offset                  | `Floating UI` offset value                                                                 |                         `PopupOffset`                         |       `4`       |\n| onOpenChange            | Handles `Popup` open change event                                                          |                          `Function`                           |                 |\n| onTransitionIn          | On start open popup animation                                                              |                          `Function`                           |                 |\n| onTransitionInComplete  | On finish open popup animation                                                             |                          `Function`                           |                 |\n| onTransitionOut         | On start close popup animation                                                             |                          `Function`                           |                 |\n| onTransitionOutComplete | On finish close popup animation                                                            |                          `Function`                           |                 |\n| open                    | Manages `Popup` visibility                                                                 |                           `boolean`                           |     `false`     |\n| placement               | `Floating UI` placement                                                                    | `Placement` `Array<Placement>` `auto` `auto-start` `auto-end` |                 |\n| qa                      | Test attribute (`data-qa`)                                                                 |                           `string`                            |                 |\n| returnFocus             | Element to be focused on closing                                                           |              `boolean` `React.Ref<HTMLElement>`               |     `true`      |\n| role                    | Accessibility role for popup                                                               |                           `string`                            |                 |\n| strategy                | `Floating UI` positioning strategy                                                         |                      `absolute` `fixed`                       |   `absolute`    |\n| style                   | `style` HTML attribute for root node                                                       |                     `React.CSSProperties`                     |                 |\n\n## CSS API\n\n| Name                         | Description      |\n| :--------------------------- | :--------------- |\n| `--g-popup-background-color` | Background color |\n| `--g-popup-border-color`     | Border color     |\n| `--g-popup-border-width`     | Border width     |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"en","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}