{"pageProps":{"libId":"uikit","componentId":"breadcrumbs","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Breadcrumbs\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Breadcrumbs} from '@gravity-ui/uikit';\n```\n\n`Breadcrumbs` is a navigation element that shows the current location of a page within a website’s hierarchy. It provides links that allow users to return to higher levels in the hierarchy, making it easier to navigate through a website with multiple layers. Breadcrumbs are especially useful for large websites and applications with hierarchy-based structure of pages.\n\n## Example\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Breadcrumbs>\n    <Breadcrumbs.Item>Region</Breadcrumbs.Item>\n    <Breadcrumbs.Item>Country</Breadcrumbs.Item>\n    <Breadcrumbs.Item>City</Breadcrumbs.Item>\n    <Breadcrumbs.Item>District</Breadcrumbs.Item>\n    <Breadcrumbs.Item>Street</Breadcrumbs.Item>\n</Breadcrumbs>\n`}\n>\n    <UIKit.Breadcrumbs>\n        <UIKit.Breadcrumbs.Item>Region</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item>Country</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item>City</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item>District</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item>Street</UIKit.Breadcrumbs.Item>\n    </UIKit.Breadcrumbs>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<Breadcrumbs>\n  <Breadcrumbs.Item>Region</Breadcrumbs.Item>\n  <Breadcrumbs.Item>Country</Breadcrumbs.Item>\n  <Breadcrumbs.Item>City</Breadcrumbs.Item>\n  <Breadcrumbs.Item>District</Breadcrumbs.Item>\n  <Breadcrumbs.Item>Street</Breadcrumbs.Item>\n</Breadcrumbs>\n```\n\n<!-- Storybook example -->\n\n<BreadcrumbsExample />\n\n<!--/GITHUB_BLOCK-->\n\n### Events\n\nUse the `onAction` property as a callback to handle click events on items.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Breadcrumbs onAction={(id) => alert(id)}>\n    <Breadcrumbs.Item key={1}>Region</Breadcrumbs.Item>\n    <Breadcrumbs.Item key={2}>Country</Breadcrumbs.Item>\n    <Breadcrumbs.Item key={3}>City</Breadcrumbs.Item>\n    <Breadcrumbs.Item key={4}>District</Breadcrumbs.Item>\n    <Breadcrumbs.Item key={5}>Street</Breadcrumbs.Item>\n</Breadcrumbs>\n`}\n>\n    <UIKit.Breadcrumbs onAction={(id) => alert(id)}>\n        <UIKit.Breadcrumbs.Item key={1}>Region</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item key={2}>Country</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item key={3}>City</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item key={4}>District</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item key={5}>Street</UIKit.Breadcrumbs.Item>\n    </UIKit.Breadcrumbs>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\nconst [currentId, setCurrentId] = React.useState();\nconst items = [\n    {id: 1, label: 'Region'},\n    {id: 2, label: 'Country'},\n    {id: 3, label: 'City'},\n    {id: 4, label: 'District'},\n    {id: 5, label: 'Street'},\n]\n<div>\n    <Breadcrumbs onAction={setCurrentId}>\n        {items.map((i) => <Breadcrumbs.Item key={i.id}>{i.label}</Breadcrumbs.Item>)}\n    </Breadcrumbs>\n    <p>You clicked item ID: {currentId}</p>\n</div>\n```\n\n<!-- Storybook example -->\n\n<BreadcrumbsEvents />\n\n<!--/GITHUB_BLOCK-->\n\n### Links\n\nIn `Breadcrumbs`, clicking an item normally triggers `onAction`. However, you can also use them as links to other pages or websites. To do that, add the `href` property to the `<Breadcrumbs.Item>` component:\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Breadcrumbs>\n    <Breadcrumbs.Item href=\"/\">Home</Breadcrumbs.Item>\n    <Breadcrumbs.Item href=\"/components\">Components</Breadcrumbs.Item>\n    <Breadcrumbs.Item href=\"/components/uikit/breadcrumbs\">Breadcrumbs</Breadcrumbs.Item>\n</Breadcrumbs>\n`}\n>\n    <UIKit.Breadcrumbs>\n        <UIKit.Breadcrumbs.Item href=\"/\">Home</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item href=\"/components\">Components</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item href=\"/components/uikit/breadcrumbs\">Breadcrumbs</UIKit.Breadcrumbs.Item>\n    </UIKit.Breadcrumbs>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<Breadcrumbs>\n  <Breadcrumbs.Item href=\"/\">Home</Breadcrumbs.Item>\n  <Breadcrumbs.Item href=\"/components\">Components</Breadcrumbs.Item>\n  <Breadcrumbs.Item href=\"/components/uikit/breadcrumbs\">Breadcrumbs</Breadcrumbs.Item>\n</Breadcrumbs>\n```\n\n<!-- Storybook example -->\n\n<BreadcrumbsLinks />\n\n<!--/GITHUB_BLOCK-->\n\n### Root context\n\nTo help users understand the overall structure, some applications always show the starting point (root item) of the Breadcrumbs, even when other items are hidden due to space limitations.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Box overflow=\"hidden\" width={200}>\n    <Breadcrumbs showRoot>\n        <Breadcrumbs.Item key=\"home\">Home</Breadcrumbs.Item>\n        <Breadcrumbs.Item key=\"trendy\">Trendy</Breadcrumbs.Item>\n        <Breadcrumbs.Item key=\"2020 assets\">March 2020 Assets</Breadcrumbs.Item>\n        <Breadcrumbs.Item key=\"winter\">Winter</Breadcrumbs.Item>\n        <Breadcrumbs.Item key=\"holiday\">Holiday</Breadcrumbs.Item>\n    </Breadcrumbs>\n</Box>\n`}\n>\n<UIKit.Box overflow=\"hidden\" width={200}>\n    <UIKit.Breadcrumbs>\n        <UIKit.Breadcrumbs.Item key=\"home\">Home</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item key=\"trendy\">Trendy</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item key=\"2020 assets\">March 2020 Assets</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item key=\"winter\">Winter</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item key=\"holiday\">Holiday</UIKit.Breadcrumbs.Item>\n    </UIKit.Breadcrumbs>\n</UIKit.Box>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<Box overflow=\"hidden\" width={200}>\n  <Breadcrumbs showRoot>\n    <Breadcrumbs.Item key=\"home\">Home</Breadcrumbs.Item>\n    <Breadcrumbs.Item key=\"trendy\">Trendy</Breadcrumbs.Item>\n    <Breadcrumbs.Item key=\"2020 assets\">March 2020 Assets</Breadcrumbs.Item>\n    <Breadcrumbs.Item key=\"winter\">Winter</Breadcrumbs.Item>\n    <Breadcrumbs.Item key=\"holiday\">Holiday</Breadcrumbs.Item>\n  </Breadcrumbs>\n</Box>\n```\n\n<!-- Storybook example -->\n\n<BreadcrumbsRootContext />\n\n<!--/GITHUB_BLOCK-->\n\n### Separator\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Breadcrumbs separator=\">\">\n    <Breadcrumbs.Item>Region</Breadcrumbs.Item>\n    <Breadcrumbs.Item>Country</Breadcrumbs.Item>\n    <Breadcrumbs.Item>City</Breadcrumbs.Item>\n    <Breadcrumbs.Item>District</Breadcrumbs.Item>\n    <Breadcrumbs.Item>Street</Breadcrumbs.Item>\n</Breadcrumbs>\n`}\n>\n    <UIKit.Breadcrumbs separator=\">\">\n        <UIKit.Breadcrumbs.Item>Region</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item>Country</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item>City</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item>District</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item>Street</UIKit.Breadcrumbs.Item>\n    </UIKit.Breadcrumbs>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<Breadcrumbs separator=\"›\">\n  {breadcrumbs}\n</Breadcrumbs>\n<Breadcrumbs separator=\"—\">\n  {breadcrumbs}\n</Breadcrumbs>\n<Breadcrumbs separator={<ChevronRight />}>\n  {breadcrumbs}\n</Breadcrumbs>\n```\n\n<!-- Storybook example -->\n\n<BreadcrumbsSeparator />\n\n<!--/GITHUB_BLOCK-->\n\n### Breadcrumbs with icons\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Breadcrumbs>\n  <Breadcrumbs.Item>\n    <Flex alignItems=\"center\" gap={1}>\n      <House /> uikit\n    </Flex>\n  </Breadcrumbs.Item>\n  <Breadcrumbs.Item>\n    <Flex alignItems=\"center\" gap={1}>\n      <Flame /> components\n    </Flex>\n  </Breadcrumbs.Item>\n  <Breadcrumbs.Item>\n    <Flex alignItems=\"center\" gap={1}>\n      <Rocket style={{minWidth: 16}} />\n      <Text ellipsis variant=\"inherit\">\n        Breadcrumbs\n      </Text>\n    </Flex>\n  </Breadcrumbs.Item>\n</Breadcrumbs>\n`}\n>\n    <UIKitExamples.BreadcrumbsCustomIconExample />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<Breadcrumbs>\n  <Breadcrumbs.Item>\n    <Flex alignItems=\"center\" gap={1}>\n      <House /> uikit\n    </Flex>\n  </Breadcrumbs.Item>\n  <Breadcrumbs.Item>\n    <Flex alignItems=\"center\" gap={1}>\n      <Flame /> components\n    </Flex>\n  </Breadcrumbs.Item>\n  <Breadcrumbs.Item>\n    <Flex alignItems=\"center\" gap={1}>\n      <Rocket style={{minWidth: 16}} />\n      <Text ellipsis variant=\"inherit\">\n        Breadcrumbs\n      </Text>\n    </Flex>\n  </Breadcrumbs.Item>\n</Breadcrumbs>\n```\n\n<!-- Storybook example -->\n\n<BreadcrumbsWithIcons />\n\n<!--/GITHUB_BLOCK-->\n\n### Integration with routers\n\n<!--GITHUB_BLOCK-->\n\n#### React Router\n\n```jsx\nimport {useLinkClickHandler, useHref} from 'react-router';\nimport {Breadcrumbs, BreadcrumbsItem} from '@gravity-ui/uikit';\n\nfunction RouterLink({to, ...rest}) {\n  const href = useHref(to);\n  const onClick = useLinkClickHandler(to);\n  return <BreadcrumbsItem {...rest} href={href} onClick={onClick} />;\n}\n\nfunction Navigation() {\n  return (\n    <Breadcrumbs itemComponent={RouterLink}>\n      <RouterLink to=\"/\">Home</RouterLink>\n      <RouterLink to=\"/components\">Components</RouterLink>\n      <RouterLink to=\"/components/breadcrumbs\">Breadcrumbs</RouterLink>\n    </Breadcrumbs>\n  );\n}\n```\n\n#### Next.js\n\n```jsx\nimport Link from 'next/link';\nimport {Breadcrumbs, BreadcrumbsItem} from '@gravity-ui/uikit';\n\nfunction RouterLink({href, ...rest}) {\n  return (\n    <Link href={href} passHref legacyBehavior>\n      <BreadcrumbsItem {...rest} />;\n    </Link>\n  );\n}\n\nfunction Navigation() {\n  return (\n    <Breadcrumbs itemComponent={RouterLink}>\n      <RouterLink href=\"/\">Home</RouterLink>\n      <RouterLink href=\"/components\">Components</RouterLink>\n      <RouterLink href=\"/components/breadcrumbs\">Breadcrumbs</RouterLink>\n    </Breadcrumbs>\n  );\n}\n```\n\n#### Tanstack Router\n\n```jsx\nimport {createLink} from '@tanstack/react-router';\nimport {Breadcrumbs, BreadcrumbsItem} from '@gravity-ui/uikit';\n\nconst RouterLink = createLink(BreadcrumbsItem);\n\nfunction Navigation() {\n  return (\n    <Breadcrumbs itemComponent={RouterLink}>\n      <RouterLink href=\"/\">Home</RouterLink>\n      <RouterLink href=\"/components\">Components</RouterLink>\n      <RouterLink href=\"/components/breadcrumbs\">Breadcrumbs</RouterLink>\n    </Breadcrumbs>\n  );\n}\n```\n\n<!-- Storybook example -->\n\n<BreadcrumbsClientNavigation />\n\n<!--/GITHUB_BLOCK-->\n\n### Landmarks\n\nWhen breadcrumbs are used as a main navigation element for a page, they can be placed in a [navigation landmark](https://www.w3.org/WAI/ARIA/apg/patterns/landmarks/examples/navigation.html). Landmarks help the assistive technology users quickly find major sections of a page. To create a navigation landmark, place breadcrumbs inside a `<nav>` element with an `aria-label`:\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<nav aria-label=\"Breadcrumbs\">\n  <Breadcrumbs>\n      <Breadcrumbs.Item href=\"/\">Home</Breadcrumbs.Item>\n      <Breadcrumbs.Item href=\"/components\">Components</Breadcrumbs.Item>\n      <Breadcrumbs.Item href=\"/components/uikit/breadcrumbs\">Breadcrumbs</Breadcrumbs.Item>\n  </Breadcrumbs>\n</nav>\n`}\n>\n    <nav aria-label=\"Breadcrumbs\">\n        <UIKit.Breadcrumbs>\n            <UIKit.Breadcrumbs.Item href=\"/\">Home</UIKit.Breadcrumbs.Item>\n            <UIKit.Breadcrumbs.Item href=\"/components\">Components</UIKit.Breadcrumbs.Item>\n            <UIKit.Breadcrumbs.Item href=\"/components/uikit/breadcrumbs\">Breadcrumbs</UIKit.Breadcrumbs.Item>\n        </UIKit.Breadcrumbs>\n    </nav>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<nav aria-label=\"Breadcrumbs\">\n  <Breadcrumbs>\n    <Breadcrumbs.Item href=\"/\">Home</Breadcrumbs.Item>\n    <Breadcrumbs.Item href=\"/components\">Components</Breadcrumbs.Item>\n    <Breadcrumbs.Item href=\"/components/uikit/breadcrumbs\">Breadcrumbs</Breadcrumbs.Item>\n  </Breadcrumbs>\n</nav>\n```\n\n<!-- Storybook example -->\n\n<BreadcrumbsLinks />\n\n<!--/GITHUB_BLOCK-->\n\n### Disabled items\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Breadcrumbs>\n    <Breadcrumbs.Item href=\"#Region\">Region</Breadcrumbs.Item>\n    <Breadcrumbs.Item href=\"#Country\" disabled>\n        Country\n    </Breadcrumbs.Item>\n    <Breadcrumbs.Item href=\"#City\">City</Breadcrumbs.Item>\n    <Breadcrumbs.Item href=\"#District\">District</Breadcrumbs.Item>\n    <Breadcrumbs.Item href=\"#Street\" disabled>\n        Street\n    </Breadcrumbs.Item>\n</Breadcrumbs>\n`}\n>\n    <UIKit.Breadcrumbs>\n        <UIKit.Breadcrumbs.Item href=\"#Region\">Region</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item href=\"#Country\" disabled>\n            Country\n        </UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item href=\"#City\">City</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item href=\"#District\">District</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item href=\"#Street\" disabled>\n            Street\n        </UIKit.Breadcrumbs.Item>\n    </UIKit.Breadcrumbs>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<Breadcrumbs>\n  <Breadcrumbs.Item href=\"#Region\">Region</Breadcrumbs.Item>\n  <Breadcrumbs.Item href=\"#Country\" disabled>\n    Country\n  </Breadcrumbs.Item>\n  <Breadcrumbs.Item href=\"#City\">City</Breadcrumbs.Item>\n  <Breadcrumbs.Item href=\"#District\">District</Breadcrumbs.Item>\n  <Breadcrumbs.Item href=\"#Street\" disabled>\n    Street\n  </Breadcrumbs.Item>\n</Breadcrumbs>\n```\n\n<!-- Storybook example -->\n\n<BreadcrumbsDisabledItems />\n\n<!--/GITHUB_BLOCK-->\n\n### End content\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Breadcrumbs endContent={<div style={{paddingInlineStart: 4}}><Button>Push</Button></div>}>\n    <Breadcrumbs.Item>Region</Breadcrumbs.Item>\n    <Breadcrumbs.Item>Country</Breadcrumbs.Item>\n    <Breadcrumbs.Item>City</Breadcrumbs.Item>\n    <Breadcrumbs.Item>District</Breadcrumbs.Item>\n    <Breadcrumbs.Item>Street</Breadcrumbs.Item>\n</Breadcrumbs>\n`}\n>\n    <UIKit.Breadcrumbs endContent={<div style={{paddingInlineStart: 4}}><UIKit.Button>Push</UIKit.Button></div>}>\n        <UIKit.Breadcrumbs.Item>Region</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item>Country</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item>City</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item>District</UIKit.Breadcrumbs.Item>\n        <UIKit.Breadcrumbs.Item>Street</UIKit.Breadcrumbs.Item>\n    </UIKit.Breadcrumbs>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<Breadcrumbs\n  endContent={\n    <Flex gap={1} spacing={{pl: 1}}>\n      <Button>Test1</Button>\n      <Button>Test2</Button>\n    </Flex>\n  }\n>\n  <Breadcrumbs.Item>Region</Breadcrumbs.Item>\n  <Breadcrumbs.Item>Country</Breadcrumbs.Item>\n  <Breadcrumbs.Item>City</Breadcrumbs.Item>\n  <Breadcrumbs.Item>District</Breadcrumbs.Item>\n  <Breadcrumbs.Item>Street</Breadcrumbs.Item>\n</Breadcrumbs>\n```\n\n<!-- Storybook example -->\n\n<BreadcrumbsEndContent />\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name             | Description                                                                  | Type                                       | Default |\n| :--------------- | :--------------------------------------------------------------------------- | :----------------------------------------- | :------ |\n| children         | Breadcrumb items                                                             | `React.ReactElement<BreadcrumbsItemProps>` |         |\n| disabled         | Determines whether `Breadcrumbs` are disabled.                               | `boolean`                                  |         |\n| showRoot         | Enables or disables always showing the root item if the items are collapsed. | `boolean`                                  |         |\n| popupPlacement   | Style of the collapsed item popup.                                           | `PopupPlacement`                           |         |\n| popupStyle       | Style of the collapsed item popup.                                           | `\"staircase\"`                              |         |\n| qa               | `data-qa` HTML attribute, used for testing                                   | `string`                                   |         |\n| separator        | Custom separator node.                                                       | `React.ReactNode`                          | \"/\"     |\n| action           | `click` event handler.                                                       | `(id: Key) => void`                        |         |\n| id               | Element's unique ID.                                                         | `string`                                   |         |\n| className        | CSS class name for the element.                                              | `string`                                   |         |\n| style            | Sets the inline style for the element.                                       | `CSSProperties`                            |         |\n| aria-label       | Defines a string value that labels the current element.                      | `string`                                   |         |\n| aria-labelledby  | Identifies the element(s) that label the current element.                    | `string`                                   |         |\n| aria-describedby | Identifies the element(s) that describe the object.                          | `string`                                   |         |\n| endContent       | User's node rendered after last breadcrumb item.                             | `React.ReactNode`                          |         |\n\n### BreadcrumbsItemProps\n\n| Name       | Description                                                    | Type                              | Default |\n| :--------- | :------------------------------------------------------------- | :-------------------------------- | :------ |\n| children   | Breadcrumbs content.                                           | `string`                          |         |\n| title      | String representation of the item contents.                    | `string`                          |         |\n| aria-label | Accessibility label for the item.                              | `string`                          |         |\n| href       | URL to use for the hyperlink.                                  | `string`                          |         |\n| target     | Target window for the link.                                    | `React.HTMLAttributeAnchorTarget` |         |\n| rel        | Relationship between the linked resource and the current page. | `string`                          |         |\n| disabled   | Whether the BreadcrumbsItem is disabled.                       | `boolean`                         |         |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"en","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}