{"pageProps":{"libId":"uikit","componentId":"checkbox","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Checkbox\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Checkbox} from '@gravity-ui/uikit';\n```\n\nThe `Checkbox` component allows the user to select or deselect a specific value.\n\n## States\n\nA `Checkbox` can have different states:\n\n- Checked: The checkbox is ticked.\n- Disabled: The checkbox is unavailable.\n- Indeterminate: The checkbox is in an intermediate state between being ticked and unticked.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Checkbox size=\"l\" checked={false}>Unchecked</Checkbox>\n<Checkbox size=\"l\" checked>Checked</Checkbox>\n<Checkbox size=\"l\" disabled>Disabled</Checkbox>\n<Checkbox size=\"l\" indeterminate>Indeterminate</Checkbox>\n`}\n>\n    <UIKit.Checkbox size=\"l\" checked={false}>Unchecked</UIKit.Checkbox>\n    <UIKit.Checkbox size=\"l\" checked>Checked</UIKit.Checkbox>\n    <UIKit.Checkbox size=\"l\" disabled>Disabled</UIKit.Checkbox>\n    <UIKit.Checkbox size=\"l\" indeterminate>Indeterminate</UIKit.Checkbox>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Checkbox size=\"l\" checked={false}>Unchecked</Checkbox>\n<Checkbox size=\"l\" checked>Checked</Checkbox>\n<Checkbox size=\"l\" disabled>Disabled</Checkbox>\n<Checkbox size=\"l\" indeterminate>Indeterminate</Checkbox>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Size\n\nUse the `size` property to manage the `Checkbox` size. The default size is `m`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Checkbox size=\"m\">M Size</Checkbox>\n<Checkbox size=\"l\">L Size</Checkbox>\n<Checkbox size=\"xl\">XL Size</Checkbox>\n`}\n>\n    <UIKit.Checkbox size=\"m\">M Size</UIKit.Checkbox>\n    <UIKit.Checkbox size=\"l\">L Size</UIKit.Checkbox>\n    <UIKit.Checkbox size=\"xl\">XL Size</UIKit.Checkbox>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Checkbox size=\"m\">M Size</Checkbox>\n<Checkbox size=\"l\">L Size</Checkbox>\n<Checkbox size=\"xl\">XL Size</Checkbox>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Label\n\nYou can assign a label to a `Checkbox` using the `content` property or provide it as a child property.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n <div>\n  <Checkbox content=\"Content\" size=\"l\" />\n  <div\n      style={{\n          marginTop: 10,\n      }}\n  >\n      <Checkbox size=\"l\">\n          <span>Content as children</span>\n      </Checkbox>\n  </div>\n</div>\n`}\n>\n <div>\n  <UIKit.Checkbox content=\"Content\" size=\"l\" />\n  <div\n      style={{\n          marginTop: 10,\n      }}\n  >\n      <UIKit.Checkbox size=\"l\">\n          <span>Content as children</span>\n      </UIKit.Checkbox>\n  </div>\n</div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<div>\n  <Checkbox content=\"Content\" size=\"l\" />\n  <div\n    style={{\n      marginTop: 10,\n    }}\n  >\n    <Checkbox size=\"l\">\n      <span>Content as children</span>\n    </Checkbox>\n  </div>\n</div>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name           | Description                                                                                           |                     Type                      | Default |\n| :------------- | :---------------------------------------------------------------------------------------------------- | :-------------------------------------------: | :-----: |\n| children       | Checkbox content (usually, a label).                                                                  |                  `ReactNode`                  |         |\n| content        | Checkbox content (alternative to children).                                                           |                  `ReactNode`                  |         |\n| disabled       | Toggles the `disabled` state of the checkbox.                                                         |                   `boolean`                   | `false` |\n| checked        | Toggles the `checked` state of the checkbox.                                                          |                   `boolean`                   | `false` |\n| defaultChecked | Sets the initial checked state when the component is mounted.                                         |                   `boolean`                   | `false` |\n| onUpdate       | Fires when the user changes the checkbox state and provides the checked value as a callback argument. |         `(checked: boolean) => void`          |         |\n| onChange       | Fires when the user changes the checkbox state and provides the change event as a callback argument.  |                  `Function`                   |         |\n| onFocus        | Event handler to use when the checkbox input element receives focus.                                  |                  `Function`                   |         |\n| onBlur         | Event handler to use when the checkbox input element loses focus.                                     |                  `Function`                   |         |\n| size           | Determines the checkbox size.                                                                         |                    `m` `l`                    |   `m`   |\n| id             | `id` HTML attribute                                                                                   |                   `string`                    |         |\n| qa             | `data-qa` HTML attribute, used for testing                                                            |                   `string`                    |         |\n| style          | `style` HTML attribute                                                                                |             `React.CSSProperties`             |         |\n| className      | `class` HTML attribute                                                                                |                   `string`                    |         |\n| title          | `title` HTML attribute                                                                                |                   `string`                    |         |\n| name           | `name` HTML attribute for the input element.                                                          |                   `string`                    |         |\n| value          | `value` HTML attribute for the input element.                                                         |                   `string`                    |         |\n| indeterminate  | Toggles the `indeterminate` state of the checkbox.                                                    |                   `boolean`                   | `false` |\n| controlProps   | Additional propeties for the underlying input element.                                                | `React.InputHTMLAttributes<HTMLInputElement>` |         |\n| controlRef     | Ref to the underlying input element.                                                                  |         `React.Ref<HTMLInputElement>`         |         |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"en","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}