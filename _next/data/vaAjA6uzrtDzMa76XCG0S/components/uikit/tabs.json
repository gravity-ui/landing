{"pageProps":{"libId":"uikit","componentId":"tabs","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Tabs components\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {TabProvider, TabList, Tab, TabPanel} from '@gravity-ui/uikit';\n```\n\nTabs components is used to explore, organize content and switch between different views.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<TabProvider value={activeTab} onUpdate={setActiveTab}>\n    <TabList>\n        <Tab value=\"first\">First Tab</Tab>\n        <Tab value=\"second\">Active Tab</Tab>\n        <Tab value=\"third\" disabled>Disabled Tab</Tab>\n    </TabList>\n    <div>\n        <TabPanel value=\"first\">First Panel</TabPanel>\n        <TabPanel value=\"second\">Second Panel</TabPanel>\n        <TabPanel value=\"third\">Third Panel</TabPanel>\n    </div>\n</TabProvider>\n`}\n>\n    <UIKit.TabProvider value=\"first\">\n        <UIKit.TabList>\n            <UIKit.Tab value=\"first\">First Tab</UIKit.Tab>\n            <UIKit.Tab value=\"second\">Active Tab</UIKit.Tab>\n            <UIKit.Tab value=\"third\" disabled>Disabled Tab</UIKit.Tab>\n        </UIKit.TabList>\n        <div>\n            <UIKit.TabPanel value=\"first\">First Panel</UIKit.TabPanel>\n            <UIKit.TabPanel value=\"second\">Second Panel</UIKit.TabPanel>\n            <UIKit.TabPanel value=\"third\">Third Panel</UIKit.TabPanel>\n        </div>\n    </UIKit.TabProvider>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nconst [activeTab, setActiveTab] = React.useState('second');\n\nreturn (\n  <TabProvider value={activeTab} onUpdate={setActiveTab}>\n    <TabList>\n      <Tab value=\"first\">First Tab</Tab>\n      <Tab value=\"second\">Active Tab</Tab>\n      <Tab value=\"third\" disabled>\n        Disabled Tab\n      </Tab>\n    </TabList>\n    <div>\n      <TabPanel value=\"first\">First Panel</TabPanel>\n      <TabPanel value=\"second\">Second Panel</TabPanel>\n      <TabPanel value=\"third\">Third Panel</TabPanel>\n    </div>\n  </TabProvider>\n);\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Components\n\n- [TabProvider](#tabprovider)\n- [TabList](#tablist)\n- [Tab](#tab)\n- [TabPanel](#tabpanel)\n\n## TabProvider\n\nA component that provides the tab selection functionality\n\n### Properties\n\n| Name     | Description                                              |           Type            | Default |\n| :------- | :------------------------------------------------------- | :-----------------------: | :-----: |\n| children | List of tabs and tab panels, probably with some wrappers |     `React.ReactNode`     |         |\n| value    | Active tab value                                         |         `string`          |         |\n| onUpdate | Update tab handler                                       | `(value: string) => void` |         |\n\n## TabList\n\nComponent that serves as the container for a set of `tabs`\n\n### Size\n\nTo control the size of the `tabs` use the `size` property. Default size is `m`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<TabList value=\"second\" size=\"m\">\n    <Tab value=\"first\">M Size first</Tab>\n    <Tab value=\"second\">M Size second</Tab>\n</TabList>\n\n<TabList value=\"second\" size=\"l\">\n    <Tab value=\"first\">L Size first</Tab>\n    <Tab value=\"second\">L Size second</Tab>\n</TabList>\n\n<TabList value=\"second\" size=\"xl\">\n    <Tab value=\"first\">XL Size first</Tab>\n    <Tab value=\"second\">v Size second</Tab>\n</TabList>\n`}\n>\n    <UIKit.TabList value=\"second\" size=\"m\">\n        <UIKit.Tab value=\"first\">M Size first</UIKit.Tab>\n        <UIKit.Tab value=\"second\">M Size second</UIKit.Tab>\n    </UIKit.TabList>\n\n    <UIKit.TabList value=\"second\" size=\"l\">\n        <UIKit.Tab value=\"first\">L Size first</UIKit.Tab>\n        <UIKit.Tab value=\"second\">L Size second</UIKit.Tab>\n    </UIKit.TabList>\n\n    <UIKit.TabList value=\"second\" size=\"xl\">\n        <UIKit.Tab value=\"first\">XL Size first</UIKit.Tab>\n        <UIKit.Tab value=\"second\">v Size second</UIKit.Tab>\n    </UIKit.TabList>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TabList value=\"second\" size=\"m\">\n    <Tab value=\"first\">M Size first</Tab>\n    <Tab value=\"second\">M Size second</Tab>\n</TabList>\n<TabList value=\"second\" size=\"l\">\n    <Tab value=\"first\">L Size first</Tab>\n    <Tab value=\"second\">L Size second</Tab>\n</TabList>\n<TabList value=\"second\" size=\"xl\">\n    <Tab value=\"first\">XL Size first</Tab>\n    <Tab value=\"second\">v Size second</Tab>\n</TabList>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Properties\n\n`TabList` accepts any valid `div` element props in addition to these:\n\n| Name            | Description                                                                          |           Type            | Default |\n| :-------------- | :----------------------------------------------------------------------------------- | :-----------------------: | :-----: |\n| children        | List of tabs, probably with some wrappers                                            |     `React.ReactNode`     |         |\n| value           | Active tab value                                                                     |         `string`          |         |\n| onUpdate        | Update tab handler                                                                   | `(value: string) => void` |         |\n| className       | CSS-class of element                                                                 |         `string`          |         |\n| activateOnFocus | Activate tab on focus. Use this only if panel's content can be displayed immediately |         `boolean`         | `false` |\n| size            | Element size                                                                         |    `\"m\"` `\"l\"` `\"xl\"`     |  `\"m\"`  |\n| qa              | HTML `data-qa` attribute, used in tests                                              |         `string`          |         |\n\n## Tab\n\nThis component is used to render tab items.\n\n### Icon\n\nUsed if you need to display an icon for a tab item.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TabList value=\"first\">\n    <Tab value=\"first\" icon={<Icon size={16} data={GearIcon} />}>Tab with icon</Tab>\n    <Tab value=\"second\">Tab without icon</Tab>\n</TabList>\n`}\n>\n    <UIKit.TabList value=\"first\">\n        <UIKit.Tab\n            icon={\n                <UIKit.Icon data={() => (\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fillRule=\"evenodd\" d=\"M7.199 2H8.8a.2.2 0 0 1 .2.2c0 1.808 1.958 2.939 3.524 2.034a.199.199 0 0 1 .271.073l.802 1.388a.199.199 0 0 1-.073.272c-1.566.904-1.566 3.164 0 4.069a.199.199 0 0 1 .073.271l-.802 1.388a.199.199 0 0 1-.271.073C10.958 10.863 9 11.993 9 13.8a.2.2 0 0 1-.199.2H7.2a.199.199 0 0 1-.2-.2c0-1.808-1.958-2.938-3.524-2.034a.199.199 0 0 1-.272-.073l-.8-1.388a.199.199 0 0 1 .072-.271c1.566-.905 1.566-3.165 0-4.07a.199.199 0 0 1-.073-.271l.801-1.388a.199.199 0 0 1 .272-.073C5.042 5.138 7 4.007 7 2.2c0-.11.089-.199.199-.199ZM5.5 2.2c0-.94.76-1.7 1.699-1.7H8.8c.94 0 1.7.76 1.7 1.7a.85.85 0 0 0 1.274.735 1.699 1.699 0 0 1 2.32.622l.802 1.388c.469.813.19 1.851-.622 2.32a.85.85 0 0 0 0 1.472 1.7 1.7 0 0 1 .622 2.32l-.802 1.388a1.699 1.699 0 0 1-2.32.622.85.85 0 0 0-1.274.735c0 .939-.76 1.7-1.699 1.7H7.2a1.7 1.7 0 0 1-1.699-1.7.85.85 0 0 0-1.274-.735 1.698 1.698 0 0 1-2.32-.622l-.802-1.388a1.699 1.699 0 0 1 .622-2.32.85.85 0 0 0 0-1.471 1.699 1.699 0 0 1-.622-2.321l.801-1.388a1.699 1.699 0 0 1 2.32-.622A.85.85 0 0 0 5.5 2.2Zm4 5.8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0ZM11 8a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\" clipRule=\"evenodd\"></path></svg>\n                )} size={16} />\n            }\n            value=\"first\"\n        >\n            Tab with icon\n        </UIKit.Tab>\n        <UIKit.Tab value=\"second\">Tab without icon</UIKit.Tab>\n    </UIKit.TabList>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TabList value=\"first\">\n  <Tab value=\"first\" icon={<Icon size={16} data={GearIcon} />}>\n    Tab with icon\n  </Tab>\n  <Tab value=\"second\">Tab without icon</Tab>\n</TabList>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### States\n\nTab item has disabled flag.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TabList value=\"first\">\n    <Tab value=\"first\" >First Tab</Tab>\n    <Tab value=\"second\" disabled>Disabled Tab</Tab>\n</TabList>\n`}\n>\n    <UIKit.TabList value=\"first\">\n        <UIKit.Tab value=\"first\">First Tab</UIKit.Tab>\n        <UIKit.Tab disabled value=\"second\">Disabled Tab</UIKit.Tab>\n    </UIKit.TabList>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TabList value=\"first\">\n  <Tab value=\"first\">First Tab</Tab>\n  <Tab value=\"second\" disabled>\n    Disabled Tab\n  </Tab>\n</TabList>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Counter\n\nUsed if you need to display a number for a tabs item.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TabList value=\"first\">\n    <Tab value=\"first\" counter={13}>First Tab</Tab>\n    <Tab value=\"second\" counter={3}>Second Tab</Tab>\n</TabList>\n`}\n>\n    <UIKit.TabList value=\"first\">\n        <UIKit.Tab value=\"first\" counter={13}>First Tab</UIKit.Tab>\n        <UIKit.Tab value=\"second\" counter={3}>Second Tab</UIKit.Tab>\n    </UIKit.TabList>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TabList value=\"first\">\n  <Tab value=\"first\" counter={13}>\n    First Tab\n  </Tab>\n  <Tab value=\"second\" counter={3}>\n    Second Tab\n  </Tab>\n</TabList>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Label\n\nUsed if you need to display a label for a tabs item.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TabList value=\"first\">\n    <Tab value=\"first\" label={{content: 'Label 1'}}>First Tab</Tab>\n    <Tab value=\"second\" label={{content: 'Label 2'}}>Second Tab</Tab>\n</TabList>\n`}\n>\n    <UIKit.TabList value=\"first\">\n        <UIKit.Tab value=\"first\" label={{content: 'Label 1'}}>First Tab</UIKit.Tab>\n        <UIKit.Tab value=\"second\" label={{content: 'Label 2'}}>Second Tab</UIKit.Tab>\n    </UIKit.TabList>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TabList value=\"first\">\n  <Tab value=\"first\" label={{content: 'Label 1'}}>\n    First Tab\n  </Tab>\n  <Tab value=\"second\" label={{content: 'Label 2'}}>\n    Second Tab\n  </Tab>\n</TabList>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Properties\n\n`Tab` accepts any valid `button` or `a` element props in addition to these:\n\n| Name      | Description                             |        Type         | Default |\n| :-------- | --------------------------------------- | :-----------------: | :-----: |\n| value     | Tab value                               |      `string`       |         |\n| title     | Tab title                               |      `string`       |         |\n| icon      | Icon displayed at the start             |  `React.ReactNode`  |         |\n| counter   | Content displayed at the end            |  `number` `string`  |         |\n| href      | A URL to link to.                       |      `string `      |         |\n| label     | `<Label>` displayed at the end          |  `React.ReactNode`  |         |\n| disabled  | Inactive state                          |      `boolean`      |         |\n| component | Overrides the root component            | `React.ElementType` |         |\n| children  | Tab's content                           |  `React.ReactNode`  |         |\n| qa        | HTML `data-qa` attribute, used in tests |      `string`       |         |\n\n## TabPanel\n\nIs a container element for content associated with a tab\n\n### Properties\n\n`TabPanel` accepts any valid `div` element props in addition to these:\n\n| Name     | Description                             |       Type        | Default |\n| :------- | :-------------------------------------- | :---------------: | :-----: |\n| children | Content of panel                        | `React.ReactNode` |         |\n| value    | Active tab value                        |     `string`      |         |\n| qa       | HTML `data-qa` attribute, used in tests |     `string`      |         |\n\n## CSS API\n\n| Name                             | Description                |\n| :------------------------------- | :------------------------- |\n| `--g-tabs-border-width`          | Tabs border width          |\n| `--g-tabs-item-height`           | Tabs item height           |\n| `--g-tabs-item-border-width`     | Tabs item border width     |\n| `--g-tabs-item-gap`              | Distance between tabs      |\n| `--g-tabs-vertical-item-height`  | Tabs vertical item height  |\n| `--g-tabs-vertical-item-padding` | Tabs vertical item padding |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"en","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}