{"pageProps":{"libId":"uikit","componentId":"sheet","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Sheet\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Sheet} from '@gravity-ui/uikit';\n```\n\n`Sheet` is a component designed for using in the mobile context as an information or interactive element. You can place content of any size in it, since the internal scrolling and dynamic resizing are supported.\n\nOn mobile devices, you can move a `Sheet` by pulling its main part or the swipe area. To close it, swipe down or tap the area outside the `Sheet`.\n\n## Usage\n\n```tsx\nimport React from 'react';\nimport {Button, Sheet} from '@gravity-ui/uikit';\n\nconst SheetExample = () => {\n  const [visible, setVisible] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Button onClick={() => setVisible(true)}>Open Sheet</Button>\n      <Sheet visible={visible} onClose={() => setVisible(false)} title=\"Content Sheet\">\n        Content\n      </Sheet>\n    </React.Fragment>\n  );\n};\n```\n\n## Properties\n\n| Name                        | Description                                                                                                                                                      |     Type      |     Default     |\n| :-------------------------- | :--------------------------------------------------------------------------------------------------------------------------------------------------------------- | :-----------: | :-------------: |\n| allowHideOnContentScroll    | Enables the behavior of closing the sheet window by swiping down if the content is scrolled to its top (`content Node.scrollTop === 0`) or has no scroll at all. |   `boolean`   |     `true`      |\n| alwaysFullHeight            | `Sheet` height will always have the maximum value                                                                                                                |   `boolean`   |   `undefined`   |\n| className                   | `class` HTML attribute                                                                                                                                           |   `string`    |   `undefined`   |\n| container                   | DOM element to which component is mounted via `Portal`                                                                                                           | `HTMLElement` | `document.body` |\n| contentClassName            | `class` HTML attribute for the sheet content.                                                                                                                    |   `string`    |   `undefined`   |\n| disablePortal               | Disables using `Portal`                                                                                                                                          |   `boolean`   |     `false`     |\n| hideTopBar                  | Hides the top bar with the resize handle.                                                                                                                        |   `boolean`   |                 |\n| id                          | Sheet ID used as hash in a URL. Make sure to specify multiple `id` values if there can be more than one sheet on a page.                                         |   `string`    |     `modal`     |\n| maxContentHeightCoefficient | Coefficient that determines the maximum height of the `Sheet` relative to the height of the viewport (range 0-1)                                                 |   `number`    |      `0.9`      |\n| onClose                     | Handler for close event.                                                                                                                                         |  `function`   |   `undefined`   |\n| swipeAreaClassName          | `class` HTML attribute for the swipe area.                                                                                                                       |   `string`    |   `undefined`   |\n| title                       | Sheet window title.                                                                                                                                              |   `string`    |   `undefined`   |\n| visible                     | Manages `Sheet` visibility                                                                                                                                       |   `boolean`   |     `false`     |\n\n## CSS API\n\n| Name                         | Description      |\n| :--------------------------- | :--------------- |\n| `--g-sheet-content-padding`  | Content padding  |\n| `--g-sheet-background-color` | Background color |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"en","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}