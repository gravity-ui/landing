{"pageProps":{"libId":"uikit","componentId":"progress","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Progress\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Progress} from '@gravity-ui/uikit';\n```\n\nThe `Progress` component shows current operation progress. It can also be divided into sections.\n\n## Theme\n\nUse the `theme` property to specify color of the whole progress or the composite part:\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress text=\"default\" value={50} />\n<Progress text=\"warning\" theme=\"warning\" value={50} />\n<Progress text=\"info\" theme=\"info\" value={50} />\n<Progress text=\"success\" theme=\"success\" value={50} />\n<Progress text=\"danger\" theme=\"danger\" value={50} />\n<Progress text=\"misc\" theme=\"misc\" value={50} />\n`}\n>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress text=\"default\" value={50} />\n    <div style={{height: '15px'}} />\n    <UIKit.Progress text=\"success\" theme=\"success\" value={50} />\n  </div>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress text=\"warning\" theme=\"warning\" value={50} />\n    <div style={{height: '15px'}} />\n    <UIKit.Progress text=\"danger\" theme=\"danger\" value={50} />\n  </div>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress text=\"info\" theme=\"info \"value={50} />\n    <div style={{height: '15px'}} />\n    <UIKit.Progress text=\"misc\" theme=\"misc\" value={50} />\n  </div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress text=\"default\" value={50} />\n<Progress text=\"warning\" theme=\"warning\" value={50} />\n<Progress text=\"info\" theme=\"info\" value={50} />\n<Progress text=\"success\" theme=\"success\" value={50} />\n<Progress text=\"danger\" theme=\"danger\" value={50} />\n<Progress text=\"misc\" theme=\"misc\" value={50} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## States\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress text=\"Loading\" theme=\"misc\" value={60} loading={true} />\n`}\n>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress text=\"Loading\" theme=\"misc\" value={60} loading={true} />\n  </div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress text=\"Loading\" theme=\"misc\" value={60} loading={true} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Size\n\nTo manage the size of the `Progress` component, use the `size` property that can take the following values: `\"xs\"`, `\"s\"`, and `\"m\"`. The `text` property works only with the `\"m\"` size.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress theme=\"success\" value={60} size=\"xs\" />\n<Progress theme=\"warning\" value={70} size=\"s\" />\n<Progress theme=\"danger\" value={80} size=\"m\" />\n`}\n>\n  <div style={{width: '30%'}}><UIKit.Progress theme=\"success\" value={60} size=\"xs\" /></div>\n  <div style={{width: '30%'}}><UIKit.Progress theme=\"warning\" value={70} size=\"s\" /></div>\n  <div style={{width: '30%'}}><UIKit.Progress theme=\"danger\" value={80} size=\"m\" /></div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress theme=\"success\" value={60} size=\"xs\" />\n<Progress theme=\"warning\" value={70} size=\"s\" />\n<Progress theme=\"danger\" value={80} size=\"m\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Breakpoints\n\nUse the `colorStops` property to set breakpoints of the `Progress` component.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress\n  value={10}\n  colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n/>\n<Progress\n  value={40}\n  colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n/>\n<Progress\n  value={60}\n  colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n/>\n`}\n>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress\n      value={10}\n      colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n    />\n  </div>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress\n      value={40}\n      colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n    />\n  </div>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress\n      value={60}\n      colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n    />\n  </div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress value={10} colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]} />\n<Progress value={40} colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]} />\n<Progress value={60} colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Stack\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress\n  stack={[\n    {theme: 'default', content: 'First', value: 25},\n    {theme: 'success', content: 'Second', value: 25},\n    {theme: 'warning', content: 'Third', value: 25},\n    {theme: 'danger', content: 'Fourth', value: 25},\n  ]}\n/>\n<Progress text=\"Progress with custom colors\"\n  stack={[\n    {color: '#6e5d8c', value: 33.333333333333336},\n    {color: '#5b785b', value: 33.333333333333336},\n    {color: '#956069', value: 33.333333333333336},\n  ]}\n/>\n`}\n>\n<div style={{width: '30%'}}>\n  <UIKit.Progress\n    stack={[\n      {theme: 'default', content: 'First', value: 25},\n      {theme: 'success', content: 'Second', value: 25},\n      {theme: 'warning', content: 'Third', value: 25},\n      {theme: 'danger', content: 'Fourth', value: 25},\n    ]}\n  />\n</div>\n<div style={{width: '30%'}}>\n  <UIKit.Progress text=\"Progress with custom colors\"\n    stack={[\n      {color: '#6e5d8c', value: 33.333333333333336},\n      {color: '#5b785b', value: 33.333333333333336},\n      {color: '#956069', value: 33.333333333333336},\n    ]}\n  />\n</div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress stack={[\n  {theme: 'default', content: 'First', value: 25},\n  {theme: 'success', content: 'Second', value: 25},\n  {theme: 'warning', content: 'Third', value: 25},\n  {theme: 'danger', content: 'Fourth', value: 25},\n]} />\n<Progress text=\"Progress with custom colors\" stack={[\n  {color: '#6e5d8c', value: 33.333333333333336},\n  {color: '#5b785b', value: 33.333333333333336},\n  {color: '#956069', value: 33.333333333333336},\n]} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name            | Description                                                                                                                         |                  Type                   |   Default   |\n| :-------------- | :---------------------------------------------------------------------------------------------------------------------------------- | :-------------------------------------: | :---------: |\n| className       | HTML `class` attribute                                                                                                              |                `string`                 |             |\n| colorStops      | Sets breakpoints with themes                                                                                                        | `Array<{theme: string; stop: number;}>` |             |\n| colorStopsValue | Sets the value for choosing the current stop or alternative value for colorStops. The available range is from 0 to 100.             |                `number`                 |             |\n| loading         | Toggles the `loading` state                                                                                                         |                `boolean`                |   `false`   |\n| size            | Sets the progress bar size. The progress bar text can only be displayed in `\"m\"` size.                                              |                `string`                 |    `\"m\"`    |\n| stack           | Configuration of composite progress bar. Not required if a `value` is provided.                                                     |             `Array<Stack>`              |             |\n| stackClassName  | HTML `class` attribute of stack                                                                                                     |                `string`                 |             |\n| text            | Text inside the progress bar                                                                                                        |               `ReactNode`               |             |\n| theme           | Sets progress color                                                                                                                 |                `string`                 | `\"default\"` |\n| value           | Current progress value. The available range is from 0 to 100. Using the `stack` property value is optional and is used as maxValue. |                `number`                 |             |\n\n### `Stack`\n\n| Name      | Description                                                                                                                           |    Type     |   Default   |\n| :-------- | :------------------------------------------------------------------------------------------------------------------------------------ | :---------: | :---------: |\n| className | `class` HTML attribute of the stack element                                                                                           |  `string`   |             |\n| color     | Sets the background color for the `style` HTML attribute                                                                              |  `string`   |             |\n| content   | Stack element content                                                                                                                 | `ReactNode` |             |\n| title     | `title` HTML attribute                                                                                                                |  `string`   |             |\n| theme     | Sets the stack element color                                                                                                          |  `string`   | `\"default\"` |\n| value     | Current progress value. The available range is from 0 to 100. Using the `stack` property value is optional and is used as `maxValue`. |  `number`   |             |\n| qa        | `data-qa` HTML attribute, used for testing                                                                                            |  `string`   |             |\n\n## CSS API\n\n| Name                                   | Description                        |\n| :------------------------------------- | :--------------------------------- |\n| `--g-progress-empty-text-color`        | Empty `Progress` text color        |\n| `--g-progress-filled-text-color`       | Filled `Progress` text color       |\n| `--g-progress-empty-background-color`  | Empty `Progress` background color  |\n| `--g-progress-filled-background-color` | Filled `Progress` background color |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"en","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}