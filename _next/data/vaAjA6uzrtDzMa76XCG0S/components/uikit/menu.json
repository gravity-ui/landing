{"pageProps":{"libId":"uikit","componentId":"menu","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Menu\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Menu} from '@gravity-ui/uikit';\n```\n\nThe `Menu` component enables easily creating views for action lists.\n\nIt has dedicated components for items (`Menu.Item`) and groups (`Menu.Group`). You can combine them to create more complex menus.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Menu>\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu>\n        <UIKit.Menu.Item>First</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Second</UIKit.Menu.Item>\n            <UIKit.Menu.Group label=\"Group\">\n                <UIKit.Menu.Item>One</UIKit.Menu.Item>\n                <UIKit.Menu.Item>Two</UIKit.Menu.Item>\n            </UIKit.Menu.Group>\n    </UIKit.Menu>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Menu>\n  <Menu.Item>First</Menu.Item>\n  <Menu.Item>Second</Menu.Item>\n  <Menu.Group label=\"Group\">\n    <Menu.Item>One</Menu.Item>\n    <Menu.Item>Two</Menu.Item>\n  </Menu.Group>\n</Menu>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Size\n\nThis property is used to select the menu size. The default value is `m`.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Menu size=\"s\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n<Menu size=\"m\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n<Menu size=\"l\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n<Menu size=\"xl\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu size=\"s\">\n        <UIKit.Menu.Item>First</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Second</UIKit.Menu.Item>\n    </UIKit.Menu>\n    <UIKit.Menu size=\"m\">\n        <UIKit.Menu.Item>First</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Second</UIKit.Menu.Item>\n    </UIKit.Menu>\n    <UIKit.Menu size=\"l\">\n        <UIKit.Menu.Item>First</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Second</UIKit.Menu.Item>\n    </UIKit.Menu>\n    <UIKit.Menu size=\"xl\">\n        <UIKit.Menu.Item>First</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Second</UIKit.Menu.Item>\n    </UIKit.Menu>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Menu size=\"s\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n\n<Menu size=\"m\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n\n<Menu size=\"l\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n\n<Menu size=\"xl\">\n    <Menu.Item>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n</Menu>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name      | Description                                |           Type           | Default |\n| :-------- | :----------------------------------------- | :----------------------: | :-----: |\n| size      | Menu size                                  | `\"s\"` `\"m\"` `\"l\"` `\"xl\"` |  `\"m\"`  |\n| children  | Child element                              |    `React.ReactNode`     |         |\n| className | `class` HTML attribute                     |         `string`         |         |\n| style     | `style` HTML attribute                     |  `React.CSSProperties`   |         |\n| qa        | `data-qa` HTML attribute, used for testing |         `string`         |         |\n\n## Menu.Item\n\nThis property is used to render menu items.\n\n### Icon\n\nUse the `iconStart` or `iconEnd` property to display an icon at the start or end of a menu item:\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Menu>\n    <Menu.Item iconStart={<Icon size={16} data={GearIcon} />}>Item with icon</Menu.Item>\n    <Menu.Item>Item without icon</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu>\n        <UIKit.Menu.Item iconStart={\n            <UIKit.Icon data={() => (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" class=\"g-icon\" fill=\"currentColor\" stroke=\"none\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M7.199 2H8.8a.2.2 0 0 1 .2.2c0 1.808 1.958 2.939 3.524 2.034a.199.199 0 0 1 .271.073l.802 1.388a.199.199 0 0 1-.073.272c-1.566.904-1.566 3.164 0 4.069a.199.199 0 0 1 .073.271l-.802 1.388a.199.199 0 0 1-.271.073C10.958 10.863 9 11.993 9 13.8a.2.2 0 0 1-.199.2H7.2a.199.199 0 0 1-.2-.2c0-1.808-1.958-2.938-3.524-2.034a.199.199 0 0 1-.272-.073l-.8-1.388a.199.199 0 0 1 .072-.271c1.566-.905 1.566-3.165 0-4.07a.199.199 0 0 1-.073-.271l.801-1.388a.199.199 0 0 1 .272-.073C5.042 5.138 7 4.007 7 2.2c0-.11.089-.199.199-.199ZM5.5 2.2c0-.94.76-1.7 1.699-1.7H8.8c.94 0 1.7.76 1.7 1.7a.85.85 0 0 0 1.274.735 1.699 1.699 0 0 1 2.32.622l.802 1.388c.469.813.19 1.851-.622 2.32a.85.85 0 0 0 0 1.472 1.7 1.7 0 0 1 .622 2.32l-.802 1.388a1.699 1.699 0 0 1-2.32.622.85.85 0 0 0-1.274.735c0 .939-.76 1.7-1.699 1.7H7.2a1.7 1.7 0 0 1-1.699-1.7.85.85 0 0 0-1.274-.735 1.698 1.698 0 0 1-2.32-.622l-.802-1.388a1.699 1.699 0 0 1 .622-2.32.85.85 0 0 0 0-1.471 1.699 1.699 0 0 1-.622-2.321l.801-1.388a1.699 1.699 0 0 1 2.32-.622A.85.85 0 0 0 5.5 2.2Zm4 5.8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0ZM11 8a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\" clip-rule=\"evenodd\"></path></svg></svg>\n            )} size={16} />\n        }>\n            Item with icon\n        </UIKit.Menu.Item>\n        <UIKit.Menu.Item>Item without icon</UIKit.Menu.Item>\n    </UIKit.Menu>\n</ExampleBlock>\n\n<ExampleBlock\n    code={`\n<Menu>\n    <Menu.Item iconEnd={<Icon size={16} data={TriangleExclamation} />}>Item with icon</Menu.Item>\n    <Menu.Item>Item without icon</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu>\n        <UIKit.Menu.Item iconEnd={\n            <UIKit.Icon data={() => (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M7.134 2.994 2.217 11.5a1 1 0 0 0 .866 1.5h9.834a1 1 0 0 0 .866-1.5L8.866 2.993a1 1 0 0 0-1.732 0Zm3.03-.75c-.962-1.665-3.366-1.665-4.328 0L.919 10.749c-.964 1.666.239 3.751 2.164 3.751h9.834c1.925 0 3.128-2.085 2.164-3.751l-4.917-8.505ZM8 5a.75.75 0 0 1 .75.75v2a.75.75 0 0 1-1.5 0v-2A.75.75 0 0 1 8 5Zm1 5.75a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\" clip-rule=\"evenodd\"/></svg>\n            )} size={16} />\n        }>\n            Item with icon\n        </UIKit.Menu.Item>\n        <UIKit.Menu.Item>Item without icon</UIKit.Menu.Item>\n    </UIKit.Menu>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Menu>\n  <Menu.Item iconStart={<Icon size={16} data={GearIcon} />}>Item with icon</Menu.Item>\n  <Menu.Item>Item without icon</Menu.Item>\n</Menu>\n```\n\n```tsx\n<Menu>\n  <Menu.Item iconEnd={<Icon size={16} data={TriangleExclamation} />}>Item with icon</Menu.Item>\n  <Menu.Item>Item without icon</Menu.Item>\n</Menu>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### States\n\nUsing this property, you can enable or disable (gray out) specific menu items:\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Menu>\n    <Menu.Item disabled>First</Menu.Item>\n    <Menu.Item>Second</Menu.Item>\n    <Menu.Item selected>Third</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu>\n        <UIKit.Menu.Item disabled>First</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Second</UIKit.Menu.Item>\n        <UIKit.Menu.Item selected>Third</UIKit.Menu.Item>\n    </UIKit.Menu>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Menu>\n  <Menu.Item disabled>First</Menu.Item>\n  <Menu.Item>Second</Menu.Item>\n  <Menu.Item selected>Third</Menu.Item>\n</Menu>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Theme\n\nThis allows you to change the menu item theme. The default theme is `normal`.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Menu>\n    <Menu.Item theme=\"danger\">First</Menu.Item>\n    <Menu.Item theme=\"normal\">Second</Menu.Item>\n    <Menu.Item>Third</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu>\n        <UIKit.Menu.Item theme=\"danger\">First</UIKit.Menu.Item>\n        <UIKit.Menu.Item theme=\"normal\">Second</UIKit.Menu.Item>\n        <UIKit.Menu.Item>Third</UIKit.Menu.Item>\n    </UIKit.Menu>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Menu>\n  <Menu.Item theme=\"danger\">First</Menu.Item>\n  <Menu.Item theme=\"normal\">Second</Menu.Item>\n  <Menu.Item>Third</Menu.Item>\n</Menu>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Properties\n\n| Name       | Description                                |           Type            |  Default   |\n| :--------- | :----------------------------------------- | :-----------------------: | :--------: |\n| iconStart  | Menu icon before item text                 |        `ReactNode`        |            |\n| iconEnd    | Menu icon after item text                  |        `ReactNode`        |            |\n| selected   | Menu item selected flag                    |         `boolean`         |  `false`   |\n| disabled   | Menu item disabled flag                    |         `boolean`         |  `false`   |\n| active     | Menu item active flag                      |         `boolean`         |  `false`   |\n| href       | URL                                        |         `string`          |            |\n| title      | Title attribute                            |         `string`          |            |\n| target     | Target attribute                           |         `string`          |            |\n| rel        | Rel attribute                              |         `string`          |            |\n| onClick    | Handler for onclick event                  | `React.MouseEventHandler` |            |\n| theme      | Menu item theme                            |   `\"normal\"` `\"danger\"`   | `\"normal\"` |\n| children   | Child element                              |     `React.ReactNode`     |            |\n| className  | `class` HTML attribute                     |         `string`          |            |\n| style      | `style` HTML attribute                     |   `React.CSSProperties`   |            |\n| qa         | `data-qa` HTML attribute, used for testing |         `string`          |            |\n| extraProps | Additional HTML attributes                 |         `Record`          |            |\n\n## Menu.Group\n\nYou can group items by topics within a single menu:\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Menu>\n    <Menu.Item>First</Menu.Item>\n    <Menu.Group label=\"Group One\">\n        <Menu.Item>One</Menu.Item>\n        <Menu.Item>Two</Menu.Item>\n    </Menu.Group>\n    <Menu.Group label=\"Group Two\">\n        <Menu.Item>One</Menu.Item>\n        <Menu.Item>Two</Menu.Item>\n    </Menu.Group>\n    <Menu.Item>Middle</Menu.Item>\n    <Menu.Group label=\"Group Three\">\n        <Menu.Item>One</Menu.Item>\n        <Menu.Item>Two</Menu.Item>\n    </Menu.Group>\n    <Menu.Item>Last</Menu.Item>\n</Menu>\n`}\n>\n    <UIKit.Menu>\n        <UIKit.Menu.Item>First</UIKit.Menu.Item>\n        <UIKit.Menu.Group label=\"Group One\">\n            <UIKit.Menu.Item>One</UIKit.Menu.Item>\n            <UIKit.Menu.Item>Two</UIKit.Menu.Item>\n        </UIKit.Menu.Group>\n        <UIKit.Menu.Group label=\"Group Two\">\n            <UIKit.Menu.Item>One</UIKit.Menu.Item>\n            <UIKit.Menu.Item>Two</UIKit.Menu.Item>\n        </UIKit.Menu.Group>\n        <UIKit.Menu.Item>Middle</UIKit.Menu.Item>\n        <UIKit.Menu.Group label=\"Group Three\">\n            <UIKit.Menu.Item>One</UIKit.Menu.Item>\n            <UIKit.Menu.Item>Two</UIKit.Menu.Item>\n        </UIKit.Menu.Group>\n        <UIKit.Menu.Item>Last</UIKit.Menu.Item>\n    </UIKit.Menu>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Menu>\n  <Menu.Item>First</Menu.Item>\n  <Menu.Group label=\"Group One\">\n    <Menu.Item>One</Menu.Item>\n    <Menu.Item>Two</Menu.Item>\n  </Menu.Group>\n  <Menu.Group label=\"Group Two\">\n    <Menu.Item>One</Menu.Item>\n    <Menu.Item>Two</Menu.Item>\n  </Menu.Group>\n  <Menu.Item>Middle</Menu.Item>\n  <Menu.Group label=\"Group Three\">\n    <Menu.Item>One</Menu.Item>\n    <Menu.Item>Two</Menu.Item>\n  </Menu.Group>\n  <Menu.Item>Last</Menu.Item>\n</Menu>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Properties\n\n| Name      | Description                                |         Type          | Default |\n| :-------- | :----------------------------------------- | :-------------------: | :-----: |\n| label     | Menu group label                           |       `string`        |         |\n| children  | Child element                              |   `React.ReactNode`   |         |\n| className | `class` HTML attribute                     |       `string`        |         |\n| style     | `style` HTML attribute                     | `React.CSSProperties` |         |\n| qa        | `data-qa` HTML attribute, used for testing |       `string`        |         |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"en","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}