{"pageProps":{"libId":"uikit","componentId":"text-input","readmeContent":"<!--GITHUB_BLOCK-->\n\n# TextInput\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {TextInput} from '@gravity-ui/uikit';\n```\n\nTextInput allow users to enter text into a UI.\n\n## Appearance\n\nThe appearance of `TextInput` is controlled by the `view` and `pin` properties.\n\n### View\n\n`normal` - the main view of `TextInput` (used by default).\n\n<!--LANDING_BLOCK\n<ExampleBlock code={`<TextInput placeholder=\"Placeholder\" />`}>\n    <UIKit.TextInput placeholder=\"Placeholder\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n`clear` - can be used with a custom wrapper for `TextInput`.\n\n<!--LANDING_BLOCK\n<ExampleBlock code={`<TextInput view=\"clear\" placeholder=\"Placeholder\" />`}>\n    <UIKit.TextInput view=\"clear\" placeholder=\"Placeholder\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput view=\"normal\" />\n<TextInput view=\"clear\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Pin\n\nAllows you to control view of right and left edges of `TextInput`'s border.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TextInput placeholder=\"Placeholder\" pin=\"round-brick\" />\n<TextInput placeholder=\"Placeholder\" pin=\"brick-brick\" />\n<TextInput placeholder=\"Placeholder\" pin=\"brick-round\" />\n`}\n>\n    <UIKit.TextInput placeholder=\"Placeholder\" pin=\"round-brick\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" pin=\"brick-brick\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" pin=\"brick-round\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput pin=\"round-brick\" />\n<TextInput pin=\"brick-brick\" />\n<TextInput pin=\"brick-round\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## States\n\n### Disabled\n\nThe state of the `TextInput` where you don't want the user to be able to interact with the component.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TextInput placeholder=\"Placeholder\" disabled={true} />\n`}\n>\n    <UIKit.TextInput placeholder=\"Placeholder\" disabled={true} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput disabled />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Error\n\nThe state of the `TextInput` in which you want to indicate incorrect user input. To change `TextInput` appearance, use the `validationState` property with the `\"invalid\"` value. An optional message text can be added via the `errorMessage` property. By default, message text is rendered outside the component.\nThis behaviour can be changed with the `errorPlacement` property.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TextInput placeholder=\"Placeholder\" errorMessage=\"Error message\" validationState=\"invalid\" />\n<TextInput placeholder=\"Placeholder\" errorPlacement=\"inside\" errorMessage=\"Error message\" validationState=\"invalid\" />\n`}\n>\n    <UIKit.TextInput placeholder=\"Placeholder\" errorMessage=\"Error message\" validationState=\"invalid\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" errorPlacement=\"inside\" errorMessage=\"Error message\" validationState=\"invalid\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput errorMessage=\"Error message\" validationState=\"invalid\" />\n<TextInput errorPlacement=\"inside\" errorMessage=\"Error message\" validationState=\"invalid\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Size\n\n`s` – Used when standard controls are too big (tables, small cards).\n\n`m` – Basic size, used in most components.\n\n`l` – Basic controls performed in a page's header, modal windows, or pop-ups.\n\n`xl` – Used on promo and landing pages.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TextInput placeholder=\"Placeholder\" size=\"s\" />\n<TextInput placeholder=\"Placeholder\" size=\"m\" />\n<TextInput placeholder=\"Placeholder\" size=\"l\" />\n<TextInput placeholder=\"Placeholder\" size=\"xl\" />\n`}\n>\n    <UIKit.TextInput placeholder=\"Placeholder\" size=\"s\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" size=\"m\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" size=\"l\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" size=\"xl\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput size=\"s\" />\n<TextInput size=\"m\" />\n<TextInput size=\"l\" />\n<TextInput size=\"xl\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Label\n\nAllows you to set the label to the left of control.\n\n- label occupies the leftmost position relative to the control. That is, the elements added via `startContent` property will be located to the right.\n- label can take up no more than half the width of the entire TextInput's space.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<TextInput placeholder=\"Placeholder\" label=\"Label\" />\n<TextInput placeholder=\"Placeholder\" label=\"Very long label with huge amount of symbols\" />\n`}\n>\n    <UIKit.TextInput placeholder=\"Placeholder\" label=\"Label\" />\n    <UIKit.TextInput placeholder=\"Placeholder\" label=\"Very long label with huge amount of symbols\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput label=\"Label\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Additional content\n\n### Start content\n\nAllows you to add content to the left of the control (or to the right in case of using [rtl](https://developer.mozilla.org/en-US/docs/Glossary/RTL)). Located to the left (or to the right in case of using rtl) of the label added via `label` property.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`<TextInput placeholder=\"Placeholder\" label=\"Label\" startContent={<Label size=\"s\">Left</Label>} />`}\n>\n    <UIKit.TextInput\n        placeholder=\"Search\"\n        label=\"Label\"\n        startContent={<UIKit.Label size=\"s\">Left</UIKit.Label>}\n    />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput startContent={<Label>Left</Label>} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### End content\n\nAllows you to add content to the right (or to the left in case of using [rtl](https://developer.mozilla.org/en-US/docs/Glossary/RTL)) of the control. Located to the right (or to the left in case of using rtl) of the clear button added via `hasClear` property.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`<TextInput placeholder=\"Placeholder\" endContent={<Label size=\"s\">Right</Label>} hasClear/>`}\n>\n    <UIKit.TextInput\n        hasClear\n        placeholder=\"Placeholder\"\n        endContent={<UIKit.Label size=\"s\">Right</UIKit.Label>}\n    />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<TextInput endContent={<Label>Right</Label>} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name            | Description                                                                                                             |                                 Type                                  |     Default     |\n| :-------------- | :---------------------------------------------------------------------------------------------------------------------- | :-------------------------------------------------------------------: | :-------------: |\n| autoComplete    | The control's `autocomplete` attribute                                                                                  |                          `boolean` `string`                           |                 |\n| autoFocus       | The control's `autofocus` attribute                                                                                     |                               `boolean`                               |                 |\n| className       | The control's wrapper class name                                                                                        |                               `string`                                |                 |\n| controlProps    | The control's html attributes                                                                                           |             `React.InputHTMLAttributes<HTMLInputElement>`             |                 |\n| controlRef      | React ref provided to the control                                                                                       |                     `React.Ref<HTMLInputElement>`                     |                 |\n| defaultValue    | The control's default value, used when the component is not controlled                                                  |                               `string`                                |                 |\n| disabled        | Indicates that the user cannot interact with the control                                                                |                           `React.ReactNode`                           |                 |\n| endContent      | User`s node rendered after input node, clear button and error icon                                                      |                               `string`                                |                 |\n| errorMessage    | Error text                                                                                                              |                               `string`                                |                 |\n| errorPlacement  | Error placement                                                                                                         |                          `outside` `inside`                           |    `outside`    |\n| hasClear        | Shows the icon for clearing control's value                                                                             |                               `boolean`                               |     `false`     |\n| id              | The control's `id` attribute                                                                                            |                               `string`                                |                 |\n| label           | Help text rendered to the left of the input node                                                                        |                               `string`                                |                 |\n| name            | The `name` attribute of the control. If unspecified, it will be autogenerated if not specified                          |                               `string`                                |                 |\n| note            | An optional element displayed under the bottom-right corner of the control that shares a space with the error container |                           `React.ReactNode`                           |                 |\n| onBlur          | Fires when the control lost focus. Provides focus event as a callback's argument                                        |                              `function`                               |                 |\n| onChange        | Fires when the input’s value is changed by the user. Provides change event as an callback's argument                    |                              `function`                               |                 |\n| onFocus         | Fires when the control gets focus. Provides focus event as a callback's argument                                        |                              `function`                               |                 |\n| onKeyDown       | Fires when a key is pressed. Provides keyboard event as a callback's argument                                           |                              `function`                               |                 |\n| onKeyUp         | Fires when a key is released. Provides keyboard event as a callback's argument                                          |                              `function`                               |                 |\n| onUpdate        | Fires when the input’s value is changed by the user. Provides new value as an callback's argument                       |                              `function`                               |                 |\n| pin             | The control's border view                                                                                               |                               `string`                                | `'round-round'` |\n| placeholder     | Text that appears in the control when it has no value set                                                               |                               `string`                                |                 |\n| qa              | Test ID attribute (`data-qa`)                                                                                           |                               `string`                                |\n| readOnly        | Indicates that the user cannot change control's value                                                                   |                               `boolean`                               |     `false`     |\n| size            | The size of the control                                                                                                 |                       `\"s\"` `\"m\"` `\"l\"` `\"xl\"`                        |      `\"m\"`      |\n| startContent    | User`s node rendered before label and input node                                                                        |                           `React.ReactNode`                           |                 |\n| tabIndex        | The `tabindex` attribute of the control                                                                                 |                               `string`                                |                 |\n| type            | The type of the control                                                                                                 | `\"email\"` `\"number\"` `\"password\"` `\"search\"` `\"tel\"` `\"text\"` `\"url\"` |                 |\n| validationState | Validation state                                                                                                        |                              `\"invalid\"`                              |                 |\n| value           | The value of the control                                                                                                |                               `string`                                |                 |\n| view            | The view of the control                                                                                                 |                         `\"normal\"` `\"clear\"`                          |   `\"normal\"`    |\n\n## CSS API\n\n| Name                                 | Description                                         |\n| :----------------------------------- | :-------------------------------------------------- |\n| `--g-text-input-text-color`          | Text color                                          |\n| `--g-text-input-label-color`         | Label color                                         |\n| `--g-text-input-placeholder-color`   | Placeholder color                                   |\n| `--g-text-input-background-color`    | Background color                                    |\n| `--g-text-input-border-radius`       | Border radius                                       |\n| `--g-text-input-border-width`        | Border width                                        |\n| `--g-text-input-border-color`        | Border color                                        |\n| `--g-text-input-border-color-hover`  | Border color if hovered                             |\n| `--g-text-input-border-color-active` | Border color if active                              |\n| `--g-text-input-focus-outline-color` | Outline color if focused (by default not presented) |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"en","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}