{"pageProps":{"libId":"uikit","componentId":"alert","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Alert\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Alert} from '@gravity-ui/uikit';\n```\n\n### Theme\n\n`normal`: Main theme (used by default).\n\n`info`: Used for any kind of regular information.\n\n`success`: Used for positive information.\n\n`warning`: Used for information that needs attention.\n\n`danger`: Used for critical errors.\n\n`utility`: Used for useful tips.\n\n`clear`: No styles, suitable for usage in other components (for example, as `content` in `Popover`)\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert theme=\"normal\" title=\"Normal\" message=\"Normal theme\" />\n<Alert theme=\"info\" title=\"Info\" message=\"Info theme\" />\n<Alert theme=\"success\" title=\"Success\" message=\"Success theme\" />\n<Alert theme=\"warning\" title=\"Warning\" message=\"Warning theme\" />\n<Alert theme=\"danger\" title=\"Danger\" message=\"Danger theme\" />\n<Alert theme=\"utility\" title=\"Utility\" message=\"Utility theme\" />\n<Alert theme=\"clear\" title=\"Clear\" message=\"Clear theme\" />\n`}>\n    <UIKit.Alert theme=\"normal\" title=\"Normal\" message=\"Normal theme\" />\n    <UIKit.Alert theme=\"info\" title=\"Info\" message=\"Info theme\" />\n    <UIKit.Alert theme=\"success\" title=\"Success\" message=\"Success theme\" />\n    <UIKit.Alert theme=\"warning\" title=\"Warning\" message=\"Warning theme\" />\n    <UIKit.Alert theme=\"danger\" title=\"Danger\" message=\"Danger theme\" />\n    <UIKit.Alert theme=\"utility\" title=\"Utility\" message=\"Utility theme\" />\n    <UIKit.Alert theme=\"clear\" title=\"Clear\" message=\"Clear theme\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert theme=\"normal\" title=\"Normal\" message=\"Normal theme\"/>\n<Alert theme=\"info\" title=\"Info\" message=\"Info theme\"/>\n<Alert theme=\"success\" title=\"Success\" message=\"Success theme\"/>\n<Alert theme=\"warning\" title=\"Warning\" message=\"Warning theme\"/>\n<Alert theme=\"danger\" title=\"Danger\" message=\"Danger theme\"/>\n<Alert theme=\"utility\" title=\"Utility\" message=\"Utility theme\"/>\n<Alert theme=\"clear\" title=\"Clear\" message=\"Clear theme\"/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### View\n\n`filled`: Used to adjust the background color of the alert (used by default).\n\n`outlined`: Used to adjust the border color of the alert.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert title=\"Filled\" message=\"Filled view\" view=\"filled\" />\n<Alert title=\"Outlined\" message=\"Outlined theme\" view=\"outlined\" />\n`}\n>\n    <UIKit.Alert title=\"Filled\" message=\"Filled view\" view=\"filled\" />\n    <UIKit.Alert title=\"Outlined\" message=\"Outlined theme\" view=\"outlined\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```\n<Alert title=\"Filled\" message=\"Filled view\" view=\"filled\" />\n<Alert title=\"Outlined\" message=\"Outlined theme\" view=\"outlined\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Layout\n\n`vertical`: Used to direct users to content if there is an `actions` property with buttons. It enables showing buttons below the text (used by default).\n\n`horizontal`: Used to direct users to content if there is an `actions` property with buttons. It enables showing buttons to the right of the text.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert layout=\"vertical\" title=\"Vertical\" message=\"Vertical direction\" actions={<Alert.Action>button</Alert.Action>} />\n<Alert layout=\"horizontal\" title=\"Horizontal\" message=\"Horizontal direction\" actions={<Alert.Action>button</Alert.Action>} />\n`}>\n    <UIKit.Alert layout=\"vertical\" title=\"Vertical\" message=\"Vertical direction\" actions={<UIKit.Alert.Action>button</UIKit.Alert.Action>} />\n    <UIKit.Alert layout=\"horizontal\" title=\"Horizontal\" message=\"Horizontal direction\" actions={<UIKit.Alert.Action>button</UIKit.Alert.Action>} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert layout=\"vertical\" title=\"Vertical\" message=\"Vertical direction\" actions={<Alert.Action>button</Alert.Action>}/>\n<Alert layout=\"horizontal\" title=\"Horizontal\" message=\"Horizontal direction\" actions={<Alert.Action>button</Alert.Action>}/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Corners\n\n`rounded`: Enables rounded corners of the alert window (used by default).\n\n`square`: Enables squared corners of the alert window.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert title=\"Rounded\" message=\"Rounded corners\" corners=\"rounded\"  />\n<Alert title=\"Square\" message=\"Square corners\" corners=\"square\" />\n`}\n>\n    <UIKit.Alert title=\"Rounded\" message=\"Rounded corners\" corners=\"rounded\"  />\n    <UIKit.Alert title=\"Square\" message=\"Square corners\" corners=\"square\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert title=\"Rounded\" message=\"Rounded corners\" corners=\"rounded\"/>\n<Alert title=\"Square\" message=\"Square corners\" corners=\"square\"/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Alert title\n\n`title`: Alert title. It has a lower priority than `Alert.Title`.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert title={<Alert.Title className={'some-class'} text=\"some text\"></Alert.Title>} />\n`}\n>\n    <UIKit.Alert title={<UIKit.Alert.Title className={'some-class'} text=\"some text\"></UIKit.Alert.Title>} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert title={<Alert.Title className={'some-class'} text=\"some text\"></Alert.Title>} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Alert message\n\n`message`: Alert message. It should be meaningful enough to fully explain what the alert is about.\n\n## `onClose`\n\n`onClose`: Callback function called when a user clicks the alert's close button. When this property is defined, the close button will visible.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert onClose={() => alert('Close button pressed')} title=\"Alert has close\" message=\"Alert has close\" />\n`}\n>\n    <UIKit.Alert onClose={() => alert('Close button pressed')} title=\"Alert has close\" message=\"Alert has close\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert\n  onClose={() => alert('Close button pressed')}\n  title=\"Alert has close\"\n  message=\"Alert has close\"\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Align\n\nDetermines how the content inside the `Alert` component is vertically aligned.\n\n`baseline`: Default alignment.\n\n`center`: Content is vertically centered within the `Alert` component. It may be useful if actions take up more space than text, or if the icon must be in the middle of the content.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert align=\"baseline\" theme=\"info\" title=\"Baseline\" message=\"Baseline align\" actions={<Alert.Action>button</Alert.Action>} />\n<Alert align=\"center\" theme=\"info\" title=\"Center\" message=\"Center align\" actions={<Alert.Action>button</Alert.Action>} align=\"center\"/>\n`}>\n    <UIKit.Alert align=\"baseline\" theme=\"info\" title=\"Baseline\" message=\"Baseline align\" actions={<UIKit.Alert.Action>button</UIKit.Alert.Action>} />\n    <UIKit.Alert align=\"center\" theme=\"info\" title=\"Center\" message=\"Center align\" actions={<UIKit.Alert.Action>button</UIKit.Alert.Action>} align=\"center\"/>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert align=\"vertical\" title=\"Vertical\" message=\"Vertical direction\" actions={<Alert.Action>button</Alert.Action>}/>\n<Alert align=\"horizontal\" title=\"Horizontal\" message=\"Horizontal direction\" actions={<Alert.Action>button</Alert.Action>}/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name      | Description                                                                 |                                     Type                                     |   Default    |\n| :-------- | :-------------------------------------------------------------------------- | :--------------------------------------------------------------------------: | :----------: |\n| theme     | Alert appearance                                                            | `\"normal\"` `\"info\"` `\"success\"` `\"warning\"` `\"danger\"` `\"utility\"` `\"clear\"` |  `\"normal\"`  |\n| view      | Enable/disable background color of the alert                                |                           `\"filled\"` `\"outlined\"`                            |  `\"filled\"`  |\n| layout    | Used to direct users to content if there is property `actions` with buttons |                         `\"vertical\"` `\"horizontal\"`                          | `\"vertical\"` |\n| corners   | Used for round/square corners of the alert window                           |                            `\"rounded\"` `\"square\"`                            | `\"rounded\"`  |\n| title     | Title of the alert                                                          |                                   `string`                                   |              |\n| message   | Message of the alert                                                        |                              `React.ReactNode`                               |              |\n| onClose   | A callback function called when the user clicks the alert's close button    |                                  `Function`                                  |              |\n| actions   | Array of buttons or full custom components                                  |                      `React.ReactNode` `\"AlertAction\"`                       |              |\n| align     | Determines how content inside the Alert component is vertically aligned     |                           `\"center\"` `\"baseline\"`                            | `\"baseline\"` |\n| style     | HTML style attribute                                                        |                            `React.CSSProperties`                             |              |\n| className | Name of alert class                                                         |                                   `string`                                   |              |\n| icon      | Override default icon                                                       |                              `React.ReactNode`                               |              |\n| qa        | HTML `data-qa` attribute, used in tests.                                    |                                   `string`                                   |              |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"en","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}