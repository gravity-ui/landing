{"pageProps":{"libId":"uikit","componentId":"segmented-radio-group","readmeContent":"<!--GITHUB_BLOCK-->\n\n# SegmentedRadioGroup\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {SegmentedRadioGroup} from '@gravity-ui/uikit';\n```\n\nThe `SegmentedRadioGroup` component is used to create a group of radio buttons where users can select a single option from multiple choices.\n\n### Disabled state\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<SegmentedRadioGroup name=\"group1\" defaultValue=\"Value 1\" disabled>\n    <SegmentedRadioGroup.Option value=\"Value 1\">Value 1</SegmentedRadioGroup.Option>\n    <SegmentedRadioGroup.Option value=\"Value 2\">Value 2</SegmentedRadioGroup.Option>\n    <SegmentedRadioGroup.Option value=\"Value 3\">Value 3</SegmentedRadioGroup.Option>\n</SegmentedRadioGroup>;\n`}\n>\n  <UIKit.SegmentedRadioGroup name=\"group1\" defaultValue=\"Value 1\" disabled>\n    <UIKit.SegmentedRadioGroup.Option value=\"Value 1\">Value 1</UIKit.SegmentedRadioGroup.Option>\n    <UIKit.SegmentedRadioGroup.Option value=\"Value 2\">Value 2</UIKit.SegmentedRadioGroup.Option>\n    <UIKit.SegmentedRadioGroup.Option value=\"Value 3\">Value 3</UIKit.SegmentedRadioGroup.Option>\n  </UIKit.SegmentedRadioGroup>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<SegmentedRadioGroup name=\"group1\" defaultValue=\"Value 1\" disabled>\n  <SegmentedRadioGroup.Option value=\"Value 1\">Value 1</SegmentedRadioGroup.Option>\n  <SegmentedRadioGroup.Option value=\"Value 2\">Value 2</SegmentedRadioGroup.Option>\n  <SegmentedRadioGroup.Option value=\"Value 3\">Value 3</SegmentedRadioGroup.Option>\n</SegmentedRadioGroup>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Size\n\nUse the `size` property to manage the `SegmentedRadioGroup` size. The default size is `m`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\nconst options = [\n<SegmentedRadioGroup.Option key=\"Value 1\" value=\"Value 1\">Value 1</SegmentedRadioGroup.Option>,\n<SegmentedRadioGroup.Option key=\"Value 2\" value=\"Value 2\">Value 2</SegmentedRadioGroup.Option>,\n<SegmentedRadioGroup.Option key=\"Value 3\" value=\"Value 3\">Value 3</SegmentedRadioGroup.Option>,\n];\n\n<SegmentedRadioGroup name=\"group1\" defaultValue=\"Value 1\" size=\"s\">{options}</SegmentedRadioGroup>\n<SegmentedRadioGroup name=\"group2\" defaultValue=\"Value 1\" size=\"m\">{options}</SegmentedRadioGroup>\n<SegmentedRadioGroup name=\"group3\" defaultValue=\"Value 1\" size=\"l\">{options}</SegmentedRadioGroup>\n<SegmentedRadioGroup name=\"group4\" defaultValue=\"Value 1\" size=\"xl\">{options}</SegmentedRadioGroup>\n`}\n>\n  <div style={{display: 'grid', justifyItems: 'center', gap: 10}}>\n    <UIKit.SegmentedRadioGroup name=\"group1\" defaultValue=\"Value 1\" size=\"s\">\n      <UIKit.SegmentedRadioGroup.Option value=\"Value 1\">Value 1</UIKit.SegmentedRadioGroup.Option>\n      <UIKit.SegmentedRadioGroup.Option value=\"Value 2\">Value 2</UIKit.SegmentedRadioGroup.Option>\n      <UIKit.SegmentedRadioGroup.Option value=\"Value 3\">Value 3</UIKit.SegmentedRadioGroup.Option>\n    </UIKit.SegmentedRadioGroup>\n    <UIKit.SegmentedRadioGroup name=\"group2\" defaultValue=\"Value 1\" size=\"m\">\n      <UIKit.SegmentedRadioGroup.Option value=\"Value 1\">Value 1</UIKit.SegmentedRadioGroup.Option>\n      <UIKit.SegmentedRadioGroup.Option value=\"Value 2\">Value 2</UIKit.SegmentedRadioGroup.Option>\n      <UIKit.SegmentedRadioGroup.Option value=\"Value 3\">Value 3</UIKit.SegmentedRadioGroup.Option>\n    </UIKit.SegmentedRadioGroup>\n    <UIKit.SegmentedRadioGroup name=\"group3\" defaultValue=\"Value 1\" size=\"l\">\n      <UIKit.SegmentedRadioGroup.Option value=\"Value 1\">Value 1</UIKit.SegmentedRadioGroup.Option>\n      <UIKit.SegmentedRadioGroup.Option value=\"Value 2\">Value 2</UIKit.SegmentedRadioGroup.Option>\n      <UIKit.SegmentedRadioGroup.Option value=\"Value 3\">Value 3</UIKit.SegmentedRadioGroup.Option>\n    </UIKit.SegmentedRadioGroup>\n    <UIKit.SegmentedRadioGroup name=\"group4\" defaultValue=\"Value 1\" size=\"xl\">\n      <UIKit.SegmentedRadioGroup.Option value=\"Value 1\">Value 1</UIKit.SegmentedRadioGroup.Option>\n      <UIKit.SegmentedRadioGroup.Option value=\"Value 2\">Value 2</UIKit.SegmentedRadioGroup.Option>\n      <UIKit.SegmentedRadioGroup.Option value=\"Value 3\">Value 3</UIKit.SegmentedRadioGroup.Option>\n    </UIKit.SegmentedRadioGroup>\n  </div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nconst options = [\n    <SegmentedRadioGroup.Option key=\"Value 1\" value=\"Value 1\">Value 1</SegmentedRadioGroup.Option>,\n    <SegmentedRadioGroup.Option key=\"Value 2\" value=\"Value 2\">Value 2</SegmentedRadioGroup.Option>,\n    <SegmentedRadioGroup.Option key=\"Value 3\" value=\"Value 3\">Value 3</SegmentedRadioGroup.Option>,\n];\n\n<SegmentedRadioGroup name=\"group1\" defaultValue=\"Value 1\" size=\"s\">{options}</SegmentedRadioGroup>\n<SegmentedRadioGroup name=\"group2\" defaultValue=\"Value 1\" size=\"m\">{options}</SegmentedRadioGroup>\n<SegmentedRadioGroup name=\"group3\" defaultValue=\"Value 1\" size=\"l\">{options}</SegmentedRadioGroup>\n<SegmentedRadioGroup name=\"group4\" defaultValue=\"Value 1\" size=\"xl\">{options}</SegmentedRadioGroup>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Width\n\nUse the `width` property to manage the `SegmentedRadioGroup` width:\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<div style={{width: 140, border: '2px dashed gray'}}>\n  <div style={{marginBottom: 10}}>\n    <SegmentedRadioGroup>\n      <SegmentedRadioGroup.Option value=\"1\" content=\"none\" />\n      <SegmentedRadioGroup.Option value=\"2\" content=\"none********\" />\n    </SegmentedRadioGroup>\n  </div>\n  <div style={{marginBottom: 10}}>\n    <SegmentedRadioGroup width=\"auto\">\n      <SegmentedRadioGroup.Option value=\"1\" content=\"auto\" />\n      <SegmentedRadioGroup.Option value=\"2\" content=\"auto********\" />\n    </SegmentedRadioGroup>\n  </div>\n  <div>\n    <SegmentedRadioGroup width=\"max\">\n      <SegmentedRadioGroup.Option value=\"1\" content=\"max\" />\n      <SegmentedRadioGroup.Option value=\"2\" content=\"max\" />\n    </SegmentedRadioGroup>\n  </div>\n</div>\n`}\n>\n<div style={{width: 140, border: '2px dashed gray'}}>\n <div style={{marginBottom: 10}}>\n    <UIKit.SegmentedRadioGroup>\n      <UIKit.SegmentedRadioGroup.Option value=\"1\" content=\"none\" />\n      <UIKit.SegmentedRadioGroup.Option value=\"2\" content=\"none********\" />\n    </UIKit.SegmentedRadioGroup>\n  </div>\n  <div style={{marginBottom: 10}}>\n    <UIKit.SegmentedRadioGroup width=\"auto\">\n      <UIKit.SegmentedRadioGroup.Option value=\"1\" content=\"auto\" />\n      <UIKit.SegmentedRadioGroup.Option value=\"2\" content=\"auto********\" />\n    </UIKit.SegmentedRadioGroup>\n  </div>\n  <div>\n    <UIKit.SegmentedRadioGroup width=\"max\">\n      <UIKit.SegmentedRadioGroup.Option value=\"1\" content=\"max\" />\n      <UIKit.SegmentedRadioGroup.Option value=\"2\" content=\"max\" />\n    </UIKit.SegmentedRadioGroup>\n  </div>\n</div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<div style={{width: 140, border: '2px dashed gray'}}>\n  <div style={{marginBottom: 10}}>\n    <SegmentedRadioGroup>\n      <SegmentedRadioGroup.Option value=\"1\" content=\"none\" />\n      <SegmentedRadioGroup.Option value=\"2\" content=\"none********\" />\n    </SegmentedRadioGroup>\n  </div>\n  <div style={{marginBottom: 10}}>\n    <SegmentedRadioGroup width=\"auto\">\n      <SegmentedRadioGroup.Option value=\"1\" content=\"auto\" />\n      <SegmentedRadioGroup.Option value=\"2\" content=\"auto********\" />\n    </SegmentedRadioGroup>\n  </div>\n  <div>\n    <SegmentedRadioGroup width=\"max\">\n      <SegmentedRadioGroup.Option value=\"1\" content=\"max\" />\n      <SegmentedRadioGroup.Option value=\"2\" content=\"max\" />\n    </SegmentedRadioGroup>\n  </div>\n</div>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Properties\n\n| Name         | Description                                                                                              |                Type                | Default |\n| :----------- | :------------------------------------------------------------------------------------------------------- | :--------------------------------: | :-----: |\n| children     | Content of the radio button.                                                                             |            `ReactNode`             |         |\n| disabled     | Toggles the `disabled` state of the radio button.                                                        |             `boolean`              | `false` |\n| options      | Options for radio button.                                                                                | `SegmentedRadioGroupOptionProps[]` |         |\n| defaultValue | Sets the initial value state when the component is mounted.                                              |              `string`              |         |\n| onUpdate     | Fires when the user changes the radio button state and provides the new value as a callback argument.    |     `(value: string) => void`      |         |\n| onChange     | Fires when the user changes the radio button state and provides the change event as a callback argument. |             `Function`             |         |\n| onFocus      | Event handler to use when the radio input element receives focus.                                        |             `Function`             |         |\n| onBlur       | Event handler to use when the radio input element loses focus.                                           |             `Function`             |         |\n| width        | Sets the width of the radio button.                                                                      |            `auto - max`            |         |\n| size         | Sets the size of the radio button.                                                                       |          `s` `m` `l` `xl`          |   `m`   |\n| name         | `name` HTML attribute for the input element.                                                             |              `string`              |         |\n| qa           | `data-qa` HTML attribute, used for testing                                                               |              `string`              |         |\n| style        | `style` HTML attribute                                                                                   |       `React.CSSProperties`        |         |\n| className    | `class` HTML attribute                                                                                   |              `string`              |         |\n\n## SegmentedRadioGroup.Option\n\nThe `SegmentedRadioGroup` component also exports a nested `Option` component. You can use it to create radio button options within a `SegmentedRadioGroup`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\nconst options: SegmentedRadioGroupOption[] = [\n  {value: 'Value 1', content: 'Value 1'},\n  {value: 'Value 2', content: 'Value 2'},\n  {value: 'Value 3', content: 'Value 3'},\n];\n<SegmentedRadioGroup name=\"group1\" defaultValue={options[0].value}>\n  <SegmentedRadioGroup.Option content={options[0].content} value={options[0].value} />\n  <SegmentedRadioGroup.Option content={options[1].content} value={options[1].value} />\n  <SegmentedRadioGroup.Option content={options[2].content} value={options[2].value} />\n</RadioGroup>\n`}\n>\n<UIKit.SegmentedRadioGroup name=\"group1\" defaultValue=\"Value 1\">\n  <UIKit.SegmentedRadioGroup.Option content=\"Value 1\" value=\"Value 1\" />\n  <UIKit.SegmentedRadioGroup.Option content=\"Value 2\" value=\"Value 2\" />\n  <UIKit.SegmentedRadioGroup.Option content=\"Value 3\" value=\"Value 3\" />\n</UIKit.SegmentedRadioGroup>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nconst options: SegmentedRadioGroupOption[] = [\n  {value: 'Value 1', content: 'Value 1'},\n  {value: 'Value 2', content: 'Value 2'},\n  {value: 'Value 3', content: 'Value 3'},\n];\n<SegmentedRadioGroup name=\"group1\" defaultValue={options[0].value}>\n  <SegmentedRadioGroup.Option content={options[0].content} value={options[0].value} />\n  <SegmentedRadioGroup.Option content={options[1].content} value={options[1].value} />\n  <SegmentedRadioGroup.Option content={options[2].content} value={options[2].value} />\n</SegmentedRadioGroup>;\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Properties\n\n| Name     | Description                                         |    Type     | Default |\n| :------- | :-------------------------------------------------- | :---------: | :-----: |\n| children | The content of the radio (usually, a label).        | `ReactNode` |         |\n| content  | The content of the radio (alternative to children). | `ReactNode` |         |\n| disabled | Toggles the `disabled` state of the radio.          |  `boolean`  | `false` |\n| value    | Control value                                       |  `string`   |         |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","actions_playground":"Playground","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_editor":"Editor","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less","pageNotFound":"Page Not Found","pageNotFoundDescription":"The page you are looking for doesn't exist or has been moved.","backToHome":"Back to Home"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"},"libraries-info":{"description_uikit":"Base UI components and tokens for building services with Gravity.","description_components":"A set of complex React components.","description_icons":"Set with hundreds of various modern SVG icons for your projects.","description_illustrations":"A set of illustrations for displaying data statuses.","description_dynamic-forms":"Library for rendering neat and functional react forms described by JSON schema","description_page-constructor":"A set of stylish, functional blocks for quickly creating promo and landing pages.","description_blog-constructor":"A library based on the Page constructor library for creating blog-like services.","description_chartkit":"A data visualization suite integrated with our design system.","description_dashkit":"A grid component for building interactive dashboards.","description_yagr":"A high-performance canvas charts renderer, based on uPlot.","description_nodekit":"A simple toolkit for your Node.js apps, scripts and libraries.","description_expresskit":"Lightweight express.js wrapper that integrates with NodeKit.","description_app-layout":"HTML layout generator used in our SPA applications.","description_app-builder":"Webpack-based static assets builder used in our SPA applications.","description_navigation":"A compact and extensible navigation panel for complex services.","description_date-utils":"Helpers for managing Date and Time values.","description_date-components":"Various date components.","description_axios-wrapper":"Axios wrapper that provides automatic cancelling of concurrent requests.","description_dialog-fields":"A react-final-form wrapper that provides some useful high-level components for building forms.","description_paranoid":"Cluster topologies visualizator.","description_react-data-table":"A react component for rendering big and complex tables.","description_unipika":"Data formatting library.","description_ui-logger":"Simple client-side logger.","description_oauth-clients":"Client OAuth library that provides convenient abstraction on top of auth flow.","description_i18n":"Internationalization helpers of Gravity UI projects.","description_eslint-config":"ESLint configuration preset for Gravity UI projects.","description_tsconfig":"TypeScript compiler configuration preset for Gravity UI projects.","description_prettier-config":"Prettier configuration preset for Gravity UI projects.","description_stylelint-config":"Stylelint configuration preset for Gravity UI projects.","description_babel-preset":"Babel configuration preset for Gravity UI projects.","description_browserslist-config":"Browserslist confugiration preset used in our services.","description_markdown-editor":"A powerful tool for working with Markdown, which combines WYSIWYG and Markup modes.","description_graph":"High-performance graph renderer with dynamic scale-aware detailization","description_data-source":"A wrapper around data fetching.","description_webpack-i18n-assets-plugin":"A plugin for Webpack that replaces calls to localization functions (i18n) with target texts.","description_table":"Library for visualizing data in tabular format."}}},"initialLocale":"en","ns":["common","component","libraries-info"],"userConfig":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"],"default":{"i18n":{"locales":["en","ru","es","zh"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"aiTranslatedLocales":["es","zh"],"routesWithoutRedirect":["/sandbox","/rtl","/__stand"]}}}},"__N_SSG":true}